!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AbstractHandler	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^abstract class AbstractHandler implements HandlerInterface, ResettableInterface$/;"	c
AbstractHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^class AbstractHandlerTest extends TestCase$/;"	c
AbstractLogger	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^abstract class AbstractLogger implements LoggerInterface$/;"	c
AbstractProcessingHandler	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php	/^abstract class AbstractProcessingHandler extends AbstractHandler$/;"	c
AbstractProcessingHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^class AbstractProcessingHandlerTest extends TestCase$/;"	c
AbstractSyslogHandler	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^abstract class AbstractSyslogHandler extends AbstractProcessingHandler$/;"	c
ActivationStrategyInterface	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ActivationStrategyInterface.php	/^interface ActivationStrategyInterface$/;"	i
AmqpHandler	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^class AmqpHandler extends AbstractProcessingHandler$/;"	c
AmqpHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^class AmqpHandlerTest extends TestCase$/;"	c
ArrayBuilder	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function ArrayBuilder () {$/;"	f
Article	src/service/article/Article.php	/^class Article extends Basic$/;"	c
ArticleAttr	src/model/mysql/content/ArticleAttr.php	/^class ArticleAttr extends Mysql$/;"	c
ArticleBasic	src/model/mysql/content/ArticleBasic.php	/^class ArticleBasic extends Mysql$/;"	c
ArticleDetails	src/model/mysql/content/ArticleDetails.php	/^class ArticleDetails extends Mysql$/;"	c
ArticleList	src/servant/Article/Server/Obj/classes/ArticleList.php	/^class ArticleList extends \\TARS_Struct {$/;"	c
ArticleRelationship	src/model/mysql/content/ArticleRelationship.php	/^class ArticleRelationship extends Mysql$/;"	c
ArticleResource	src/model/mysql/content/ArticleResource.php	/^class ArticleResource extends Mysql$/;"	c
ArticleServant	src/servant/Article/Server/Obj/ArticleServant.php	/^interface ArticleServant {$/;"	i
ArticleServantImpl	src/impl/ArticleServantImpl.php	/^class ArticleServantImpl implements ArticleServant$/;"	c
Basic	src/service/Basic.php	/^class Basic$/;"	c
BrowserConsoleHandler	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^class BrowserConsoleHandler extends AbstractProcessingHandler$/;"	c
BrowserConsoleHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^class BrowserConsoleHandlerTest extends TestCase$/;"	c
BufferHandler	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^class BufferHandler extends AbstractHandler$/;"	c
BufferHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^class BufferHandlerTest extends TestCase$/;"	c
ChannelLevelActivationStrategy	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^class ChannelLevelActivationStrategy implements ActivationStrategyInterface$/;"	c
ChromePHPFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^class ChromePHPFormatter implements FormatterInterface$/;"	c
ChromePHPFormatterTest	src/vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^class ChromePHPFormatterTest extends \\PHPUnit_Framework_TestCase$/;"	c
ChromePHPHandler	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^class ChromePHPHandler extends AbstractProcessingHandler$/;"	c
ChromePHPHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^class ChromePHPHandlerTest extends TestCase$/;"	c
ClassLoader	src/vendor/composer/ClassLoader.php	/^class ClassLoader$/;"	c
ClientConf	src/vendor/phptars/tars-server/tests/ClientConf.php	/^class ClientConf$/;"	c
Code	src/vendor/phptars/tars-client/src/Code.php	/^class Code$/;"	c
Code	src/vendor/phptars/tars-monitor/src/client/Code.php	/^class Code$/;"	c
Code	src/vendor/phptars/tars-server/src/Code.php	/^class Code$/;"	c
CodeMonitor	src/vendor/phptars/tars-monitor/src/client/CodeMonitor.php	/^class CodeMonitor$/;"	c
CodeRegistry	src/vendor/phptars/tars-registry/src/client/CodeRegistry.php	/^class CodeRegistry$/;"	c
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_BOOL_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_CHAR_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_DOUBLE_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_FLOAT_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_INT32_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_INT64_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_MAP_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_SHORT_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_STRING_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_STRUCT_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_UINT16_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_UINT32_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_UINT8_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_GET_VECTOR_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_BOOL_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_CHAR_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_DOUBLE_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_FLOAT_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_INT32_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_INT64_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_MAP_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_SHORT_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_STRING_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_STRUCT_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_UINT16_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_UINT32_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_UINT8_FAILED;$/;"	v
CodeRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            $CodeRegistry = CodeRegistry::TARS_PUT_VECTOR_FAILED;$/;"	v
Command	src/vendor/phptars/tars-server/src/cmd/Command.php	/^class Command$/;"	c
CommandBase	src/vendor/phptars/tars-server/src/cmd/CommandBase.php	/^class CommandBase$/;"	c
Common	src/common/Common.php	/^class Common$/;"	c
Communicator	src/vendor/phptars/tars-client/src/Communicator.php	/^class Communicator$/;"	c
CommunicatorConfig	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^class CommunicatorConfig$/;"	c
CommunicatorConfig	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^class CommunicatorConfig$/;"	c
CommunicatorMonitor	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^class CommunicatorMonitor$/;"	c
CommunicatorRegistry	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^class CommunicatorRegistry$/;"	c
ComplicatedStruct	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^class ComplicatedStruct extends \\TARS_Struct$/;"	c
ComplicatedStruct	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^class ComplicatedStruct extends \\TARS_Struct {$/;"	c
ComplicatedStruct	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^class ComplicatedStruct extends \\TARS_Struct {$/;"	c
ComposerAutoloaderInit574af4278003c7859f368489409dc322	src/vendor/composer/autoload_real.php	/^class ComposerAutoloaderInit574af4278003c7859f368489409dc322$/;"	c
ComposerStaticInit574af4278003c7859f368489409dc322	src/vendor/composer/autoload_static.php	/^class ComposerStaticInit574af4278003c7859f368489409dc322$/;"	c
Conf	src/vendor/phptars/tars-server/tests/testConf.php	/^class Conf$/;"	c
Conf	src/vendor/phptars/tars-utils/src/Conf.php	/^class Conf$/;"	c
ConfigInfo	src/vendor/phptars/tars-config/src/classes/ConfigInfo.php	/^class ConfigInfo extends \\TARS_Struct$/;"	c
ConfigServant	src/vendor/phptars/tars-config/src/ConfigServant.php	/^class ConfigServant$/;"	c
Consts	src/vendor/phptars/tars-client/src/Consts.php	/^class Consts$/;"	c
Consts	src/vendor/phptars/tars-monitor/src/client/Consts.php	/^class Consts$/;"	c
Consts	src/vendor/phptars/tars-server/src/Consts.php	/^class Consts$/;"	c
CouchDBHandler	src/vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^class CouchDBHandler extends AbstractProcessingHandler$/;"	c
CouchDBHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/CouchDBHandlerTest.php	/^class CouchDBHandlerTest extends TestCase$/;"	c
CubeHandler	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^class CubeHandler extends AbstractProcessingHandler$/;"	c
DBConf	src/conf/DBConf.php	/^class DBConf$/;"	c
DbMysqli	src/libs/DbMysqli.php	/^class DbMysqli extends \\dbObject$/;"	c
DeduplicationHandler	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^class DeduplicationHandler extends BufferHandler$/;"	c
DeduplicationHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^class DeduplicationHandlerTest extends TestCase$/;"	c
Deploy	src/vendor/phptars/tars-deploy/src/Deploy.php	/^class Deploy$/;"	c
DoctrineCouchDBHandler	src/vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^class DoctrineCouchDBHandler extends AbstractProcessingHandler$/;"	c
DoctrineCouchDBHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^class DoctrineCouchDBHandlerTest extends TestCase$/;"	c
DummyTest	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^class DummyTest$/;"	c
DynamoDbHandler	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^class DynamoDbHandler extends AbstractProcessingHandler$/;"	c
DynamoDbHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^class DynamoDbHandlerTest extends TestCase$/;"	c
ENVConf	src/conf/ENVConf.php	/^class ENVConf$/;"	c
ElasticSearchHandler	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^class ElasticSearchHandler extends AbstractProcessingHandler$/;"	c
ElasticSearchHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^class ElasticSearchHandlerTest extends TestCase$/;"	c
ElasticaFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^class ElasticaFormatter extends NormalizerFormatter$/;"	c
ElasticaFormatterTest	src/vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^class ElasticaFormatterTest extends \\PHPUnit_Framework_TestCase$/;"	c
EndpointF	src/vendor/phptars/tars-registry/src/EndpointF.php	/^class EndpointF extends \\TARS_Struct$/;"	c
ErrorHandler	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^class ErrorHandler$/;"	c
ErrorHandlerTest	src/vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^class ErrorHandlerTest extends \\PHPUnit_Framework_TestCase$/;"	c
ErrorLevelActivationStrategy	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ErrorLevelActivationStrategy.php	/^class ErrorLevelActivationStrategy implements ActivationStrategyInterface$/;"	c
ErrorLogHandler	src/vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^class ErrorLogHandler extends AbstractProcessingHandler$/;"	c
ErrorLogHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^class ErrorLogHandlerTest extends TestCase$/;"	c
Event	src/vendor/phptars/tars-server/src/core/Event.php	/^class Event$/;"	c
ExceptionTestHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^class ExceptionTestHandler extends TestHandler$/;"	c
FileConverter	src/vendor/phptars/tars2php/src/tars2php.php	/^class FileConverter$/;"	c
FilterHandler	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^class FilterHandler extends AbstractHandler$/;"	c
FilterHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^class FilterHandlerTest extends TestCase$/;"	c
FingersCrossedHandler	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^class FingersCrossedHandler extends AbstractHandler$/;"	c
FingersCrossedHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^class FingersCrossedHandlerTest extends TestCase$/;"	c
FirePHPHandler	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^class FirePHPHandler extends AbstractProcessingHandler$/;"	c
FirePHPHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^class FirePHPHandlerTest extends TestCase$/;"	c
FleepHookHandler	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^class FleepHookHandler extends SocketHandler$/;"	c
FleepHookHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^class FleepHookHandlerTest extends TestCase$/;"	c
FlowdockFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^class FlowdockFormatter implements FormatterInterface$/;"	c
FlowdockFormatterTest	src/vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^class FlowdockFormatterTest extends TestCase$/;"	c
FlowdockHandler	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^class FlowdockHandler extends SocketHandler$/;"	c
FlowdockHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^class FlowdockHandlerTest extends TestCase$/;"	c
FluentdFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^class FluentdFormatter implements FormatterInterface$/;"	c
FluentdFormatterTest	src/vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^class FluentdFormatterTest extends TestCase$/;"	c
FormatterInterface	src/vendor/monolog/monolog/src/Monolog/Formatter/FormatterInterface.php	/^interface FormatterInterface$/;"	i
GROUP	src/vendor/catfan/medoo/src/Medoo.php	/^				$GROUP = $where[ 'GROUP' ];$/;"	v
GelfHandler	src/vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^class GelfHandler extends AbstractProcessingHandler$/;"	c
GelfHandlerLegacyTest	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^class GelfHandlerLegacyTest extends TestCase$/;"	c
GelfHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^class GelfHandlerTest extends TestCase$/;"	c
GelfMessageFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^class GelfMessageFormatter extends NormalizerFormatter$/;"	c
GelfMessageFormatterTest	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^class GelfMessageFormatterTest extends \\PHPUnit_Framework_TestCase$/;"	c
GelfMockMessagePublisher	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfMockMessagePublisher.php	/^class GelfMockMessagePublisher extends MessagePublisher$/;"	c
GetConfigListInfo	src/vendor/phptars/tars-config/src/classes/GetConfigListInfo.php	/^class GetConfigListInfo extends \\TARS_Struct$/;"	c
GitProcessor	src/vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^class GitProcessor implements ProcessorInterface$/;"	c
GitProcessorTest	src/vendor/monolog/monolog/tests/Monolog/Processor/GitProcessorTest.php	/^class GitProcessorTest extends TestCase$/;"	c
GroupHandler	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^class GroupHandler extends AbstractHandler$/;"	c
GroupHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^class GroupHandlerTest extends TestCase$/;"	c
HTTPProtocol	src/vendor/phptars/tars-server/src/protocol/HTTPProtocol.php	/^class HTTPProtocol implements Protocol$/;"	c
HandlerInterface	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^interface HandlerInterface$/;"	i
HandlerWrapper	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^class HandlerWrapper implements HandlerInterface, ResettableInterface$/;"	c
HandlerWrapperTest	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^class HandlerWrapperTest extends TestCase$/;"	c
HipChatHandler	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^class HipChatHandler extends SocketHandler$/;"	c
HipChatHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^class HipChatHandlerTest extends TestCase$/;"	c
HtmlFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^class HtmlFormatter extends NormalizerFormatter$/;"	c
IFTTTHandler	src/vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^class IFTTTHandler extends AbstractProcessingHandler$/;"	c
IncludeParser	src/vendor/phptars/tars2php/src/tars2php.php	/^class IncludeParser$/;"	c
InsightOpsHandler	src/vendor/monolog/monolog/src/Monolog/Handler/InsightOpsHandler.php	/^class InsightOpsHandler extends SocketHandler$/;"	c
InsightOpsHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/InsightOpsHandlerTest.php	/^class InsightOpsHandlerTest extends TestCase$/;"	c
InterfaceFuncParseLine	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function InterfaceFuncParseLine()$/;"	f
InterfaceParser	src/vendor/phptars/tars2php/src/tars2php.php	/^class InterfaceParser$/;"	c
IntrospectionProcessor	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^class IntrospectionProcessor implements ProcessorInterface$/;"	c
IntrospectionProcessorTest	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^class IntrospectionProcessorTest extends TestCase$/;"	c
InvalidArgumentException	src/vendor/psr/log/Psr/Log/InvalidArgumentException.php	/^class InvalidArgumentException extends \\InvalidArgumentException$/;"	c
JSONProtocol	src/vendor/phptars/tars-server/src/protocol/JSONProtocol.php	/^class JSONProtocol$/;"	c
JsonBuilder	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function JsonBuilder () {$/;"	f
JsonFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^class JsonFormatter extends NormalizerFormatter$/;"	c
JsonFormatterTest	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^class JsonFormatterTest extends TestCase$/;"	c
LIMIT	src/vendor/catfan/medoo/src/Medoo.php	/^						$LIMIT = [0, $LIMIT];$/;"	v
LIMIT	src/vendor/catfan/medoo/src/Medoo.php	/^					$LIMIT = $where[ 'LIMIT' ];$/;"	v
LIMIT	src/vendor/catfan/medoo/src/Medoo.php	/^				$LIMIT = $where[ 'LIMIT' ];$/;"	v
LineFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^class LineFormatter extends NormalizerFormatter$/;"	c
LineFormatterTest	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^class LineFormatterTest extends \\PHPUnit_Framework_TestCase$/;"	c
ListAllConfigByInfo	src/vendor/phptars/tars-config/src/ConfigServant.php	/^    public function ListAllConfigByInfo(GetConfigListInfo $configInfo, &$vf)$/;"	f
ListConfig	src/vendor/phptars/tars-config/src/ConfigServant.php	/^    public function ListConfig($app, $server, &$vf)$/;"	f
ListConfigByInfo	src/vendor/phptars/tars-config/src/ConfigServant.php	/^    public function ListConfigByInfo(ConfigInfo $configInfo, &$vf)$/;"	f
ListParam	src/servant/Article/Server/Obj/classes/ListParam.php	/^class ListParam extends \\TARS_Struct {$/;"	c
Loader	src/libs/Loader.php	/^class Loader$/;"	c
LogEntriesHandler	src/vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^class LogEntriesHandler extends SocketHandler$/;"	c
LogEntriesHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^class LogEntriesHandlerTest extends TestCase$/;"	c
LogInfo	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^class LogInfo extends \\TARS_Struct$/;"	c
LogLevel	src/vendor/psr/log/Psr/Log/LogLevel.php	/^class LogLevel$/;"	c
LogServant	src/vendor/phptars/tars-log/src/LogServant.php	/^class LogServant$/;"	c
Logger	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^class Logger implements LoggerInterface, ResettableInterface$/;"	c
LoggerAwareInterface	src/vendor/psr/log/Psr/Log/LoggerAwareInterface.php	/^interface LoggerAwareInterface$/;"	i
LoggerInterface	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^interface LoggerInterface$/;"	i
LoggerInterfaceTest	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^abstract class LoggerInterfaceTest extends \\PHPUnit_Framework_TestCase$/;"	c
LoggerTest	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^class LoggerTest extends \\PHPUnit_Framework_TestCase$/;"	c
LogglyFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/LogglyFormatter.php	/^class LogglyFormatter extends JsonFormatter$/;"	c
LogglyFormatterTest	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^class LogglyFormatterTest extends TestCase$/;"	c
LogglyHandler	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^class LogglyHandler extends AbstractProcessingHandler$/;"	c
LogstashFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^class LogstashFormatter extends NormalizerFormatter$/;"	c
LogstashFormatterTest	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^class LogstashFormatterTest extends \\PHPUnit_Framework_TestCase$/;"	c
LotofTags	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/LotofTags.php	/^class LotofTags extends \\TARS_Struct$/;"	c
LotofTags	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/LotofTags.php	/^class LotofTags extends \\TARS_Struct {$/;"	c
LotofTags	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/LotofTags.php	/^class LotofTags extends \\TARS_Struct {$/;"	c
M	src/service/validate/article/ValidateArticle.php	/^        $M = new ArticleBasic();$/;"	v
MATCH	src/vendor/catfan/medoo/src/Medoo.php	/^				$MATCH = $where[ 'MATCH' ];$/;"	v
MailHandler	src/vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^abstract class MailHandler extends AbstractProcessingHandler$/;"	c
MailHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^class MailHandlerTest extends TestCase$/;"	c
MandrillHandler	src/vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^class MandrillHandler extends MailHandler$/;"	c
Medoo	src/vendor/catfan/medoo/src/Medoo.php	/^class Medoo$/;"	c
MemoryPeakUsageProcessor	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryPeakUsageProcessor.php	/^class MemoryPeakUsageProcessor extends MemoryProcessor$/;"	c
MemoryPeakUsageProcessorTest	src/vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php	/^class MemoryPeakUsageProcessorTest extends TestCase$/;"	c
MemoryProcessor	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^abstract class MemoryProcessor implements ProcessorInterface$/;"	c
MemoryUsageProcessor	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryUsageProcessor.php	/^class MemoryUsageProcessor extends MemoryProcessor$/;"	c
MemoryUsageProcessorTest	src/vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php	/^class MemoryUsageProcessorTest extends TestCase$/;"	c
MercurialProcessor	src/vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^class MercurialProcessor implements ProcessorInterface$/;"	c
MercurialProcessorTest	src/vendor/monolog/monolog/tests/Monolog/Processor/MercurialProcessorTest.php	/^class MercurialProcessorTest extends TestCase$/;"	c
MissingExtensionException	src/vendor/monolog/monolog/src/Monolog/Handler/MissingExtensionException.php	/^class MissingExtensionException extends \\Exception$/;"	c
MockRavenClient	src/vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^class MockRavenClient extends Raven_Client$/;"	c
Mongo	src/vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^    class Mongo$/;"	c
MongoDBFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^class MongoDBFormatter implements FormatterInterface$/;"	c
MongoDBFormatterTest	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^class MongoDBFormatterTest extends \\PHPUnit_Framework_TestCase$/;"	c
MongoDBHandler	src/vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^class MongoDBHandler extends AbstractProcessingHandler$/;"	c
MongoDBHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^class MongoDBHandlerTest extends TestCase$/;"	c
Mysql	src/libs/Mysql.php	/^class Mysql extends \\dbObject$/;"	c
MysqliDb	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^class MysqliDb$/;"	c
NativeMailerHandler	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^class NativeMailerHandler extends MailHandler$/;"	c
NativeMailerHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^class NativeMailerHandlerTest extends TestCase$/;"	c
NewRelicHandler	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^class NewRelicHandler extends AbstractProcessingHandler$/;"	c
NewRelicHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^class NewRelicHandlerTest extends TestCase$/;"	c
NormalizerFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^class NormalizerFormatter implements FormatterInterface$/;"	c
NormalizerFormatterTest	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^class NormalizerFormatterTest extends \\PHPUnit_Framework_TestCase$/;"	c
NullHandler	src/vendor/monolog/monolog/src/Monolog/Handler/NullHandler.php	/^class NullHandler extends AbstractHandler$/;"	c
NullHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/NullHandlerTest.php	/^class NullHandlerTest extends TestCase$/;"	c
NullLogger	src/vendor/psr/log/Psr/Log/NullLogger.php	/^class NullLogger extends AbstractLogger$/;"	c
ORDER	src/vendor/catfan/medoo/src/Medoo.php	/^				$ORDER = $where[ 'ORDER' ];$/;"	v
ObjectBuilder	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function ObjectBuilder () {$/;"	f
OutStruct	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/OutStruct.php	/^class OutStruct extends \\TARS_Struct$/;"	c
OutStruct	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/OutStruct.php	/^class OutStruct extends \\TARS_Struct {$/;"	c
OutStruct	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/OutStruct.php	/^class OutStruct extends \\TARS_Struct {$/;"	c
PHPConsoleHandler	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^class PHPConsoleHandler extends AbstractProcessingHandler$/;"	c
PHPConsoleHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^class PHPConsoleHandlerTest extends TestCase$/;"	c
ProcessIdProcessor	src/vendor/monolog/monolog/src/Monolog/Processor/ProcessIdProcessor.php	/^class ProcessIdProcessor implements ProcessorInterface$/;"	c
ProcessIdProcessorTest	src/vendor/monolog/monolog/tests/Monolog/Processor/ProcessIdProcessorTest.php	/^class ProcessIdProcessorTest extends TestCase$/;"	c
ProcessorInterface	src/vendor/monolog/monolog/src/Monolog/Processor/ProcessorInterface.php	/^interface ProcessorInterface$/;"	i
PropertyFServant	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^class PropertyFServant$/;"	c
PropertyFWrapper	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^class PropertyFWrapper$/;"	c
Protocol	src/vendor/phptars/tars-server/src/protocol/Protocol.php	/^interface Protocol$/;"	i
ProtocolFactory	src/vendor/phptars/tars-server/src/protocol/ProtocolFactory.php	/^class ProtocolFactory$/;"	c
ProxyInfo	src/vendor/phptars/tars-monitor/src/classes/ProxyInfo.php	/^class ProxyInfo extends \\TARS_Struct$/;"	c
PsrHandler	src/vendor/monolog/monolog/src/Monolog/Handler/PsrHandler.php	/^class PsrHandler extends AbstractHandler$/;"	c
PsrHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^class PsrHandlerTest extends TestCase$/;"	c
PsrLogCompatTest	src/vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^class PsrLogCompatTest extends LoggerInterfaceTest$/;"	c
PsrLogMessageProcessor	src/vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php	/^class PsrLogMessageProcessor implements ProcessorInterface$/;"	c
PsrLogMessageProcessorTest	src/vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^class PsrLogMessageProcessorTest extends \\PHPUnit_Framework_TestCase$/;"	c
PushoverHandler	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^class PushoverHandler extends SocketHandler$/;"	c
PushoverHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^class PushoverHandlerTest extends TestCase$/;"	c
QueryFServant	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^class QueryFServant$/;"	c
QueryFWrapper	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^class QueryFWrapper$/;"	c
RavenHandler	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^class RavenHandler extends AbstractProcessingHandler$/;"	c
RavenHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^class RavenHandlerTest extends TestCase$/;"	c
Raw	src/vendor/catfan/medoo/src/Medoo.php	/^class Raw {$/;"	c
RedisHandler	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^class RedisHandler extends AbstractProcessingHandler$/;"	c
RedisHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^class RedisHandlerTest extends TestCase$/;"	c
RedisStoreCache	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^class RedisStoreCache implements StoreCacheInterface$/;"	c
Registry	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^class Registry$/;"	c
RegistryTest	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^class RegistryTest extends \\PHPUnit_Framework_TestCase$/;"	c
Request	src/vendor/phptars/tars-server/src/core/Request.php	/^class Request$/;"	c
RequestPacket	src/vendor/phptars/tars-client/src/RequestPacket.php	/^class RequestPacket$/;"	c
RequestPacket	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^class RequestPacket$/;"	c
RequestPacketMonitor	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^class RequestPacketMonitor$/;"	c
RequestPacketRegistry	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^class RequestPacketRegistry$/;"	c
ResettableInterface	src/vendor/monolog/monolog/src/Monolog/ResettableInterface.php	/^interface ResettableInterface$/;"	i
Response	src/vendor/phptars/tars-server/src/core/Response.php	/^class Response$/;"	c
ResponsePacket	src/vendor/phptars/tars-client/src/ResponsePacket.php	/^class ResponsePacket$/;"	c
ResponsePacket	src/vendor/phptars/tars-monitor/src/client/ResponsePacket.php	/^class ResponsePacket$/;"	c
ResponsePacketMonitor	src/vendor/phptars/tars-monitor/src/client/ResponsePacketMonitor.php	/^class ResponsePacketMonitor$/;"	c
ResponsePacketRegistry	src/vendor/phptars/tars-registry/src/client/ResponsePacketRegistry.php	/^class ResponsePacketRegistry$/;"	c
Restart	src/vendor/phptars/tars-server/src/cmd/Restart.php	/^class Restart extends CommandBase$/;"	c
RollbarHandler	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^class RollbarHandler extends AbstractProcessingHandler$/;"	c
RollbarHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^class RollbarHandlerTest extends TestCase$/;"	c
RotatingFileHandler	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^class RotatingFileHandler extends StreamHandler$/;"	c
RotatingFileHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^class RotatingFileHandlerTest extends TestCase$/;"	c
RouteTable	src/vendor/phptars/tars-registry/src/RouteTable.php	/^class RouteTable$/;"	c
SamplingHandler	src/vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^class SamplingHandler extends AbstractHandler$/;"	c
SamplingHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/SamplingHandlerTest.php	/^class SamplingHandlerTest extends TestCase$/;"	c
ScalarFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/ScalarFormatter.php	/^class ScalarFormatter extends NormalizerFormatter$/;"	c
ScalarFormatterTest	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^class ScalarFormatterTest extends \\PHPUnit_Framework_TestCase$/;"	c
ServantParser	src/vendor/phptars/tars2php/src/tars2php.php	/^class ServantParser$/;"	c
Server	src/vendor/phptars/tars-server/src/core/Server.php	/^class Server$/;"	c
ServerF	src/vendor/phptars/tars-report/src/ServerF.php	/^class ServerF$/;"	c
ServerFAsync	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^class ServerFAsync$/;"	c
ServerFSync	src/vendor/phptars/tars-report/src/ServerFSync.php	/^class ServerFSync$/;"	c
ServerInfo	src/vendor/phptars/tars-report/src/ServerInfo.php	/^class ServerInfo extends \\TARS_Struct$/;"	c
SignalHandler	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^class SignalHandler$/;"	c
SignalHandlerTest	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^class SignalHandlerTest extends TestCase$/;"	c
SimpleStruct	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^class SimpleStruct extends \\TARS_Struct$/;"	c
SimpleStruct	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^class SimpleStruct extends \\TARS_Struct {$/;"	c
SimpleStruct	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^class SimpleStruct extends \\TARS_Struct {$/;"	c
SlackHandler	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^class SlackHandler extends SocketHandler$/;"	c
SlackHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^class SlackHandlerTest extends TestCase$/;"	c
SlackRecord	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^class SlackRecord$/;"	c
SlackRecordTest	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^class SlackRecordTest extends TestCase$/;"	c
SlackWebhookHandler	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^class SlackWebhookHandler extends AbstractProcessingHandler$/;"	c
SlackWebhookHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^class SlackWebhookHandlerTest extends TestCase$/;"	c
SlackbotHandler	src/vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^class SlackbotHandler extends AbstractProcessingHandler$/;"	c
SlackbotHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackbotHandlerTest.php	/^class SlackbotHandlerTest extends TestCase$/;"	c
SocketHandler	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^class SocketHandler extends AbstractProcessingHandler$/;"	c
SocketHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^class SocketHandlerTest extends TestCase$/;"	c
Start	src/vendor/phptars/tars-server/src/cmd/Start.php	/^class Start extends CommandBase$/;"	c
StatFServant	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^class StatFServant$/;"	c
StatFWrapper	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^class StatFWrapper$/;"	c
StatMicMsgBody	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgBody.php	/^class StatMicMsgBody extends \\TARS_Struct$/;"	c
StatMicMsgHead	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^class StatMicMsgHead extends \\TARS_Struct$/;"	c
StatPropInfo	src/vendor/phptars/tars-monitor/src/classes/StatPropInfo.php	/^class StatPropInfo extends \\TARS_Struct$/;"	c
StatPropMsgBody	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgBody.php	/^class StatPropMsgBody extends \\TARS_Struct$/;"	c
StatPropMsgHead	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgHead.php	/^class StatPropMsgHead extends \\TARS_Struct$/;"	c
StatSampleMsg	src/vendor/phptars/tars-monitor/src/classes/StatSampleMsg.php	/^class StatSampleMsg extends \\TARS_Struct$/;"	c
Stop	src/vendor/phptars/tars-server/src/cmd/Stop.php	/^class Stop extends CommandBase$/;"	c
StoreCacheInterface	src/vendor/phptars/tars-monitor/src/contract/StoreCacheInterface.php	/^interface StoreCacheInterface$/;"	i
StreamHandler	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^class StreamHandler extends AbstractProcessingHandler$/;"	c
StreamHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^class StreamHandlerTest extends TestCase$/;"	c
StructParser	src/vendor/phptars/tars2php/src/tars2php.php	/^class StructParser$/;"	c
StubNewRelicHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^class StubNewRelicHandler extends NewRelicHandler$/;"	c
StubNewRelicHandlerWithoutExtension	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^class StubNewRelicHandlerWithoutExtension extends NewRelicHandler$/;"	c
SwiftMailerHandler	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^class SwiftMailerHandler extends MailHandler$/;"	c
SwiftMailerHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^class SwiftMailerHandlerTest extends TestCase$/;"	c
SwooleTableStoreCache	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^class SwooleTableStoreCache implements StoreCacheInterface$/;"	c
SyslogHandler	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^class SyslogHandler extends AbstractSyslogHandler$/;"	c
SyslogHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^class SyslogHandlerTest extends \\PHPUnit_Framework_TestCase$/;"	c
SyslogUdpHandler	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^class SyslogUdpHandler extends AbstractSyslogHandler$/;"	c
SyslogUdpHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^class SyslogUdpHandlerTest extends TestCase$/;"	c
TARSProtocol	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^class TARSProtocol implements Protocol$/;"	c
TUPAPIWrapper	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^class TUPAPIWrapper$/;"	c
TUPAPIWrapper	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^class TUPAPIWrapper$/;"	c
TUPAPIWrapperMonitor	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^class TUPAPIWrapperMonitor$/;"	c
TUPAPIWrapperRegistry	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^class TUPAPIWrapperRegistry$/;"	c
TagProcessor	src/vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^class TagProcessor implements ProcessorInterface$/;"	c
TagProcessorTest	src/vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php	/^class TagProcessorTest extends TestCase$/;"	c
TarsHandler	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^class TarsHandler extends AbstractProcessingHandler$/;"	c
TestBar	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^class TestBar$/;"	c
TestBarNorm	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^class TestBarNorm$/;"	c
TestCase	src/vendor/monolog/monolog/tests/Monolog/TestCase.php	/^class TestCase extends \\PHPUnit_Framework_TestCase$/;"	c
TestChromePHPHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^class TestChromePHPHandler extends ChromePHPHandler$/;"	c
TestFirePHPHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^class TestFirePHPHandler extends FirePHPHandler$/;"	c
TestFoo	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^class TestFoo$/;"	c
TestFooNorm	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^class TestFooNorm$/;"	c
TestHandler	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^class TestHandler extends AbstractProcessingHandler$/;"	c
TestHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^class TestHandlerTest extends TestCase$/;"	c
TestInfoLeak	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^class TestInfoLeak$/;"	c
TestStreamFoo	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^class TestStreamFoo$/;"	c
TestTafServiceServant	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^class TestTafServiceServant$/;"	c
TestTafServiceServant	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^class TestTafServiceServant {$/;"	c
TestTafServiceServant	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^interface TestTafServiceServant {$/;"	i
TestToStringError	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^class TestToStringError$/;"	c
Tester	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^class Tester$/;"	c
Tokens	src/vendor/phptars/tars2php/src/tars2php.php	/^        $Tokens = preg_split("\/$name\/", $line);$/;"	v
UdpSocket	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^class UdpSocket$/;"	c
UdpSocketTest	src/vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^class UdpSocketTest extends TestCase$/;"	c
UidProcessor	src/vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^class UidProcessor implements ProcessorInterface, ResettableInterface$/;"	c
UidProcessorTest	src/vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php	/^class UidProcessorTest extends TestCase$/;"	c
Util	src/vendor/monolog/monolog/src/Monolog/Handler/Curl/Util.php	/^class Util$/;"	c
Utils	src/vendor/monolog/monolog/src/Monolog/Utils.php	/^class Utils$/;"	c
Utils	src/vendor/phptars/tars-utils/src/Utils.php	/^class Utils$/;"	c
Utils	src/vendor/phptars/tars2php/src/tars2php.php	/^class Utils$/;"	c
Validate	src/service/validate/Validate.php	/^class Validate extends Basic$/;"	c
ValidateArticle	src/service/validate/article/ValidateArticle.php	/^class ValidateArticle extends validate$/;"	c
VecMapReplace	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function VecMapReplace($word)$/;"	f
WebProcessor	src/vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^class WebProcessor implements ProcessorInterface$/;"	c
WebProcessorTest	src/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^class WebProcessorTest extends TestCase$/;"	c
WhatFailureGroupHandler	src/vendor/monolog/monolog/src/Monolog/Handler/WhatFailureGroupHandler.php	/^class WhatFailureGroupHandler extends GroupHandler$/;"	c
WhatFailureGroupHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^class WhatFailureGroupHandlerTest extends TestCase$/;"	c
WildfireFormatter	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^class WildfireFormatter extends NormalizerFormatter$/;"	c
WildfireFormatterTest	src/vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^class WildfireFormatterTest extends \\PHPUnit_Framework_TestCase$/;"	c
ZendMonitorHandler	src/vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^class ZendMonitorHandler extends AbstractProcessingHandler$/;"	c
ZendMonitorHandlerTest	src/vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^class ZendMonitorHandlerTest extends TestCase$/;"	c
_SERVER	src/vendor/phptars/tars-server/src/core/Request.php	/^            $_SERVER = $this->server;$/;"	v
_SERVER	src/vendor/phptars/tars-server/src/core/Request.php	/^        $_SERVER = array();$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putBool('a', 1, $a, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putInt32('a', 1, $a, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putInt32('b', 2, $b, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putInt64('a', 1, $a, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putMap('m1', 3, $m1_map, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putMap('mcs', 1, $mcs_map, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putShort('a', 1, $a, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putString('c', 3, $c, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putString('name', 1, $name, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putStruct('b', 2, $b, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putStruct('cs', 1, $cs, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putStruct('tags', 1, $tags, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putVector('v1', 2, $v1_vec, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putVector('v2', 3, $v2_vec, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $__buffer = TUPAPIWrapper::putVector('vcs', 2, $vcs_vec, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-log/src/LogServant.php	/^        $__buffer = TUPAPIWrapper::putString('app', 1, $app, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-log/src/LogServant.php	/^        $__buffer = TUPAPIWrapper::putString('file', 3, $file, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-log/src/LogServant.php	/^        $__buffer = TUPAPIWrapper::putString('format', 4, $format, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-log/src/LogServant.php	/^        $__buffer = TUPAPIWrapper::putString('server', 2, $server, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-log/src/LogServant.php	/^        $__buffer = TUPAPIWrapper::putStruct('info', 1, $info, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-log/src/LogServant.php	/^        $__buffer = TUPAPIWrapper::putVector('buffer', 2, $buffer_vec, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars-log/src/LogServant.php	/^        $__buffer = TUPAPIWrapper::putVector('buffer', 5, $buffer_vec, $this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putBool("a",1,$a,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putInt32("a",1,$a,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putInt32("b",2,$b,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putInt64("a",1,$a,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putMap("m1",3,$m1_map,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putMap("mcs",1,$mcs_map,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putShort("a",1,$a,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putString("c",3,$c,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putString("name",1,$name,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putStruct("b",2,$b,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putStruct("cs",1,$cs,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putStruct("tags",1,$tags,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putVector("v1",2,$v1_vec,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putVector("v2",3,$v2_vec,$this->_iVersion);$/;"	v
__buffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$__buffer = TUPAPIWrapper::putVector("vcs",2,$vcs_vec,$this->_iVersion);$/;"	v
__call	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public function __call ($method, $arg) {$/;"	f
__call	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function __call($method, $args)$/;"	f
__callStatic	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public static function __callStatic ($method, $arg) {$/;"	f
__callStatic	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function __callStatic($name, $arguments)$/;"	f
__clone	src/vendor/phptars/tars-registry/src/RouteTable.php	/^    private function __clone()$/;"	f
__construct	src/libs/DbMysqli.php	/^    public function __construct($connection = 'default')$/;"	f
__construct	src/servant/Article/Server/Obj/classes/ArticleList.php	/^	public function __construct() {$/;"	f
__construct	src/servant/Article/Server/Obj/classes/ListParam.php	/^	public function __construct() {$/;"	f
__construct	src/service/validate/Validate.php	/^    public function __construct()$/;"	f
__construct	src/service/validate/article/ValidateArticle.php	/^    public function __construct($data)$/;"	f
__construct	src/vendor/catfan/medoo/src/Medoo.php	/^	public function __construct(array $options)$/;"	f
__construct	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function __construct($host = null, $username = null, $password = null, $db = null, $port = null, $charset = 'utf8', $socket = null)$/;"	f
__construct	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public function __construct ($data = null) {$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function __construct(LoggerInterface $logger)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    public function __construct($index, $type)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^    public function __construct($source, $sourceEmail)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^    public function __construct($levelTag = false)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    public function __construct($systemName = null, $extraPrefix = null, $contextPrefix = 'ctxt_', $maxLength = null)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    public function __construct($dateFormat = null)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function __construct($batchMode = self::BATCH_MODE_JSON, $appendNewline = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function __construct($format = null, $dateFormat = null, $allowInlineLineBreaks = false, $ignoreEmptyContextAndExtra = false)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Formatter/LogglyFormatter.php	/^    public function __construct($batchMode = self::BATCH_MODE_NEWLINES, $appendNewline = false)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    public function __construct($applicationName, $systemName = null, $extraPrefix = null, $contextPrefix = 'ctxt_', $version = self::V0)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    public function __construct($maxNestingLevel = 3, $exceptionTraceAsString = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    public function __construct($dateFormat = null)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^    public function __construct($facility = LOG_USER, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    public function __construct($exchange, $exchangeName = 'log', $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function __construct(HandlerInterface $handler, $bufferLimit = 0, $level = Logger::DEBUG, $bubble = true, $flushOnOverflow = false)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^    public function __construct(array $options = array(), $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    public function __construct($url, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    public function __construct(HandlerInterface $handler, $deduplicationStore = null, $deduplicationLevel = Logger::ERROR, $time = 60, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^    public function __construct(CouchDBClient $client, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    public function __construct(DynamoDbClient $client, $table, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    public function __construct(Client $client, array $options = array(), $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    public function __construct($messageType = self::OPERATING_SYSTEM, $level = Logger::DEBUG, $bubble = true, $expandNewlines = false)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function __construct($handler, $minLevelOrList = Logger::DEBUG, $maxLevel = Logger::EMERGENCY, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^    public function __construct($defaultActionLevel, $channelToActionLevel = array())$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ErrorLevelActivationStrategy.php	/^    public function __construct($actionLevel)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function __construct($handler, $activationStrategy = null, $bufferSize = 0, $bubble = true, $stopBuffering = true, $passthruLevel = null)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    public function __construct($token, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    public function __construct($apiToken, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^    public function __construct($publisher, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    public function __construct(array $handlers, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function __construct(HandlerInterface $handler)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    public function __construct($token, $room, $name = 'Monolog', $notify = false, $level = Logger::CRITICAL, $bubble = true, $useSSL = true, $format = 'text', $host = 'api.hipchat.com', $version = self::API_V1)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^    public function __construct($eventName, $secretKey, $level = Logger::ERROR, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/InsightOpsHandler.php	/^    public function __construct($token, $region = 'us', $useSSL = true, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^    public function __construct($token, $useSSL = true, $level = Logger::DEBUG, $bubble = true, $host = 'data.logentries.com')$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    public function __construct($token, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^    public function __construct($apiKey, $message, $level = Logger::ERROR, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^    public function __construct($mongo, $database, $collection, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function __construct($to, $subject, $from, $level = Logger::ERROR, $bubble = true, $maxColumnWidth = 70)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    public function __construct($/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/NullHandler.php	/^    public function __construct($level = Logger::DEBUG)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    public function __construct(array $options = array(), Connector $connector = null, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/PsrHandler.php	/^    public function __construct(LoggerInterface $logger, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    public function __construct($token, $users, $title = null, $level = Logger::CRITICAL, $bubble = true, $useSSL = true, $highPriorityLevel = Logger::CRITICAL, $emergencyLevel = Logger::EMERGENCY, $retry = 30, $expire = 25200)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    public function __construct(Raven_Client $ravenClient, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    public function __construct($redis, $key, $level = Logger::DEBUG, $bubble = true, $capSize = false)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    public function __construct(RollbarNotifier $rollbarNotifier, $level = Logger::ERROR, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    public function __construct($filename, $maxFiles = 0, $level = Logger::DEBUG, $bubble = true, $filePermission = null, $useLocking = false)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^    public function __construct($handler, $factor)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    public function __construct($channel = null, $username = null, $useAttachment = true, $userIcon = null, $useShortAttachment = false, $includeContextAndExtra = false, array $excludeFields = array(), FormatterInterface $formatter = null)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    public function __construct($token, $channel, $username = null, $useAttachment = true, $iconEmoji = null, $level = Logger::CRITICAL, $bubble = true, $useShortAttachment = false, $includeContextAndExtra = false, array $excludeFields = array())$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    public function __construct($webhookUrl, $channel = null, $username = null, $useAttachment = true, $iconEmoji = null, $useShortAttachment = false, $includeContextAndExtra = false, $level = Logger::CRITICAL, $bubble = true, array $excludeFields = array())$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^    public function __construct($slackTeam, $token, $channel, $level = Logger::CRITICAL, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function __construct($connectionString, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    public function __construct($stream, $level = Logger::DEBUG, $bubble = true, $filePermission = null, $useLocking = false)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    public function __construct(\\Swift_Mailer $mailer, $message, $level = Logger::ERROR, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^    public function __construct($ident, $facility = LOG_USER, $level = Logger::DEBUG, $bubble = true, $logopts = LOG_PID)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    public function __construct($ip, $port = 514)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    public function __construct($host, $port = 514, $facility = LOG_USER, $level = Logger::DEBUG, $bubble = true, $ident = 'php')$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function __construct($name, array $handlers = array(), array $processors = array())$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^    public function __construct($level = Logger::DEBUG)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    public function __construct($level = Logger::DEBUG, array $skipClassesPartials = array(), $skipStackFramesCount = 0)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^    public function __construct($realUsage = true, $useFormatting = true)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^    public function __construct($level = Logger::DEBUG)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function __construct(array $tags = array())$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^    public function __construct($length = 7)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    public function __construct($serverData = null, array $extraFields = null)$/;"	f
__construct	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^    public function __construct(LoggerInterface $logger)$/;"	f
__construct	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function __construct($resource)$/;"	f
__construct	src/vendor/phptars/tars-client/src/Communicator.php	/^    public function __construct(CommunicatorConfig $config)$/;"	f
__construct	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function __construct(CommunicatorConfig $config)$/;"	f
__construct	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/LotofTags.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/OutStruct.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-config/src/ConfigServant.php	/^    public function __construct(CommunicatorConfig $config,$/;"	f
__construct	src/vendor/phptars/tars-config/src/classes/ConfigInfo.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-config/src/classes/GetConfigListInfo.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-log/src/LogServant.php	/^    public function __construct(CommunicatorConfig $config,$/;"	f
__construct	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    public function __construct(CommunicatorConfig $config, $servantName = "tars.tarslog.LogObj", $level = Logger::WARNING, $bubble = true)$/;"	f
__construct	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^    public function __construct($locator, $socketMode, $propertyName = 'tars.tarsproperty.PropertyObj')$/;"	f
__construct	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^    public function __construct($/;"	f
__construct	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^    public function __construct($locator, $socketMode, $statServantName)$/;"	f
__construct	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    public function __construct($/;"	f
__construct	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    public function __construct($config)$/;"	f
__construct	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^    public function __construct($config)$/;"	f
__construct	src/vendor/phptars/tars-monitor/src/classes/ProxyInfo.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgBody.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-monitor/src/classes/StatPropInfo.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgBody.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgHead.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-monitor/src/classes/StatSampleMsg.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    public function __construct($/;"	f
__construct	src/vendor/phptars/tars-monitor/src/contract/StoreCacheInterface.php	/^    public function __construct($config);$/;"	f
__construct	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^    public function __construct($routeInfo, $socketMode, $locatorName)$/;"	f
__construct	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^    public function __construct($locator, $socketMode, $refreshInterval = 60000)$/;"	f
__construct	src/vendor/phptars/tars-registry/src/RouteTable.php	/^    private function __construct()$/;"	f
__construct	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    public function __construct($routeInfo,$/;"	f
__construct	src/vendor/phptars/tars-report/src/ServerF.php	/^    public function __construct($ip = '', $port = '', $objName = '')$/;"	f
__construct	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^    public function __construct($ip = '', $port = '', $objName = '')$/;"	f
__construct	src/vendor/phptars/tars-report/src/ServerFSync.php	/^    public function __construct($ip = '', $port = '', $objName = '')$/;"	f
__construct	src/vendor/phptars/tars-report/src/ServerInfo.php	/^    public function __construct()$/;"	f
__construct	src/vendor/phptars/tars-server/src/cmd/Command.php	/^    public function __construct($cmd, $confPath)$/;"	f
__construct	src/vendor/phptars/tars-server/src/cmd/CommandBase.php	/^    public function __construct($configPath)$/;"	f
__construct	src/vendor/phptars/tars-server/src/cmd/Restart.php	/^    public function __construct($configPath)$/;"	f
__construct	src/vendor/phptars/tars-server/src/cmd/Start.php	/^    public function __construct($configPath)$/;"	f
__construct	src/vendor/phptars/tars-server/src/cmd/Stop.php	/^    public function __construct($configPath)$/;"	f
__construct	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function __construct($conf, $table = null)$/;"	f
__construct	src/vendor/phptars/tars-server/tests/ClientConf.php	/^    private function __construct()$/;"	f
__construct	src/vendor/phptars/tars-utils/src/Conf.php	/^    private function __construct()$/;"	f
__construct	src/vendor/phptars/tars2php/src/tars2php.php	/^        $construct = $this->tabSymbol.'public function __construct() {'.$this->returnSymbol.$/;"	f
__construct	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->tabSymbol.'public function __construct(CommunicatorConfig $config) {'.$this->returnSymbol.$/;"	f
__construct	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function __construct($config)$/;"	f
__construct	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function __construct($fp, $line, $namespaceName, $moduleName,$/;"	f
__construct	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function __construct($fp, $line, $uniqueName, $moduleName, $structName, $preStructs, $preEnums, $namespaceName,$/;"	f
__construct	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function __construct(CommunicatorConfig $config) {$/;"	f
__construct	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^	public function __construct() {$/;"	f
__construct	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public function __construct() {$/;"	f
__construct	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/OutStruct.php	/^	public function __construct() {$/;"	f
__construct	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^	public function __construct() {$/;"	f
__construct	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^	public function __construct() {$/;"	f
__construct	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public function __construct() {$/;"	f
__construct	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/OutStruct.php	/^	public function __construct() {$/;"	f
__construct	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^	public function __construct() {$/;"	f
__destruct	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function __destruct()$/;"	f
__destruct	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function __destruct()$/;"	f
__get	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public function __get ($name) {$/;"	f
__get	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    public function __get($property)$/;"	f
__get	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    public function __get($property)$/;"	f
__get	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    public function __get($name)$/;"	f
__invoke	src/vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^    public function __invoke(array $record)$/;"	f
__invoke	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    public function __invoke(array $record)$/;"	f
__invoke	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryPeakUsageProcessor.php	/^    public function __invoke(array $record)$/;"	f
__invoke	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryUsageProcessor.php	/^    public function __invoke(array $record)$/;"	f
__invoke	src/vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^    public function __invoke(array $record)$/;"	f
__invoke	src/vendor/monolog/monolog/src/Monolog/Processor/ProcessIdProcessor.php	/^    public function __invoke(array $record)$/;"	f
__invoke	src/vendor/monolog/monolog/src/Monolog/Processor/ProcessorInterface.php	/^    public function __invoke(array $records);$/;"	f
__invoke	src/vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php	/^    public function __invoke(array $record)$/;"	f
__invoke	src/vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function __invoke(array $record)$/;"	f
__invoke	src/vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^    public function __invoke(array $record)$/;"	f
__invoke	src/vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    public function __invoke(array $record)$/;"	f
__isset	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public function __isset ($name) {$/;"	f
__set	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public function __set ($name, $value) {$/;"	f
__set	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    public function __set($property, $value)$/;"	f
__set	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    public function __set($property, $value)$/;"	f
__toString	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public function __toString () {$/;"	f
__toString	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function __toString()$/;"	f
__toString	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function __toString()$/;"	f
__toString	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function __toString()$/;"	f
__unset	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public function __unset ($name) {$/;"	f
_bindParam	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _bindParam($value)$/;"	f
_bindParams	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_bindParams = array(''); \/\/ Create the empty 0 index$/;"	v
_bindParams	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_bindParams = array(''); \/\/ Create the empty 0 index$/;"	v
_bindParams	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _bindParams($values)$/;"	f
_buildCondition	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _buildCondition($operator, &$conditions)$/;"	f
_buildDataPairs	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function _buildDataPairs($tableData, $tableColumns, $isInsert)$/;"	f
_buildGroupBy	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _buildGroupBy()$/;"	f
_buildInsert	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    private function _buildInsert($tableName, $insertData, $operation)$/;"	f
_buildInsertQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _buildInsertQuery($tableData)$/;"	f
_buildJoin	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _buildJoin () {$/;"	f
_buildJoinOld	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _buildJoinOld()$/;"	f
_buildLimit	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _buildLimit($numRows)$/;"	f
_buildOnDuplicate	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _buildOnDuplicate($tableData)$/;"	f
_buildOrderBy	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _buildOrderBy()$/;"	f
_buildPair	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _buildPair($operator, $value)$/;"	f
_buildQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _buildQuery($numRows = null, $tableData = null)$/;"	f
_cPacketType	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_cPacketType = 0;$/;"	v
_cPacketType	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_cPacketType = 0;$/;"	v
_cPacketType	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_cPacketType = 0;$/;"	v
_cPacketType	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_cPacketType = 0;$/;"	v
_cache	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $this->_cache = self::$cacheInstance;$/;"	v
_cache	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    protected $_cache;$/;"	v
_communicator	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $this->_communicator = new Communicator($config);$/;"	v
_communicator	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    protected $_communicator;$/;"	v
_communicator	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $this->_communicator = new Communicator($config);$/;"	v
_communicator	src/vendor/phptars/tars-config/src/ConfigServant.php	/^    protected $_communicator;$/;"	v
_communicator	src/vendor/phptars/tars-log/src/LogServant.php	/^        $this->_communicator = new Communicator($config);$/;"	v
_communicator	src/vendor/phptars/tars-log/src/LogServant.php	/^    protected $_communicator;$/;"	v
_communicator	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^            $this->_communicator = new CommunicatorMonitor($locator,$/;"	v
_communicator	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^    protected $_communicator;$/;"	v
_communicator	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^            $this->_communicator = new CommunicatorMonitor($locator,$/;"	v
_communicator	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^    protected $_communicator;$/;"	v
_communicator	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $this->_communicator = new CommunicatorRegistry($routeInfo,$/;"	v
_communicator	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^    protected $_communicator;$/;"	v
_communicator	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$this->_communicator = new Communicator($config);$/;"	v
_communicator	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	protected $_communicator;$/;"	v
_contexts	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_contexts = [];$/;"	v
_contexts	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_contexts = [];$/;"	v
_contexts	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_contexts = [];$/;"	v
_contexts	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_contexts = [];$/;"	v
_dest	src/vendor/phptars/tars-deploy/src/Deploy.php	/^            $_dest = $dest.DIRECTORY_SEPARATOR.$item;$/;"	v
_determineType	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _determineType($item)$/;"	f
_dynamicBindResults	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _dynamicBindResults(mysqli_stmt $stmt)$/;"	f
_enableset	src/vendor/phptars/tars-client/src/Communicator.php	/^        $this->_enableset = $config->isEnableSet();$/;"	v
_enableset	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_enableset;$/;"	v
_enableset	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    protected $_enableset;$/;"	v
_enableset	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    protected $_enableset;$/;"	v
_encodeBufs	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_encodeBufs = array();$/;"	v
_encodeBufs	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_encodeBufs = array();$/;"	v
_encodeBufs	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_encodeBufs = array();$/;"	v
_encodeBufs	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_encodeBufs = array();$/;"	v
_fields	src/servant/Article/Server/Obj/classes/ArticleList.php	/^	protected static $_fields = array($/;"	v
_fields	src/servant/Article/Server/Obj/classes/ListParam.php	/^	protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/LotofTags.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/OutStruct.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-config/src/classes/ConfigInfo.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-config/src/classes/GetConfigListInfo.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-monitor/src/classes/ProxyInfo.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgBody.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-monitor/src/classes/StatPropInfo.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgBody.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgHead.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars-monitor/src/classes/StatSampleMsg.php	/^    protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars2php/src/tars2php.php	/^        $fieldsPrefix = $this->tabSymbol.'protected static $_fields = array('.$this->returnSymbol;$/;"	v
_fields	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^	protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/OutStruct.php	/^	protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^	protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^	protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/OutStruct.php	/^	protected static $_fields = array($/;"	v
_fields	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^	protected static $_fields = array($/;"	v
_fileds	src/common/Common.php	/^        $_fileds = [];$/;"	v
_forUpdate	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $this->_forUpdate = true;$/;"	v
_forUpdate	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_forUpdate = false;$/;"	v
_forUpdate	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_forUpdate = false;$/;"	v
_funcName	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_funcName;$/;"	v
_funcName	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_funcName;$/;"	v
_funcName	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_funcName;$/;"	v
_funcName	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_funcName;$/;"	v
_groupBy	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_groupBy = array();$/;"	v
_groupBy	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_groupBy = array();$/;"	v
_having	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_having = array();$/;"	v
_having	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_having = array();$/;"	v
_iMessageType	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_iMessageType = 0;$/;"	v
_iMessageType	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_iMessageType = 0;$/;"	v
_iMessageType	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_iMessageType = 0;$/;"	v
_iMessageType	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_iMessageType = 0;$/;"	v
_iPort	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_iPort;$/;"	v
_iPort	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    protected $_iPort;$/;"	v
_iPort	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    protected $_iPort;$/;"	v
_iRequestId	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_iRequestId = 1;$/;"	v
_iRequestId	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_iRequestId = 1;$/;"	v
_iRequestId	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_iRequestId = 1;$/;"	v
_iRequestId	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_iRequestId = 1;$/;"	v
_iTimeout	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_iTimeout = 2;$/;"	v
_iTimeout	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $this->_iTimeout = empty($config->getAsyncInvokeTimeout()) ? 2 : $config->getAsyncInvokeTimeout();$/;"	v
_iTimeout	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    protected $_iTimeout;$/;"	v
_iTimeout	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $this->_iTimeout = empty($config->getAsyncInvokeTimeout()) ? 2 : $config->getAsyncInvokeTimeout();$/;"	v
_iTimeout	src/vendor/phptars/tars-config/src/ConfigServant.php	/^    protected $_iTimeout;$/;"	v
_iTimeout	src/vendor/phptars/tars-log/src/LogServant.php	/^        $this->_iTimeout = empty($config->getAsyncInvokeTimeout()) ? 2000 : $config->getAsyncInvokeTimeout();$/;"	v
_iTimeout	src/vendor/phptars/tars-log/src/LogServant.php	/^    protected $_iTimeout;$/;"	v
_iTimeout	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^            $this->_iTimeout = 2;$/;"	v
_iTimeout	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^    protected $_iTimeout;$/;"	v
_iTimeout	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^            $this->_iTimeout = 2;$/;"	v
_iTimeout	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^    protected $_iTimeout;$/;"	v
_iTimeout	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_iTimeout = 2;$/;"	v
_iTimeout	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_iTimeout = 2;$/;"	v
_iTimeout	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $this->_iTimeout = 2;$/;"	v
_iTimeout	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^    protected $_iTimeout;$/;"	v
_iTimeout	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_iTimeout = 2;$/;"	v
_iTimeout	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$this->_iTimeout = empty($config->getAsyncInvokeTimeout())?2:$config->getAsyncInvokeTimeout();$/;"	v
_iTimeout	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	protected $_iTimeout;$/;"	v
_iVersion	src/vendor/phptars/tars-client/src/Communicator.php	/^        $this->_iVersion = $config->getIVersion();$/;"	v
_iVersion	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $this->_iVersion = $config->getIVersion();$/;"	v
_iVersion	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    protected $_iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $this->_iVersion = $config->getIVersion();$/;"	v
_iVersion	src/vendor/phptars/tars-config/src/ConfigServant.php	/^    protected $_iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars-log/src/LogServant.php	/^        $this->_iVersion = $config->getIVersion();$/;"	v
_iVersion	src/vendor/phptars/tars-log/src/LogServant.php	/^    protected $_iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^            $this->_iVersion = 3;$/;"	v
_iVersion	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^    protected $_iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^            $this->_iVersion = 3;$/;"	v
_iVersion	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^    protected $_iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^        $this->_iVersion = 3;$/;"	v
_iVersion	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    protected $_iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $this->_iVersion = 3;$/;"	v
_iVersion	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^    protected $_iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $this->_iVersion = $iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    protected $_iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_iVersion;$/;"	v
_iVersion	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$this->_iVersion = $config->getIVersion();$/;"	v
_iVersion	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	protected $_iVersion;$/;"	v
_instance	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected static $_instance;$/;"	v
_ip	src/vendor/phptars/tars-report/src/ServerF.php	/^        $this->_ip = $ip;$/;"	v
_ip	src/vendor/phptars/tars-report/src/ServerF.php	/^    private $_ip;$/;"	v
_ip	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^        $this->_ip = $ip;$/;"	v
_ip	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^    private $_ip;$/;"	v
_ip	src/vendor/phptars/tars-report/src/ServerFSync.php	/^        $this->_ip = $ip;$/;"	v
_ip	src/vendor/phptars/tars-report/src/ServerFSync.php	/^    private $_ip;$/;"	v
_join	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_join = array();$/;"	v
_join	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_join = array();$/;"	v
_joinAnd	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_joinAnd = array();$/;"	v
_joinAnd	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_joinAnd = array();$/;"	v
_lastInsertId	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_lastInsertId = $lastInsertId;$/;"	v
_lastInsertId	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_lastInsertId = null;$/;"	v
_lastInsertId	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_lastInsertId = null;$/;"	v
_lastQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_lastQuery = $this->replacePlaceHolders($this->_query, $params);$/;"	v
_lastQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_lastQuery = $this->replacePlaceHolders($this->_query, $this->_bindParams);$/;"	v
_lastQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_lastQuery;$/;"	v
_localIp	src/vendor/phptars/tars-client/src/Communicator.php	/^        $this->_localIp = $config->getLocalip();$/;"	v
_localIp	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_localIp;$/;"	v
_localIp	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    protected $_localIp;$/;"	v
_localIp	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    protected $_localIp;$/;"	v
_locator	src/vendor/phptars/tars-client/src/Communicator.php	/^        $this->_locator = $config->getLocator();$/;"	v
_locator	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_locator;$/;"	v
_locator	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^        $this->_locator = $locator;$/;"	v
_locator	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    protected $_locator;$/;"	v
_locator	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    protected $_locator;$/;"	v
_lockInShareMode	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $this->_lockInShareMode = true;$/;"	v
_lockInShareMode	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_lockInShareMode = false;$/;"	v
_lockInShareMode	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_lockInShareMode = false;$/;"	v
_mapKey	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_mapKey = $idField;$/;"	v
_mapKey	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_mapKey = null;$/;"	v
_mapKey	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_mapKey = null;$/;"	v
_masterName	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^    protected $_masterName = '';$/;"	v
_masterName	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $this->_masterName = $masterName;$/;"	v
_masterName	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    protected $_masterName = '';$/;"	v
_moduleName	src/vendor/phptars/tars-client/src/Communicator.php	/^        $this->_moduleName = $config->getModuleName();$/;"	v
_moduleName	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_moduleName;$/;"	v
_moduleName	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $this->_moduleName = $moduleName;$/;"	v
_moduleName	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^    protected $_moduleName;$/;"	v
_moduleName	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    protected $_moduleName;$/;"	v
_moduleName	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    protected $_moduleName;$/;"	v
_mysqli	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_mysqli = array();$/;"	v
_nestJoin	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $this->_nestJoin = true;$/;"	v
_nestJoin	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_nestJoin = false;$/;"	v
_nestJoin	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_nestJoin = false;$/;"	v
_objName	src/vendor/phptars/tars-report/src/ServerF.php	/^        $this->_objName = $objName;$/;"	v
_objName	src/vendor/phptars/tars-report/src/ServerF.php	/^    private $_objName;$/;"	v
_objName	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^        $this->_objName = $objName;$/;"	v
_objName	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^    private $_objName;$/;"	v
_objName	src/vendor/phptars/tars-report/src/ServerFSync.php	/^        $this->_objName = $objName;$/;"	v
_objName	src/vendor/phptars/tars-report/src/ServerFSync.php	/^    private $_objName;$/;"	v
_orderBy	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_orderBy = array();$/;"	v
_orderBy	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_orderBy = array();$/;"	v
_path	src/vendor/phptars/tars-deploy/src/Deploy.php	/^            $_path = $path.DIRECTORY_SEPARATOR.$item;$/;"	v
_port	src/vendor/phptars/tars-report/src/ServerF.php	/^        $this->_port = $port;$/;"	v
_port	src/vendor/phptars/tars-report/src/ServerF.php	/^    private $_port;$/;"	v
_port	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^        $this->_port = $port;$/;"	v
_port	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^    private $_port;$/;"	v
_port	src/vendor/phptars/tars-report/src/ServerFSync.php	/^        $this->_port = $port;$/;"	v
_port	src/vendor/phptars/tars-report/src/ServerFSync.php	/^    private $_port;$/;"	v
_prepareQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _prepareQuery()$/;"	f
_propertyF	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $this->_propertyF = new PropertyFServant($locator, $socketMode, $propertyName);$/;"	v
_propertyF	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^    protected $_propertyF;$/;"	v
_query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^			$this->_query = "LOCK TABLES ".$table." ".$this->_tableLockMethod;$/;"	v
_query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^		$this->_query = "LOCK TABLES";$/;"	v
_query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^		$this->_query = "UNLOCK TABLES";$/;"	v
_query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $this->_query = "DELETE " . preg_replace('\/.* (.*)\/', '$1', $table) . " FROM " . $table;$/;"	v
_query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $this->_query = "DELETE FROM " . $table;$/;"	v
_query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_query = "UPDATE " . self::$prefix . $tableName;$/;"	v
_query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_query = $operation . " " . implode(' ', $this->_queryOptions) . " INTO " . self::$prefix . $tableName;$/;"	v
_query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_query = $query;$/;"	v
_query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_query = 'SELECT ' . implode(' ', $this->_queryOptions) . ' ' .$/;"	v
_query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_query = null;$/;"	v
_query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_query = rtrim($this->_query, ', ') . " ";$/;"	v
_query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_query = rtrim($this->_query, ', ');$/;"	v
_query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_query;$/;"	v
_queryF	src/vendor/phptars/tars-client/src/Communicator.php	/^            $this->_queryF = new QueryFWrapper($this->_locator, $this->_socketMode, $this->_refreshEndpointInterval);$/;"	v
_queryF	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_queryF;$/;"	v
_queryF	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^        $this->_queryF = new QueryFWrapper($this->_locator, $this->_socketMode, 60000);$/;"	v
_queryF	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^        $this->_queryF = new QueryFServant($routeInfo, $socketMode, $locatorName);$/;"	v
_queryF	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^    protected $_queryF;$/;"	v
_queryOptions	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_queryOptions = array();$/;"	v
_queryOptions	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_queryOptions = array();$/;"	v
_redis	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^        $this->_redis = $redis;$/;"	v
_redis	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    protected $_redis = null;$/;"	v
_refreshEndpointInterval	src/vendor/phptars/tars-client/src/Communicator.php	/^        $this->_refreshEndpointInterval = empty($config->getRefreshEndpointInterval())$/;"	v
_refreshEndpointInterval	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_refreshEndpointInterval;$/;"	v
_refreshInterval	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^        $this->_refreshInterval = $refreshInterval;$/;"	v
_refreshInterval	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^    protected $_refreshInterval;$/;"	v
_reportInterval	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $this->_reportInterval = $reportInterval;$/;"	v
_reportInterval	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    protected $_reportInterval;$/;"	v
_requestBuf	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_requestBuf;$/;"	v
_requestBuf	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_requestBuf;$/;"	v
_requestBuf	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_requestBuf;$/;"	v
_requestBuf	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_requestBuf;$/;"	v
_responseBuf	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_responseBuf;$/;"	v
_responseBuf	src/vendor/phptars/tars-client/src/ResponsePacket.php	/^    public $_responseBuf;$/;"	v
_responseBuf	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_responseBuf;$/;"	v
_responseBuf	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_responseBuf;$/;"	v
_responseBuf	src/vendor/phptars/tars-monitor/src/client/ResponsePacket.php	/^    public $_responseBuf;$/;"	v
_responseBuf	src/vendor/phptars/tars-monitor/src/client/ResponsePacketMonitor.php	/^    public $_responseBuf;$/;"	v
_responseBuf	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_responseBuf;$/;"	v
_responseBuf	src/vendor/phptars/tars-registry/src/client/ResponsePacketRegistry.php	/^    public $_responseBuf;$/;"	v
_routeInfo	src/vendor/phptars/tars-client/src/Communicator.php	/^            $this->_routeInfo = $config->getRouteInfo();$/;"	v
_routeInfo	src/vendor/phptars/tars-client/src/Communicator.php	/^            $this->_routeInfo = $this->_queryF->findObjectById($this->_servantName);$/;"	v
_routeInfo	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_routeInfo;$/;"	v
_routeInfo	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^    protected $_routeInfo;$/;"	v
_routeInfo	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    protected $_routeInfo;$/;"	v
_routeInfo	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^        $this->_routeInfo = $this->_queryF->findObjectById($this->_servantName);$/;"	v
_routeInfo	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    protected $_routeInfo;$/;"	v
_routeInfo	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $this->_routeInfo = $routeInfo;$/;"	v
_routeInfo	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    protected $_routeInfo;$/;"	v
_sBuffer	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_sBuffer;$/;"	v
_sBuffer	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_sBuffer;$/;"	v
_sBuffer	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_sBuffer;$/;"	v
_sBuffer	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_sBuffer;$/;"	v
_sIp	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_sIp;$/;"	v
_sIp	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    protected $_sIp;$/;"	v
_sIp	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    protected $_sIp;$/;"	v
_servantName	src/vendor/phptars/tars-client/src/Communicator.php	/^        $this->_servantName = $config->getServantName();$/;"	v
_servantName	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_servantName;$/;"	v
_servantName	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_servantName;$/;"	v
_servantName	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public $_servantName = 'PHPTest.PHPServer.obj';$/;"	v
_servantName	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $this->_servantName = $servantName;$/;"	v
_servantName	src/vendor/phptars/tars-config/src/ConfigServant.php	/^    public $_servantName = 'tars.tarsconfig.ConfigObj';$/;"	v
_servantName	src/vendor/phptars/tars-log/src/LogServant.php	/^        $this->_servantName = $servantName;$/;"	v
_servantName	src/vendor/phptars/tars-log/src/LogServant.php	/^    public $_servantName = 'tars.tarslog.LogObj';$/;"	v
_servantName	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^            $this->_servantName = $propertyName;$/;"	v
_servantName	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^    public $_servantName; \/\/ "tars.tarsproperty.PropertyObj";$/;"	v
_servantName	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^            $this->_servantName = $statServantName;$/;"	v
_servantName	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^    public $_servantName = "tars.tarsstat.StatObj";$/;"	v
_servantName	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^        $this->_servantName = $servantName;$/;"	v
_servantName	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_servantName;$/;"	v
_servantName	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_servantName;$/;"	v
_servantName	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $this->_servantName = $locatorName;$/;"	v
_servantName	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^    public $_servantName; \/\/"tars.tarsregistry.QueryObj";$/;"	v
_servantName	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_servantName;$/;"	v
_servantName	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public $_servantName = "PHPTest.PHPServer.obj";$/;"	v
_setProcessName	src/vendor/phptars/tars-server/src/core/Server.php	/^    private function _setProcessName($name)$/;"	f
_setdivision	src/vendor/phptars/tars-client/src/Communicator.php	/^        $this->_setdivision = $config->getSetDivision();$/;"	v
_setdivision	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_setdivision;$/;"	v
_setdivision	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    protected $_setdivision;$/;"	v
_setdivision	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    protected $_setdivision;$/;"	v
_socketMode	src/vendor/phptars/tars-client/src/Communicator.php	/^        $this->_socketMode = $config->getSocketMode();$/;"	v
_socketMode	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_socketMode; \/\/1 socket ,2 swoole sync ,3 swoole coroutine$/;"	v
_socketMode	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^        $this->_socketMode = $socketMode;$/;"	v
_socketMode	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    protected $_socketMode; \/\/1 socket ,2 swoole sync ,3 swoole coroutine$/;"	v
_socketMode	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $this->_socketMode = $socketMode;$/;"	v
_socketMode	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    protected $_socketMode; \/\/1 socket ,2 swoole sync ,3 swoole coroutine$/;"	v
_source	src/vendor/phptars/tars-deploy/src/Deploy.php	/^            $_source = $source.DIRECTORY_SEPARATOR.$item;$/;"	v
_statF	src/vendor/phptars/tars-client/src/Communicator.php	/^            $this->_statF = new StatFWrapper($this->_locator, $this->_socketMode,$/;"	v
_statF	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_statF;$/;"	v
_statF	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $this->_statF = new StatFServant($locator, $socketMode, $statServantName);$/;"	v
_statF	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    protected $_statF;$/;"	v
_statServantName	src/vendor/phptars/tars-client/src/Communicator.php	/^        $this->_statServantName = $config->getStat();$/;"	v
_statServantName	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_statServantName;$/;"	v
_statuses	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_statuses = [];$/;"	v
_statuses	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_statuses = [];$/;"	v
_statuses	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_statuses = [];$/;"	v
_statuses	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_statuses = [];$/;"	v
_stmtErrno	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_stmtErrno = $stmt->errno;$/;"	v
_stmtErrno	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_stmtErrno;$/;"	v
_stmtError	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_stmtError = $stmt->error;$/;"	v
_stmtError	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_stmtError;$/;"	v
_str	src/common/Common.php	/^        $_str = ucwords(str_replace('_', ' ', $str));$/;"	v
_swooleTable	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^        $this->_swooleTable = new \\swoole_table($size);$/;"	v
_swooleTable	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^    protected $_swooleTable = null;$/;"	v
_swooleTable	src/vendor/phptars/tars-registry/src/RouteTable.php	/^    private static $_swooleTable;$/;"	v
_swooleTable	src/vendor/phptars/tars-server/tests/ClientConf.php	/^    private static $_swooleTable;$/;"	v
_swooleTable	src/vendor/phptars/tars-utils/src/Conf.php	/^    private static $_swooleTable;$/;"	v
_swooleTableKey	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^        $this->_swooleTableKey = new \\swoole_table(40960);$/;"	v
_swooleTableKey	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^    protected $_swooleTableKey = null;$/;"	v
_tableLockMethod	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^				$this->_tableLockMethod = $method;$/;"	v
_tableLockMethod	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^	protected $_tableLockMethod = "READ";$/;"	v
_tableLocks	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^	protected $_tableLocks = array();$/;"	v
_tableName	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $this->_tableName = $tableName;$/;"	v
_tableName	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $this->_tableName = self::$prefix . $tableName;$/;"	v
_tableName	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_tableName = '';$/;"	v
_tableName	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    private $_tableName = '';$/;"	v
_tarsTimeout	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public $_tarsTimeout = 2000;$/;"	v
_tarsTimeout	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public $_tarsTimeout = 2000;$/;"	v
_tarsTimeout	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public $_tarsTimeout = 2000;$/;"	v
_tarsTimeout	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public $_tarsTimeout = 2000;$/;"	v
_timeout	src/vendor/phptars/tars-client/src/Communicator.php	/^        $this->_timeout = $config->getConnectTimeout();$/;"	v
_timeout	src/vendor/phptars/tars-client/src/Communicator.php	/^    protected $_timeout;$/;"	v
_timeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^        $this->_timeout = 2;$/;"	v
_timeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    protected $_timeout;$/;"	v
_timeout	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $this->_timeout = $timeout;$/;"	v
_timeout	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    protected $_timeout;$/;"	v
_traceGetCaller	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    private function _traceGetCaller()$/;"	f
_transaction_in_progress	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_transaction_in_progress = false;$/;"	v
_transaction_in_progress	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_transaction_in_progress = true;$/;"	v
_transaction_in_progress	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_transaction_in_progress = false;$/;"	v
_transaction_status_check	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function _transaction_status_check()$/;"	f
_updateColumns	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_updateColumns = $updateColumns;$/;"	v
_updateColumns	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_updateColumns = null;$/;"	v
_updateColumns	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_updateColumns = null;$/;"	v
_where	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->_where = array();$/;"	v
_where	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $_where = array();$/;"	v
_with	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $this->_with = Array();$/;"	v
_with	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $this->_with = Array();$/;"	v
_with	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private $_with = Array();$/;"	v
ab_id	src/service/article/Article.php	/^        $ab_id = $articleBasicModel->saveBasic($data);$/;"	v
ab_id	src/service/article/Article.php	/^        $ab_id = $data['ab_id'];$/;"	v
ab_ids	src/model/mysql/content/ArticleBasic.php	/^        $ab_ids = array_column($data,'ab_id');$/;"	v
abnormalExit	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function abnormalExit($level, $msg)$/;"	f
acceptedLevels	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^            $acceptedLevels = array_map('Monolog\\Logger::toMonologLevel', $minLevelOrList);$/;"	v
acceptedLevels	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^            $acceptedLevels = array_values(array_filter(Logger::getLevels(), function ($level) use ($minLevelOrList, $maxLevel) {$/;"	v
acceptedLevels	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^        $this->acceptedLevels = array_flip($acceptedLevels);$/;"	v
acceptedLevels	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    protected $acceptedLevels;$/;"	v
acceptedSchemes	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private $acceptedSchemes = array('http', 'udp');$/;"	v
action	src/common/Common.php	/^    public static function convertFields($fields = [], $action = 'tohump')$/;"	v
action	src/vendor/catfan/medoo/src/Medoo.php	/^	public function action($actions)$/;"	f
actionLevel	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ErrorLevelActivationStrategy.php	/^        $this->actionLevel = Logger::toMonologLevel($actionLevel);$/;"	v
actionLevel	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ErrorLevelActivationStrategy.php	/^    private $actionLevel;$/;"	v
actionTitle	src/service/article/Article.php	/^    public $actionTitle = '';$/;"	v
activate	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function activate()$/;"	f
activationStrategy	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^ *   $activationStrategy = new ChannelLevelActivationStrategy($/;"	v
activationStrategy	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $activationStrategy = new ErrorLevelActivationStrategy($activationStrategy);$/;"	v
activationStrategy	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $activationStrategy = new ErrorLevelActivationStrategy(Logger::WARNING);$/;"	v
activationStrategy	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->activationStrategy = $activationStrategy;$/;"	v
activationStrategy	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $activationStrategy;$/;"	v
activationStrategy	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function __construct($handler, $activationStrategy = null, $bufferSize = 0, $bubble = true, $stopBuffering = true, $passthruLevel = null)$/;"	v
activeEp	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $activeEp = TUPAPIWrapperRegistry::getVector('activeEp', 2, new \\TARS_Vector(new EndpointF()), $sBuffer, $this->_iVersion);$/;"	v
activeEp	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $activeEp = TUPAPIWrapperRegistry::getVector('activeEp', 3, new \\TARS_Vector(new EndpointF()), $sBuffer, $this->_iVersion);$/;"	v
actual	src/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^        $actual = $handlerFormatter->format($record);$/;"	v
actual	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $actual = $processor($input);$/;"	v
ad_id	src/service/article/Article.php	/^        $ad_id = $articleDetailsModel->saveDetail($data);$/;"	v
ad_id	src/service/article/Article.php	/^        $ad_id = $articleDetailsModel->updateDetail($ab_id,$data);$/;"	v
adapter	src/vendor/phptars/tars-report/src/ServerInfo.php	/^    public $adapter;$/;"	v
adapter	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $adapter = $data['adapter'];$/;"	v
adapterName	src/vendor/phptars/tars-server/tests/testConf.php	/^                        $adapterName = substr($adapterName, 1, strlen($line) - 1);$/;"	v
adapterName	src/vendor/phptars/tars-server/tests/testConf.php	/^                        $adapterName = substr($line, 0, strlen($line) - 1);$/;"	v
adapterName	src/vendor/phptars/tars-utils/src/Utils.php	/^                        $adapterName = substr($adapterName, 1, strlen($line) - 1);$/;"	v
adapterName	src/vendor/phptars/tars-utils/src/Utils.php	/^                        $adapterName = substr($line, 0, strlen($line) - 1);$/;"	v
add	src/impl/ArticleServantImpl.php	/^    public function add($version,$param)$/;"	f
add	src/servant/Article/Server/Obj/ArticleServant.php	/^	public function add($version,$param);$/;"	f
add	src/service/article/Article.php	/^    public function add()$/;"	f
add	src/service/validate/article/ValidateArticle.php	/^    public function add()$/;"	f
add	src/vendor/composer/ClassLoader.php	/^    public function add($prefix, $paths, $prepend = false)$/;"	f
addAlert	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addAlert($message, array $context = array())$/;"	f
addClassMap	src/vendor/composer/ClassLoader.php	/^    public function addClassMap(array $classMap)$/;"	f
addConnection	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function addConnection($name, array $params)$/;"	f
addCritical	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addCritical($message, array $context = array())$/;"	f
addDebug	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addDebug($message, array $context = array())$/;"	f
addEmergency	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addEmergency($message, array $context = array())$/;"	f
addError	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addError($message, array $context = array())$/;"	f
addExtraField	src/vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    public function addExtraField($extraName, $serverName)$/;"	f
addHeader	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function addHeader($headers)$/;"	f
addInfo	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addInfo($message, array $context = array())$/;"	f
addLogger	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function addLogger(Logger $logger, $name = null, $overwrite = false)$/;"	f
addNotice	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addNotice($message, array $context = array())$/;"	f
addParameter	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function addParameter($parameters)$/;"	f
addPsr4	src/vendor/composer/ClassLoader.php	/^    public function addPsr4($prefix, $paths, $prepend = false)$/;"	f
addRecord	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addRecord($level, $message, array $context = array())$/;"	f
addRow	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    protected function addRow($th, $td = ' ', $escapeTd = true)$/;"	f
addStat	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    public function addStat($/;"	f
addTag	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    public function addTag($tag)$/;"	f
addTags	src/vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function addTags(array $tags = array())$/;"	f
addTask	src/vendor/phptars/tars-server/src/core/Response.php	/^    public function addTask(Task $task)$/;"	f
addTitle	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    protected function addTitle($title, $level)$/;"	f
addWarning	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addWarning($message, array $context = array())$/;"	f
additional_headers	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^function mail($to, $subject, $message, $additional_headers = null, $additional_parameters = null)$/;"	v
adminServerInfo	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $adminServerInfo = new ServerInfo();$/;"	v
agentsProvider	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    public static function agentsProvider()$/;"	f
aggregate	src/vendor/catfan/medoo/src/Medoo.php	/^	private function aggregate($type, $table, $join = null, $column = null, $where = null)$/;"	f
alert	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function alert($message, array $context = array())$/;"	f
alert	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function alert($message, array $context = array())$/;"	f
alert	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function alert($message, array $context = array());$/;"	f
alert	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function alert($message, array $context = array())$/;"	f
allowInlineLineBreaks	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^            $this->allowInlineLineBreaks = true;$/;"	v
allowInlineLineBreaks	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $this->allowInlineLineBreaks = $allow;$/;"	v
allowInlineLineBreaks	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $this->allowInlineLineBreaks = $allowInlineLineBreaks;$/;"	v
allowInlineLineBreaks	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected $allowInlineLineBreaks;$/;"	v
allowInlineLineBreaks	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function allowInlineLineBreaks($allow = true)$/;"	f
allowedDirection	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $allowedDirection = Array("ASC", "DESC");$/;"	v
allowedOptions	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $allowedOptions = Array('ALL', 'DISTINCT', 'DISTINCTROW', 'HIGH_PRIORITY', 'STRAIGHT_JOIN', 'SQL_SMALL_RESULT',$/;"	v
allowedTypes	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $allowedTypes = array('LEFT', 'RIGHT', 'OUTER', 'INNER', 'LEFT OUTER', 'RIGHT OUTER', 'NATURAL');$/;"	v
and	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^     * Provides magic access to private functions of the class and native public mysqlidb functions$/;"	c
and	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^ * Inherit from this class and override handle() like this:$/;"	c
and	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^ * This handler requires a NormalizerFormatter to function and expects an array in $record['formatted']$/;"	f
and	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^ * Implementors can extend the class and implement abstract methods to run this$/;"	c
annotation	src/vendor/phptars/tars2php/src/tars2php.php	/^            $annotation = $this->tabSymbol.' * @param ';$/;"	v
annotation	src/vendor/phptars/tars2php/src/tars2php.php	/^        $annotation = $this->tabSymbol.' * @return ';$/;"	v
apcuPrefix	src/vendor/composer/ClassLoader.php	/^        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;$/;"	v
apcuPrefix	src/vendor/composer/ClassLoader.php	/^    private $apcuPrefix;$/;"	v
api	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^ * $api = new Monolog\\Logger('api');$/;"	v
apiKey	src/vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^        $this->apiKey = $apiKey;$/;"	v
apiKey	src/vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^    protected $apiKey;$/;"	v
apiToken	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^        $this->apiToken = $apiToken;$/;"	v
apiToken	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    protected $apiToken;$/;"	v
app	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^        $this->app = $app;$/;"	v
app	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^        $this->app = $moduleData ? $moduleData[0] : $this->app;$/;"	v
app	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    protected $app = 'Undefined';$/;"	v
app	src/vendor/phptars/tars-server/src/core/Server.php	/^                $app = $this->tarsConfig['tars']['application']['server']['app'];$/;"	v
app	src/vendor/phptars/tars-server/src/core/Server.php	/^        $app = $this->application;$/;"	v
appName	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $appName = null,$/;"	v
appName	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $this->appName       = $appName;$/;"	v
appName	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected $appName;$/;"	v
appName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->appName = $config['appName'];$/;"	v
appName	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $appName;$/;"	v
appendExtraFields	src/vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    private function appendExtraFields(array $extra)$/;"	f
appendNewline	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $this->appendNewline = $appendNewline;$/;"	v
appendNewline	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $this->appendNewline = $oldNewline;$/;"	v
appendNewline	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $this->appendNewline = false;$/;"	v
appendNewline	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected $appendNewline;$/;"	v
appendNewline	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function __construct($batchMode = self::BATCH_MODE_JSON, $appendNewline = true)$/;"	v
appendNewline	src/vendor/monolog/monolog/src/Monolog/Formatter/LogglyFormatter.php	/^    public function __construct($batchMode = self::BATCH_MODE_NEWLINES, $appendNewline = false)$/;"	v
appendRecord	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    private function appendRecord(array $record)$/;"	f
application	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^ * $application = new Monolog\\Logger('application');$/;"	v
application	src/vendor/phptars/tars-report/src/ServerInfo.php	/^    public $application;$/;"	v
application	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $application = $data['application'];$/;"	v
application	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->application = $tarsServerConf['app'];$/;"	v
application	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $application;$/;"	v
application	src/vendor/phptars/tars-utils/src/Utils.php	/^        $application = [];$/;"	v
applicationName	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^        $this->applicationName = $applicationName;$/;"	v
applicationName	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    protected $applicationName;$/;"	v
appname	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public static $appname;$/;"	v
appname	src/vendor/phptars/tars-config/src/classes/ConfigInfo.php	/^    public $appname;$/;"	v
appname	src/vendor/phptars/tars-config/src/classes/GetConfigListInfo.php	/^    public $appname;$/;"	v
appname	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^    public $appname;$/;"	v
ar_id	src/service/article/Article.php	/^        $ar_id = $articleAttrModel->saveAttr($data);$/;"	v
arg	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^            $arg = new TestInfoLeak;$/;"	v
args	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $args = array(static::quote('font-weight: normal'));$/;"	v
args	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $args = func_get_args();$/;"	v
args	src/vendor/monolog/monolog/tests/Monolog/Handler/InsightOpsHandlerTest.php	/^        $args = array('testToken', 'us', $useSSL, Logger::DEBUG, true);$/;"	v
args	src/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $args = array('testToken', $useSSL, Logger::DEBUG, true);$/;"	v
args	src/vendor/phptars/tars-server/src/core/Event.php	/^                $args = $result['args'];$/;"	v
args	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $args = [];$/;"	v
args	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $args = $this->convertToArgs($paramInfo, $unpackResult);$/;"	v
arguments	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        \/\/Reference in the function arguments are required for HHVM to work$/;"	f
argv	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                    $argv = $args[$i];$/;"	v
array	src/vendor/phptars/tars-log/tests/demo.php	/^$array = [$/;"	v
arrayBuilder	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function arrayBuilder()$/;"	f
arrayQuote	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function arrayQuote($array)$/;"	f
articleAttrModel	src/service/article/Article.php	/^        $articleAttrModel = new ArticleAttr();$/;"	v
articleBasicModel	src/model/mysql/content/ArticleRelationship.php	/^            $articleBasicModel = new ArticleBasic();$/;"	v
articleBasicModel	src/service/article/Article.php	/^        $articleBasicModel = new ArticleBasic();$/;"	v
articleBasicModel	src/service/validate/article/ValidateArticle.php	/^        $articleBasicModel = new ArticleBasic();$/;"	v
articleDetailsModel	src/service/article/Article.php	/^        $articleDetailsModel = new ArticleDetails();$/;"	v
articleList	src/service/article/Article.php	/^        $articleList = $articleBasicModel->search($this->param);$/;"	v
articleListObj	src/service/article/Article.php	/^        $articleListObj = new ArticleList();$/;"	v
articleRelationship	src/model/mysql/content/ArticleBasic.php	/^        $articleRelationship= new ArticleRelationship();$/;"	v
articleRelationshipModel	src/service/article/Article.php	/^            $articleRelationshipModel = new ArticleRelationship();$/;"	v
articleRelationshipModel	src/service/article/Article.php	/^        $articleRelationshipModel = new ArticleRelationship();$/;"	v
articleResource	src/model/mysql/content/ArticleBasic.php	/^        $articleResource = new ArticleResource();$/;"	v
articleResourceModel	src/service/article/Article.php	/^            $articleResourceModel = new ArticleResource();$/;"	v
articleResourceModel	src/service/article/Article.php	/^        $articleResourceModel = new ArticleResource();$/;"	v
as	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Method returns generated interval function as a string$/;"	f
as	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Method returns generated interval function as an insert\/update function$/;"	f
asInterfaceName	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $asInterfaceName;$/;"	v
assembleMessage	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    protected function assembleMessage($line, $header)$/;"	f
assertBufferOfBufferHandlerEmpty	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $assertBufferOfBufferHandlerEmpty = function () use ($getProperty, $bufferHandler, $that) {$/;"	v
assertBuffersEmpty	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $assertBuffersEmpty = function() use ($assertBufferOfBufferHandlerEmpty, $getProperty, $fingersCrossedHandler, $that) {$/;"	v
assertContextContainsFormattedException	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    private function assertContextContainsFormattedException($expected, $actual)$/;"	f
assertErrorWasTriggered	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    private function assertErrorWasTriggered($code, $message)$/;"	f
asyncInvokeTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->asyncInvokeTimeout = $asyncInvokeTimeout;$/;"	v
asyncInvokeTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->asyncInvokeTimeout = $config['tars']['application']['client']['async-invoke-timeout'];$/;"	v
asyncInvokeTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $asyncInvokeTimeout = 3000;$/;"	v
asyncInvokeTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->asyncInvokeTimeout = $asyncInvokeTimeout;$/;"	v
asyncInvokeTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->asyncInvokeTimeout = $config['tars']['application']['client']['asyncInvokeTimeout'];$/;"	v
asyncInvokeTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $asyncInvokeTimeout = 3000;$/;"	v
asyncProvider	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    public function asyncProvider()$/;"	f
asyncSignalHandling	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^                $this->asyncSignalHandling = pcntl_async_signals();$/;"	v
asyncSignalHandling	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    private $asyncSignalHandling;$/;"	v
attachment	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $attachment = array($/;"	v
attachment	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $attachment = $data['attachments'][0];$/;"	v
attr	src/vendor/catfan/medoo/src/Medoo.php	/^						$attr = [$/;"	v
attr	src/vendor/catfan/medoo/src/Medoo.php	/^					$attr = [$/;"	v
attr	src/vendor/catfan/medoo/src/Medoo.php	/^				$attr = $options[ 'dsn' ];$/;"	v
autoCommit	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $autoCommit = (isset($this->_transaction_in_progress) ? !$this->_transaction_in_progress : true);$/;"	v
autoReconnect	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        if ($this->mysqli()->errno === 2006 && $this->autoReconnect === true && $this->autoReconnectCount === 0) {$/;"	v
autoReconnect	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public $autoReconnect = true;$/;"	v
autoReconnectCount	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->autoReconnectCount = 0;$/;"	v
autoReconnectCount	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $autoReconnectCount = 0;$/;"	v
autoload	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public static function autoload ($path = null) {$/;"	f
avg	src/vendor/catfan/medoo/src/Medoo.php	/^	public function avg($table, $join, $column = null, $where = null)$/;"	f
b1	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $b1 = TUPAPIWrapper::getBool('b1', 2, $sBuffer, $this->_iVersion);$/;"	v
b1	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$b1 = TUPAPIWrapper::getBool("b1",2,$sBuffer,$this->_iVersion);$/;"	v
b1	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	 * @param bool $b1 =out=$/;"	v
bAppOnly	src/vendor/phptars/tars-config/src/classes/ConfigInfo.php	/^    public $bAppOnly = false;$/;"	v
bAppOnly	src/vendor/phptars/tars-config/src/classes/GetConfigListInfo.php	/^    public $bAppOnly = false;$/;"	v
bFromClient	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    public function reportMicMsg($msg, $bFromClient = true)$/;"	v
bFromClient	src/vendor/phptars/tars-monitor/src/classes/ProxyInfo.php	/^    public $bFromClient;$/;"	v
bHasAppNamePrefix	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^    public $bHasAppNamePrefix = true;$/;"	v
bHasSquareBracket	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^    public $bHasSquareBracket = false;$/;"	v
bHasSufix	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^    public $bHasSufix = true;$/;"	v
bIp	src/vendor/phptars/tars-server/tests/testConf.php	/^                $bIp = trim($part, " b\\t\\r");$/;"	v
bIp	src/vendor/phptars/tars-server/tests/testConf.php	/^        $bIp = '';$/;"	v
bIp	src/vendor/phptars/tars-utils/src/Utils.php	/^                $bIp = trim($part, " b\\t\\r");$/;"	v
bIp	src/vendor/phptars/tars-utils/src/Utils.php	/^        $bIp = '';$/;"	v
bTcp	src/vendor/phptars/tars-client/src/Communicator.php	/^        $bTcp = isset($this->_routeInfo[$index]['bTcp']) ?$/;"	v
bTcp	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $bTcp = 1;$/;"	v
backtrace	src/vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^            $backtrace = $record['extra']['file'].' : '.$record['extra']['line'];$/;"	v
backtrace	src/vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^        $backtrace = 'unknown';$/;"	v
bakFlag	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public $bakFlag;$/;"	v
bar	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $bar = new \\stdClass();$/;"	v
baseDir	src/vendor/composer/autoload_classmap.php	/^$baseDir = dirname($vendorDir);$/;"	v
baseDir	src/vendor/composer/autoload_files.php	/^$baseDir = dirname($vendorDir);$/;"	v
baseDir	src/vendor/composer/autoload_namespaces.php	/^$baseDir = dirname($vendorDir);$/;"	v
baseDir	src/vendor/composer/autoload_psr4.php	/^$baseDir = dirname($vendorDir);$/;"	v
basePath	src/vendor/phptars/tars-server/src/cmd/Start.php	/^        $basePath = $tarsConfig['tars']['application']['server']['basepath'];$/;"	v
basePath	src/vendor/phptars/tars-server/src/core/Event.php	/^        $this->basePath = $basePath;$/;"	v
basePath	src/vendor/phptars/tars-server/src/core/Event.php	/^    protected $basePath;$/;"	v
basePath	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $basePath = $this->tarsConfig['tars']['application']['server']['basepath'];$/;"	v
basePath	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->basePath = $tarsServerConf['basepath'];$/;"	v
basePath	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $basePath;$/;"	v
basicAuth	src/vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^            $basicAuth = sprintf('%s:%s@', $this->options['username'], $this->options['password']);$/;"	v
basicAuth	src/vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^        $basicAuth = null;$/;"	v
basicInst	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $basicInst = $this->createInstance($next);$/;"	v
basicInst	src/vendor/phptars/tars-server/tests/test.php	/^             $basicInst = createInstance($next);$/;"	v
basicStatus	src/model/mysql/content/ArticleBasic.php	/^    public $basicStatus = [$/;"	v
basicTypes	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $basicTypes = [$/;"	v
basicTypes	src/vendor/phptars/tars-server/tests/test.php	/^     $basicTypes = [$/;"	v
basicTypes	src/vendor/phptars/tars-server/tests/test.php	/^    $basicTypes = [$/;"	v
basicTypes	src/vendor/phptars/tars2php/src/tars2php.php	/^        $basicTypes = [$/;"	v
batchFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^            $this->batchFormatter = $this->getDefaultBatchFormatter();$/;"	v
batchFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $this->batchFormatter = $formatter;$/;"	v
batchFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected $batchFormatter;$/;"	v
batchMode	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $this->batchMode = $batchMode;$/;"	v
batchMode	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected $batchMode;$/;"	v
batchRecord	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $batchRecord = null;$/;"	v
batchRecord	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            $batchRecord = array($/;"	v
batchRecord	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            $batchRecord = array_merge($/;"	v
batchRecord	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $batchRecord = null;$/;"	v
batchRecords	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $batchRecords = $this->combineRecords($records);$/;"	v
batchRecords	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $batchRecords = array();$/;"	v
bindParams	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function func($expr, $bindParams = null)$/;"	v
bindParams	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function rawQuery($query, $bindParams = null)$/;"	v
bindParams	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function rawQueryOne($query, $bindParams = null)$/;"	v
bindParams	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function rawQueryValue($query, $bindParams = null)$/;"	v
blockedSignals	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    private $blockedSignals;$/;"	v
body	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * @param string $expr user function body$/;"	f
bodyMiddle	src/vendor/phptars/tars2php/src/tars2php.php	/^        $bodyMiddle = $this->tripleTab.'$requestPacket = new RequestPacket();'.$this->returnSymbol.$/;"	v
bodyMiddle	src/vendor/phptars/tars2php/src/tars2php.php	/^        $bodyMiddle = '';$/;"	v
bodyPrefix	src/vendor/phptars/tars2php/src/tars2php.php	/^        $bodyPrefix = $this->doubleTab.'try {'.$this->returnSymbol;$/;"	v
bodyPrefix	src/vendor/phptars/tars2php/src/tars2php.php	/^        $bodyPrefix = $this->tabSymbol.'\/**'.$this->returnSymbol;$/;"	v
bodyStr	src/vendor/phptars/tars2php/src/tars2php.php	/^        $bodyStr = $bodyPrefix.$bodyMiddle.$bodySuffix;$/;"	v
bodyStr	src/vendor/phptars/tars2php/src/tars2php.php	/^        $bodyStr = $bodyPrefix.$bodyMiddle;$/;"	v
bodySuffix	src/vendor/phptars/tars2php/src/tars2php.php	/^        $bodySuffix = $this->doubleTab.'catch (\\\\Exception $e) {'.$this->returnSymbol.$/;"	v
boolBuffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $boolBuffer = \\TUPAPI::putBool($paramName, $bool, $iVersion);$/;"	v
boolBuffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $boolBuffer = \\TUPAPI::putBool($tag, $bool, $iVersion);$/;"	v
boolBuffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $boolBuffer = \\TUPAPI::putBool($paramName, $bool, $iVersion);$/;"	v
boolBuffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $boolBuffer = \\TUPAPI::putBool($tag, $bool, $iVersion);$/;"	v
boolBuffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $boolBuffer = \\TUPAPI::putBool($paramName, $bool, $iVersion);$/;"	v
boolBuffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $boolBuffer = \\TUPAPI::putBool($tag, $bool, $iVersion);$/;"	v
branches	src/vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^        $branches = `git branch -v --no-abbrev`;$/;"	v
bubble	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^        $this->bubble = $bubble;$/;"	v
bubble	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    protected $bubble = true;$/;"	v
bubble	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	v
bubble	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	v
bubble	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^        $this->bubble   = $bubble;$/;"	v
bubble	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    protected $bubble;$/;"	v
bubble	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->bubble = $bubble;$/;"	v
bubble	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^        $this->bubble = $bubble;$/;"	v
bubble	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    public function __construct(array $handlers, $bubble = true)$/;"	v
bubble	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $bubble = true,$/;"	v
bubble	src/vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	v
buf	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                    $buf = $this->packBuffer($outParams[$j]['type'], $argv, $outParams[$j]['tag'],$/;"	v
buf	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $buf = $packMethod($name, $argv, $iVersion);$/;"	v
buf	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $buf = $packMethod($tag, $argv, $iVersion);$/;"	v
buffer	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^        $this->buffer = array();$/;"	v
buffer	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    protected $buffer = array();$/;"	v
buffer	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $this->buffer = array_filter($this->buffer, function ($record) use ($level) {$/;"	v
buffer	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->buffer = array();$/;"	v
buffer	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $buffer = array();$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putBool($paramName, $bool, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putBool($tag, $bool, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putChar($paramName, $char, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putChar($tag, $char, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putDouble($paramName, $double, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putDouble($tag, $double, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putFloat($paramName, $float, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putFloat($tag, $float, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putInt32($paramName, $int, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putInt32($paramName, $uint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putInt32($tag, $int, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putInt32($tag, $uint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putInt64($paramName, $bigint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putInt64($tag, $bigint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putMap($paramName, $map, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putMap($tag, $map, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putShort($paramName, $short, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putShort($tag, $short, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putString($paramName, $string, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putString($tag, $string, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putStruct($paramName, $obj, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putStruct($tag, $obj, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putUint16($paramName, $uint16, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putUint16($tag, $uint16, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putUint8($paramName, $uint8, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putUint8($tag, $uint8, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putVector($paramName, $vec, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putVector($tag, $vec, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $buffer = TUPAPIWrapper::putString('app', 1, $app, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $buffer = TUPAPIWrapper::putString('appServerName', 1, $appServerName, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $buffer = TUPAPIWrapper::putString('filename', 2, $filename, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $buffer = TUPAPIWrapper::putString('filename', 3, $filename, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $buffer = TUPAPIWrapper::putString('host', 3, $host, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $buffer = TUPAPIWrapper::putString('server', 2, $server, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $buffer = TUPAPIWrapper::putStruct('configInfo', 1, $configInfo, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^            $buffer = TUPAPIWrapperMonitor::putMap('statmsg', 1, $statmsg_map, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^            $buffer = TUPAPIWrapperMonitor::putBool("bFromClient", 2, $bFromClient, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^            $buffer = TUPAPIWrapperMonitor::putMap("msg", 1, $msg_map, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^            $buffer = TUPAPIWrapperMonitor::putVector("msg", 1, $msg_vec, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putDouble($paramName, $double, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putDouble($tag, $double, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putFloat($paramName, $float, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putFloat($tag, $float, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putInt32($paramName, $int, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putInt32($paramName, $uint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putInt32($tag, $int, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putInt32($tag, $uint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putInt64($paramName, $bigint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putInt64($tag, $bigint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putMap($paramName, $map, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putMap($tag, $map, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putString($paramName, $string, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putString($tag, $string, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putStruct($paramName, $obj, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putStruct($tag, $obj, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putUint16($paramName, $uint16, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putUint16($tag, $uint16, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putVector($paramName, $vec, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $buffer = \\TUPAPI::putVector($tag, $vec, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putDouble($paramName, $double, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putDouble($tag, $double, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putFloat($paramName, $float, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putFloat($tag, $float, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putInt32($paramName, $int, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putInt32($paramName, $uint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putInt32($tag, $int, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putInt32($tag, $uint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putInt64($paramName, $bigint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putInt64($tag, $bigint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putMap($paramName, $map, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putMap($tag, $map, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putString($paramName, $string, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putString($tag, $string, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putStruct($paramName, $obj, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putStruct($tag, $obj, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putUint16($paramName, $uint16, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putUint16($tag, $uint16, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putVector($paramName, $vec, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $buffer = \\TUPAPI::putVector($tag, $vec, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $buffer = TUPAPIWrapperRegistry::putString('id', 1, $id, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $buffer = TUPAPIWrapperRegistry::putString('sStation', 2, $sStation, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $buffer = TUPAPIWrapperRegistry::putString('setId', 2, $setId, $this->_iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putDouble($paramName, $double, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putDouble($tag, $double, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putFloat($paramName, $float, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putFloat($tag, $float, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putInt32($paramName, $int, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putInt32($paramName, $uint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putInt32($tag, $int, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putInt32($tag, $uint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putInt64($paramName, $bigint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putInt64($tag, $bigint, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putMap($paramName, $map, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putMap($tag, $map, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putString($paramName, $string, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putString($tag, $string, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putStruct($paramName, $obj, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putStruct($tag, $obj, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putUint16($paramName, $uint16, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putUint16($tag, $uint16, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putVector($paramName, $vec, $iVersion);$/;"	v
buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $buffer = \\TUPAPI::putVector($tag, $vec, $iVersion);$/;"	v
bufferHandler	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $bufferHandler = new Handler\\BufferHandler($testHandler);$/;"	v
bufferLimit	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^        $this->bufferLimit = (int) $bufferLimit;$/;"	v
bufferLimit	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    protected $bufferLimit;$/;"	v
bufferLimit	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function __construct(HandlerInterface $handler, $bufferLimit = 0, $level = Logger::DEBUG, $bubble = true, $flushOnOverflow = false)$/;"	v
bufferSize	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^        $this->bufferSize = 0;$/;"	v
bufferSize	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^        if ($this->bufferLimit > 0 && $this->bufferSize === $this->bufferLimit) {$/;"	v
bufferSize	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    protected $bufferSize = 0;$/;"	v
bufferSize	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->bufferSize = $bufferSize;$/;"	v
bufferSize	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $bufferSize;$/;"	v
buffer_vec	src/vendor/phptars/tars-log/src/LogServant.php	/^        $buffer_vec = new \\TARS_Vector(\\TARS::STRING);$/;"	v
buffering	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $this->buffering = false;$/;"	v
buffering	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->buffering = true;$/;"	v
buffering	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $buffering = true;$/;"	v
buildContent	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    private function buildContent($record)$/;"	f
buildContent	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    private function buildContent($record)$/;"	f
buildContent	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private function buildContent($record)$/;"	f
buildContent	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private function buildContent($record)$/;"	f
buildContent	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    private function buildContent($record)$/;"	f
buildHeader	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    private function buildHeader($content)$/;"	f
buildHeader	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    private function buildHeader($content)$/;"	f
buildHeader	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private function buildHeader($content)$/;"	f
buildHeader	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private function buildHeader($content)$/;"	f
buildHeader	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    private function buildHeader($content)$/;"	f
buildMessage	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    protected function buildMessage($content, array $records)$/;"	f
buildRaw	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function buildRaw($raw, &$map)$/;"	f
buildTrace	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    public function buildTrace(\\Exception $e)$/;"	f
builtMessage1	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $builtMessage1 = $method->invoke($handler, $messageTemplate, array());$/;"	v
builtMessage2	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $builtMessage2 = $method->invoke($handler, $messageTemplate, array());$/;"	v
bulkSend	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    protected function bulkSend(array $documents)$/;"	f
byId	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function byId ($id, $fields = null) {$/;"	f
bytes	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryPeakUsageProcessor.php	/^        $bytes = memory_get_peak_usage($this->realUsage);$/;"	v
bytes	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^        $bytes = (int) $bytes;$/;"	v
bytes	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryUsageProcessor.php	/^        $bytes = memory_get_usage($this->realUsage);$/;"	v
cPacketType	src/vendor/phptars/tars-report/src/ServerF.php	/^            $cPacketType = 0;$/;"	v
cPacketType	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^            $cPacketType = 0;$/;"	v
cPacketType	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $cPacketType = 0;$/;"	v
cPacketType	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $cPacketType = 0;$/;"	v
cPacketType	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $cPacketType = 0;$/;"	v
cPacketType	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $cPacketType = 0;$/;"	v
cache	src/vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^    private static $cache;$/;"	v
cache	src/vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^    private static $cache;$/;"	v
cacheInstance	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    protected static $cacheInstance = null;$/;"	v
call	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Method generates change boolean function call$/;"	f
call	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Method generates decrimental function call$/;"	f
call	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Method generates incremental function call$/;"	f
call	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Method generates user defined function call$/;"	f
call	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function call()$/;"	f
callPrevious	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function registerExceptionHandler($level = null, $callPrevious = true)$/;"	v
call_array	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function call_array($method, array $args)$/;"	f
callablePreviousProvider	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    public function callablePreviousProvider()$/;"	f
callback	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $callback = function ($arg) {$/;"	v
callback	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $callback = function ($string) use ($res) {$/;"	v
callback	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $callback = function ($content, array $records) use ($expectedMessage) {$/;"	v
callback	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $callback = function () {$/;"	v
callback	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $callback = function ($ex) {$/;"	v
caller	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $caller = next($dd);$/;"	v
caller	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $caller = next($dd);$/;"	v
can	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^ * This simple wrapper class can be used to extend handlers functionality.$/;"	c
capSize	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^            $capSize = $this->capSize;$/;"	v
capSize	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^        $this->capSize = $capSize;$/;"	v
capSize	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    protected $capSize;$/;"	v
capture	src/vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^    public function capture($data, $stack, $vars = null)$/;"	f
ch	src/vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^        $ch = curl_init();$/;"	v
ch	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $ch = curl_init();$/;"	v
ch	src/vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^        $ch = curl_init();$/;"	v
ch	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $ch = curl_init();$/;"	v
ch	src/vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^        $ch = curl_init();$/;"	v
channel	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->channel = $channel;$/;"	v
channel	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $channel;$/;"	v
channel	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    public function __construct($webhookUrl, $channel = null, $username = null, $useAttachment = true, $iconEmoji = null, $useShortAttachment = false, $includeContextAndExtra = false, $level = Logger::CRITICAL, $bubble = true, array $excludeFields = array())$/;"	v
channel	src/vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^        $this->channel = $channel;$/;"	v
channel	src/vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^    private $channel;$/;"	v
channel	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $channel = '#test';$/;"	v
channel	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    private function createHandler($token = 'myToken', $channel = 'channel1', $username = 'Monolog', $useAttachment = true, $iconEmoji = null, $useShortAttachment = false, $includeExtra = false)$/;"	v
channelToActionLevel	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^        $this->channelToActionLevel = array_map('Monolog\\Logger::toMonologLevel', $channelToActionLevel);$/;"	v
channelToActionLevel	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^    private $channelToActionLevel;$/;"	v
channelToActionLevel	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^    public function __construct($defaultActionLevel, $channelToActionLevel = array())$/;"	v
char	src/vendor/phptars/tars2php/src/tars2php.php	/^                    || $char == '\\x0B' || $char == '\\0') {$/;"	v
char	src/vendor/phptars/tars2php/src/tars2php.php	/^                $char = $param[$i];$/;"	v
char	src/vendor/phptars/tars2php/src/tars2php.php	/^                $char = fgetc($this->fp);$/;"	v
char	src/vendor/phptars/tars2php/src/tars2php.php	/^                if ($char == '{' || Utils::isSpace($char) || $char == '\\r'$/;"	v
char	src/vendor/phptars/tars2php/src/tars2php.php	/^            $char = $rest[$i];$/;"	v
char	src/vendor/phptars/tars2php/src/tars2php.php	/^            $char = $returnType[$i];$/;"	v
char	src/vendor/phptars/tars2php/src/tars2php.php	/^            $char = $wholeType[$i];$/;"	v
char	src/vendor/phptars/tars2php/src/tars2php.php	/^            $char = fgetc($this->fp);$/;"	v
char	src/vendor/phptars/tars2php/src/tars2php.php	/^        if ($char == "\\n" || $char == '\\r' || bin2hex($char) == '0a' || bin2hex($char) == '0b' ||$/;"	v
char	src/vendor/phptars/tars2php/src/tars2php.php	/^        if ($char == ' ' || $char == "\\t") {$/;"	v
charBuffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $charBuffer = \\TUPAPI::putChar($paramName, $char, $iVersion);$/;"	v
charBuffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $charBuffer = \\TUPAPI::putChar($tag, $char, $iVersion);$/;"	v
charBuffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $charBuffer = \\TUPAPI::putChar($paramName, $char, $iVersion);$/;"	v
charBuffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $charBuffer = \\TUPAPI::putChar($tag, $char, $iVersion);$/;"	v
charBuffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $charBuffer = \\TUPAPI::putChar($paramName, $char, $iVersion);$/;"	v
charBuffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $charBuffer = \\TUPAPI::putChar($tag, $char, $iVersion);$/;"	v
charset	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $charset = array_pop($params);$/;"	v
charsetName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->charsetName = $charsetName;$/;"	v
charsetName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->charsetName = 'UTF-8';$/;"	v
charsetName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $charsetName;$/;"	v
charsetName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->charsetName = $charsetName;$/;"	v
charsetName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->charsetName = $config['tars']['application']['client']['charsetName'];$/;"	v
charsetName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->charsetName = 'UTF-8';$/;"	v
charsetName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $charsetName;$/;"	v
checkConfig	src/vendor/phptars/tars-config/src/ConfigServant.php	/^    public function checkConfig($appServerName, $filename, $host, &$result)$/;"	f
checkConfigByInfo	src/vendor/phptars/tars-config/src/ConfigServant.php	/^    public function checkConfigByInfo(ConfigInfo $configInfo, &$result)$/;"	f
checkPropagation	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function checkPropagation()$/;"	f
checkRelation	src/service/validate/article/ValidateArticle.php	/^    public function checkRelation($data)$/;"	f
checkResource	src/service/validate/article/ValidateArticle.php	/^    public function checkResource($data)$/;"	f
checksum	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $checksum = '098f6bcd4621d373cade4e832627b4f6';$/;"	v
chunk	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^                $chunk = $this->fwrite($data);$/;"	v
chunk	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^                $chunk = $this->fwrite(substr($data, $sent));$/;"	v
chunkSize	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->chunkSize = $bytes;$/;"	v
chunkSize	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $chunkSize = null;$/;"	v
chunkSize	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^        $chunkSize = self::DATAGRAM_MAX_LENGTH - strlen($header);$/;"	v
class	src/index.php	/^$class = new Command($cmd, $config_path);$/;"	v
class	src/vendor/monolog/monolog/src/Monolog/Utils.php	/^        $class = \\get_class($object);$/;"	v
class	src/vendor/phptars/tars-server/src/cmd/Command.php	/^            $class = new Restart($confPath);$/;"	v
class	src/vendor/phptars/tars-server/src/cmd/Command.php	/^            $class = new Start($confPath);$/;"	v
class	src/vendor/phptars/tars-server/src/cmd/Command.php	/^            $class = new Stop($confPath);$/;"	v
class	src/vendor/phptars/tars-server/src/cmd/Restart.php	/^        $class = new Start($configPath);$/;"	v
class	src/vendor/phptars/tars-server/src/cmd/Restart.php	/^        $class = new Stop($configPath);$/;"	v
class	src/vendor/phptars/tars-server/src/core/Event.php	/^            $class = $namespaceName . 'controller\\IndexController';$/;"	v
class	src/vendor/phptars/tars-server/src/core/Event.php	/^            $class = $namespaceName . 'controller\\\\' . $route['class'];$/;"	v
classMap	src/vendor/composer/ClassLoader.php	/^            $this->classMap = $classMap;$/;"	v
classMap	src/vendor/composer/ClassLoader.php	/^            $this->classMap = array_merge($this->classMap, $classMap);$/;"	v
classMap	src/vendor/composer/ClassLoader.php	/^    private $classMap = array();$/;"	v
classMap	src/vendor/composer/autoload_real.php	/^            $classMap = require __DIR__ . '\/autoload_classmap.php';$/;"	v
classMapAuthoritative	src/vendor/composer/ClassLoader.php	/^        $this->classMapAuthoritative = $classMapAuthoritative;$/;"	v
classMapAuthoritative	src/vendor/composer/ClassLoader.php	/^    private $classMapAuthoritative = false;$/;"	v
className	src/vendor/phptars/tars-server/src/core/Server.php	/^                $className = $this->namespaceName . 'timer\\\\' . basename($runnable, '.php');$/;"	v
className	src/vendor/phptars/tars-server/src/core/Server.php	/^            $className = $this->servicesInfo['home-class'];$/;"	v
className	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $className = substr($proto, 0, $pos);$/;"	v
className	src/vendor/phptars/tars-server/tests/test.php	/^         $className = substr($proto, 0, $pos);$/;"	v
clear	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function clear()$/;"	f
clear	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function clear()$/;"	f
clear	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function clear()$/;"	f
clear	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function clear()$/;"	f
client	src/vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^        $this->client = $client;$/;"	v
client	src/vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^    private $client;$/;"	v
client	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^        $this->client = $client;$/;"	v
client	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected $client;$/;"	v
client	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^        $this->client = $client;$/;"	v
client	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    protected $client;$/;"	v
client	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^ *    $client = new \\Elastica\\Client();$/;"	v
client	src/vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^        $client = $this->getMockBuilder('Doctrine\\\\CouchDB\\\\CouchDBClient')$/;"	v
client	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^        $this->client = $this->getMockBuilder('Aws\\DynamoDb\\DynamoDbClient')$/;"	v
client	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^    private $client;$/;"	v
client	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $client = new Client($clientOpts);$/;"	v
client	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $client = new Client();$/;"	v
client	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $this->client = $this->getMockBuilder('Elastica\\Client')$/;"	v
client	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    protected $client;$/;"	v
client	src/vendor/phptars/tars-client/src/Communicator.php	/^        $client = new \\Swoole\\Coroutine\\Client(SWOOLE_SOCK_TCP);$/;"	v
client	src/vendor/phptars/tars-client/src/Communicator.php	/^        $client = new \\Swoole\\Coroutine\\Client(SWOOLE_SOCK_UDP);$/;"	v
client	src/vendor/phptars/tars-client/src/Communicator.php	/^        $client = new \\swoole_client(SWOOLE_SOCK_TCP | SWOOLE_KEEP);$/;"	v
client	src/vendor/phptars/tars-client/src/Communicator.php	/^        $client = new \\swoole_client(SWOOLE_SOCK_UDP);$/;"	v
client	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^        $client = new \\Swoole\\Coroutine\\Client(SWOOLE_SOCK_TCP);$/;"	v
client	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^        $client = new \\swoole_client(SWOOLE_SOCK_TCP);$/;"	v
client	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $client = new \\Swoole\\Coroutine\\Client(SWOOLE_SOCK_TCP);$/;"	v
client	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $client = new \\Swoole\\Coroutine\\Client(SWOOLE_SOCK_UDP);$/;"	v
client	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $client = new \\swoole_client(SWOOLE_SOCK_TCP);$/;"	v
client	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $client = new \\swoole_client(SWOOLE_SOCK_UDP);$/;"	v
client	src/vendor/phptars/tars-report/src/ServerF.php	/^            $client = new \\swoole_client(SWOOLE_SOCK_TCP, SWOOLE_SOCK_ASYNC); \/\/异步非阻塞$/;"	v
client	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^            $client = new \\swoole_client(SWOOLE_SOCK_TCP, SWOOLE_SOCK_ASYNC); \/\/异步非阻塞$/;"	v
client	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $client = new \\swoole_client(SWOOLE_SOCK_TCP | SWOOLE_KEEP);$/;"	v
clientOpts	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $clientOpts = array('host' => '127.0.0.1', 'port' => 1);$/;"	v
close	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function close()$/;"	f
close	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    public function close()$/;"	f
close	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function close()$/;"	f
close	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function close()$/;"	f
close	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    public function close()$/;"	f
close	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    public function close()$/;"	f
close	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function close()$/;"	f
close	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    public function close()$/;"	f
close	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^    public function close()$/;"	f
close	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    public function close()$/;"	f
close	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    public function close()$/;"	f
close	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function close()$/;"	f
closeSocket	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function closeSocket()$/;"	f
cmd	src/index.php	/^$cmd = strtolower($argv[2]);$/;"	v
cmd	src/vendor/phptars/tars-server/src/cmd/Command.php	/^        $cmd = $this->cmd;$/;"	v
cmd	src/vendor/phptars/tars-server/src/cmd/Command.php	/^        $this->cmd = $cmd;$/;"	v
cmd	src/vendor/phptars/tars-server/src/cmd/Command.php	/^    public $cmd;$/;"	v
cmd	src/vendor/phptars/tars-server/src/cmd/CommandBase.php	/^        $cmd = "ps aux | grep '" . $processName . "' | grep manager | grep -v grep  | awk '{ print $2}'";$/;"	v
cmd	src/vendor/phptars/tars-server/src/cmd/CommandBase.php	/^        $cmd = "ps aux | grep '" . $processName . "' | grep master | grep -v grep  | awk '{ print $2}'";$/;"	v
cmd	src/vendor/phptars/tars-server/src/cmd/CommandBase.php	/^        $cmd = "ps aux | grep '" . $processName . "' | grep worker | grep -v grep  | awk '{ print $2}'";$/;"	v
cmd	src/vendor/phptars/tars-server/src/cmd/Stop.php	/^        $cmd = "kill -9 {$pidList}";$/;"	v
cmd	src/vendor/phptars/tars-server/src/core/Server.php	/^                        $cmd = "ps aux | grep '" . $processName . "' | grep 'event worker process' | grep -v grep  | awk '{ print $2}'";$/;"	v
cmd	src/vendor/phptars/tars-server/src/core/Server.php	/^                        $cmd = \\TUPAPI::getString('cmd', $sBuffer, false, $iVersion);$/;"	v
cmd	src/vendor/phptars/tars-server/src/core/Server.php	/^                        $cmd = \\TUPAPI::getString(1, $sBuffer, false, $iVersion);$/;"	v
cmd	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $cmd = "kill -15 " . $server->master_pid;$/;"	v
code	src/impl/ArticleServantImpl.php	/^            $code = $e->getCode();$/;"	v
code	src/impl/ArticleServantImpl.php	/^            $code = $event->add();$/;"	v
code	src/impl/ArticleServantImpl.php	/^            $code = $event->delete();$/;"	v
code	src/impl/ArticleServantImpl.php	/^            $code = $event->get($data);$/;"	v
code	src/impl/ArticleServantImpl.php	/^            $code = $event->update();$/;"	v
code	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $code = E_USER_NOTICE;$/;"	v
code	src/vendor/phptars/tars-client/src/Communicator.php	/^                $code = Code::TARS_SOCKET_TIMEOUT;$/;"	v
code	src/vendor/phptars/tars-client/src/Communicator.php	/^            $code = Code::TARS_SOCKET_CONNECT_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/Communicator.php	/^            $code = Code::TARS_SOCKET_RECEIVE_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/Communicator.php	/^            $code = Code::TARS_SOCKET_SELECT_TIMEOUT;$/;"	v
code	src/vendor/phptars/tars-client/src/Communicator.php	/^            $code = Code::TARS_SOCKET_SEND_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/Communicator.php	/^            $code = Code::TARS_SOCKET_SET_NONBLOCK_FAILED; \/\/ 设置socket非阻塞失败$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_BOOL_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_CHAR_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_DOUBLE_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_FLOAT_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_INT32_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_INT64_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_MAP_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_SHORT_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_STRING_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_STRUCT_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_UINT16_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_UINT32_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_UINT8_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_VECTOR_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_BOOL_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_CHAR_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_DOUBLE_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_FLOAT_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_INT32_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_INT64_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_MAP_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_SHORT_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_STRING_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_STRUCT_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_UINT16_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_UINT32_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_UINT8_FAILED;$/;"	v
code	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_VECTOR_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^                $code = CodeMonitor::TARS_SOCKET_CONNECT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^                $code = CodeMonitor::TARS_SOCKET_SEND_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^            $code = CodeMonitor::TARS_SOCKET_CONNECT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_BOOL_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_CHAR_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_DOUBLE_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_FLOAT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_INT32_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_INT64_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_MAP_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_SHORT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_STRING_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_STRUCT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_UINT16_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_UINT32_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_UINT8_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_GET_VECTOR_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_BOOL_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_CHAR_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_DOUBLE_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_FLOAT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_INT32_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_INT64_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_MAP_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_SHORT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_STRING_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_STRUCT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_UINT16_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_UINT32_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_UINT8_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            $code = Code::TARS_PUT_VECTOR_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_BOOL_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_CHAR_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_DOUBLE_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_FLOAT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_INT32_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_INT64_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_MAP_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_SHORT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_STRING_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_STRUCT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_UINT16_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_UINT32_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_UINT8_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_GET_VECTOR_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_BOOL_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_CHAR_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_DOUBLE_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_FLOAT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_INT32_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_INT64_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_MAP_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_SHORT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_STRING_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_STRUCT_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_UINT16_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_UINT32_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_UINT8_FAILED;$/;"	v
code	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            $code = CodeMonitor::TARS_PUT_VECTOR_FAILED;$/;"	v
code	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                $code = CodeRegistry::TARS_SOCKET_TIMEOUT;$/;"	v
code	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $code = CodeRegistry::TARS_SOCKET_CONNECT_FAILED;$/;"	v
code	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $code = CodeRegistry::TARS_SOCKET_RECEIVE_FAILED;$/;"	v
code	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $code = CodeRegistry::TARS_SOCKET_SELECT_TIMEOUT;$/;"	v
code	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $code = CodeRegistry::TARS_SOCKET_SEND_FAILED;$/;"	v
code	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $code = CodeRegistry::TARS_SOCKET_SET_NONBLOCK_FAILED; \/\/ 设置socket非阻塞失败$/;"	v
codeToString	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private static function codeToString($code)$/;"	f
collectLogs	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    private function collectLogs()$/;"	f
collection	src/vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^        $collection = $this->getMock('stdClass', array('save'));$/;"	v
color	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^                $color = $labels[$string];$/;"	v
colors	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        static $colors = array('blue', 'green', 'red', 'magenta', 'orange', 'black', 'grey');$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^					foreach ($GROUP as $column => $value)$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^					foreach ($ORDER as $column => $value)$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^				$column = $column_fn . '(' . $this->columnPush($columns, $map) . ')';$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^				$column = $join;$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^				$column = $this->columnQuote($match[ 1 ]);$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^				$column = '1';$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^			$column = $columns;$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^			$column = $join;$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^			$column = $this->columnPush($columns, $map);$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^			$column = $this->columnQuote(preg_replace("\/(\\s*\\[(JSON|\\+|\\-|\\*|\\\/)\\]$)\/i", '', $key));$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^		$column = $where === null ? $join : $columns;$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^		$column = null;$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^		foreach ($columns as $column => $replacements)$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^	public function avg($table, $join, $column = null, $where = null)$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^	public function max($table, $join, $column = null, $where = null)$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^	public function min($table, $join, $column = null, $where = null)$/;"	v
column	src/vendor/catfan/medoo/src/Medoo.php	/^	public function sum($table, $join, $column = null, $where = null)$/;"	v
column	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $column = is_array($columns) ? implode(', ', $columns) : $columns;$/;"	v
columnMap	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function columnMap($columns, &$stack)$/;"	f
columnPush	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function columnPush(&$columns, &$map)$/;"	f
columnQuote	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function columnQuote($string)$/;"	f
column_key	src/vendor/catfan/medoo/src/Medoo.php	/^				$column_key = !empty($key_match[ 'alias' ]) ?$/;"	v
column_key	src/vendor/catfan/medoo/src/Medoo.php	/^				$column_key = $key_match[ 'column' ];$/;"	v
column_key	src/vendor/catfan/medoo/src/Medoo.php	/^				$column_key = $map[ 0 ];$/;"	v
column_map	src/vendor/catfan/medoo/src/Medoo.php	/^		$column_map = [];$/;"	v
columns	src/vendor/catfan/medoo/src/Medoo.php	/^					$columns = $join;$/;"	v
columns	src/vendor/catfan/medoo/src/Medoo.php	/^					$columns = '*';$/;"	v
columns	src/vendor/catfan/medoo/src/Medoo.php	/^					$columns = implode(array_map([$this, 'columnQuote'], $MATCH[ 'columns' ]), ', ');$/;"	v
columns	src/vendor/catfan/medoo/src/Medoo.php	/^					$columns = null;$/;"	v
columns	src/vendor/catfan/medoo/src/Medoo.php	/^				$columns = $join;$/;"	v
columns	src/vendor/catfan/medoo/src/Medoo.php	/^				$columns = [$/;"	v
columns	src/vendor/catfan/medoo/src/Medoo.php	/^			$columns = [$columns];$/;"	v
columns	src/vendor/catfan/medoo/src/Medoo.php	/^		$columns = [];$/;"	v
columns	src/vendor/catfan/medoo/src/Medoo.php	/^		$columns = array_unique($columns);$/;"	v
columns	src/vendor/catfan/medoo/src/Medoo.php	/^	public function select($table, $join, $columns = null, $where = null)$/;"	v
columns	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $columns = '*';$/;"	v
columns	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function getOne($tableName, $columns = '*')$/;"	v
combineRecords	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private function combineRecords($records)$/;"	f
command	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $command = "netstat -anlp | grep tcp | grep -E '{$grepPidInfo}' | awk '{print $6}' | awk -F: '{print $1}'|sort|uniq -c|sort -nr";$/;"	v
commands	src/vendor/catfan/medoo/src/Medoo.php	/^		$commands = (isset($options[ 'command' ]) && is_array($options[ 'command' ])) ? $options[ 'command' ] : [];$/;"	v
commit	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function commit()$/;"	f
commonPrefix	src/vendor/phptars/tars2php/src/tars2php.php	/^        $commonPrefix = '$__buffer = TUPAPIWrapper::';$/;"	v
comparison	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                    $comparison = ' ' . $operator . ' (';$/;"	v
comparison	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $comparison = ' ' . $operator. ' (';$/;"	v
composerRequire574af4278003c7859f368489409dc322	src/vendor/composer/autoload_real.php	/^function composerRequire574af4278003c7859f368489409dc322($fileIdentifier, $file)$/;"	f
cond	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $cond = '';$/;"	v
condition	src/vendor/catfan/medoo/src/Medoo.php	/^						$condition = $column . ' ' . $operator . ' ';$/;"	v
conditionToSql	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    private function conditionToSql($operator, $val) {$/;"	f
conditions	src/vendor/catfan/medoo/src/Medoo.php	/^			$conditions = array_diff_key($where, array_flip($/;"	v
conf	src/vendor/phptars/tars-utils/src/Utils.php	/^        $conf = self::parseText($text);$/;"	v
conf	src/vendor/phptars/tars-utils/tests/test.php	/^$conf = \\Tars\\Utils::parseFile('.\/QDPHP.TARSServer.config.conf');$/;"	v
conf2	src/vendor/phptars/tars-utils/tests/test.php	/^$conf2 = \\Tars\\Utils::getTarsConf();$/;"	v
confPath	src/vendor/phptars/tars-server/src/cmd/Command.php	/^        $confPath = $this->confPath;$/;"	v
confPath	src/vendor/phptars/tars-server/src/cmd/Command.php	/^        $this->confPath = $confPath;$/;"	v
confPath	src/vendor/phptars/tars-server/src/cmd/Command.php	/^    public $confPath;$/;"	v
config	src/conf/DBConf.php	/^    public static $config = array($/;"	v
config	src/vendor/catfan/medoo/src/Medoo.php	/^						$config = [$/;"	v
config	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $config = \\Tars\\Utils::parseFile($sFilePath);$/;"	v
config	src/vendor/phptars/tars-client/tests/testServant.php	/^$config = new \\Tars\\client\\CommunicatorConfig();$/;"	v
config	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $config = TUPAPIWrapper::getString('config', 2, $sBuffer, $this->_iVersion);$/;"	v
config	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $config = TUPAPIWrapper::getString('config', 4, $sBuffer, $this->_iVersion);$/;"	v
config	src/vendor/phptars/tars-config/tests/demo.php	/^$config = new \\Tars\\client\\CommunicatorConfig();$/;"	v
config	src/vendor/phptars/tars-log/tests/demo.php	/^$config = new \\Tars\\client\\CommunicatorConfig();$/;"	v
config	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $config = \\Tars\\Utils::parseFile($sFilePath);$/;"	v
config	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $config = new \\Tars\\client\\CommunicatorConfig();$/;"	v
config	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $config = new \\Tars\\client\\CommunicatorConfig();$/;"	v
config	src/vendor/phptars/tars2php/src/tars2php.php	/^$config = require_once $configFile;$/;"	v
configContent	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $configContent = '';$/;"	v
configF	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $configF = new ConfigServant($config);$/;"	v
configFile	src/vendor/phptars/tars2php/src/tars2php.php	/^$configFile = $argv[1];$/;"	v
configPath	src/vendor/phptars/tars-server/src/cmd/CommandBase.php	/^        $this->configPath = $configPath;$/;"	v
configPath	src/vendor/phptars/tars-server/src/cmd/CommandBase.php	/^    public $configPath;$/;"	v
configPath	src/vendor/phptars/tars-server/src/cmd/Restart.php	/^        $configPath = $this->configPath;$/;"	v
configPath	src/vendor/phptars/tars-server/src/cmd/Start.php	/^        $configPath = $this->configPath;$/;"	v
configStr	src/vendor/phptars/tars-server/src/core/Server.php	/^                        $configStr = '';$/;"	v
config_path	src/index.php	/^$config_path = $argv[1];$/;"	v
config_path	src/index.php	/^$config_path = substr($config_path,  + 9);$/;"	v
conigServant	src/vendor/phptars/tars-config/tests/demo.php	/^$conigServant = new \\Tars\\config\\ConfigServant($config);$/;"	v
conigServant	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $conigServant = new \\Tars\\config\\ConfigServant($config);$/;"	v
connect	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function connect($connectionName = 'default')$/;"	f
connect	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function connect()$/;"	f
connectHttp	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    protected function connectHttp()$/;"	f
connectIfNotConnected	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function connectIfNotConnected()$/;"	f
connectTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->connectTimeout = $connectTimeout;$/;"	v
connectTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $connectTimeout = 3000;$/;"	v
connectTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->connectTimeout = $config['tars']['application']['client']['connectTimeout'];$/;"	v
connectTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->connectTimeout = $connectTimeout;$/;"	v
connectTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $connectTimeout = 3000;$/;"	v
connectUdp	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    protected function connectUdp()$/;"	f
connection	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function connection($name)$/;"	f
connectionString	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^        $connectionString = 'ssl:\/\/' . self::FLEEP_HOST . ':443';$/;"	v
connectionString	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $connectionString = $useSSL ? 'ssl:\/\/'.$host.':443' : $host.':80';$/;"	v
connectionString	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $connectionString = $useSSL ? 'ssl:\/\/api.pushover.net:443' : 'api.pushover.net:80';$/;"	v
connectionString	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->connectionString = $connectionString;$/;"	v
connectionString	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $connectionString;$/;"	v
connectionTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->connectionTimeout = (float) $seconds;$/;"	v
connectionTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->connectionTimeout = (float) ini_get('default_socket_timeout');$/;"	v
connectionTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $connectionTimeout;$/;"	v
connectionsSettings	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $connectionsSettings = array();$/;"	v
connector	src/vendor/catfan/medoo/src/Medoo.php	/^								$connector = ' ' . array_keys($value)[ 0 ] . ' ';$/;"	v
connector	src/vendor/catfan/medoo/src/Medoo.php	/^						$connector = ' OR ';$/;"	v
connector	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^            $connector = Connector::getInstance();$/;"	v
connector	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $this->connector = $this->initConnector($connector);$/;"	v
connector	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private $connector;$/;"	v
connector	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function initConnector(Connector $connector = null)$/;"	v
connector	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $connector = $this->getMockBuilder('PhpConsole\\Connector')$/;"	v
connector	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $this->connector = $this->initConnectorMock();$/;"	v
connector	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected $connector;$/;"	v
constFlag	src/vendor/phptars/tars2php/src/tars2php.php	/^            $constFlag = strpos($line, 'const');$/;"	v
constants	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^                $constants = $constants['Core'];$/;"	v
constants	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^                $constants = get_defined_constants(true);$/;"	v
constants	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^            $constants = $pcntl->getConstants();$/;"	v
construct	src/vendor/phptars/tars2php/src/tars2php.php	/^        $construct = $this->tabSymbol.'public function __construct() {'.$this->returnSymbol.$/;"	v
constructArgumentProvider	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function constructArgumentProvider()$/;"	f
constructorArgs	src/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^        $constructorArgs = array($token, Logger::DEBUG);$/;"	v
constructorArgs	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $constructorArgs = array($token, $room, $name, $notify, Logger::DEBUG, true, true, 'text', $host, $version);$/;"	v
constructorArgs	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $constructorArgs = array($token, $user, $title);$/;"	v
constructorArgs	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^        $constructorArgs = array($token, $channel, $username, $useAttachment, $iconEmoji, Logger::DEBUG, true, $useShortAttachment, $includeExtra);$/;"	v
consts	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->consts = '';$/;"	v
consts	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $consts = '';$/;"	v
containername	src/vendor/phptars/tars-config/src/classes/GetConfigListInfo.php	/^    public $containername = '';$/;"	v
content	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^        $content = $this->buildContent($record);$/;"	v
content	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^        $content = $this->buildContent($record);$/;"	v
content	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $content = $this->buildContent($record);$/;"	v
content	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $content = wordwrap($content, $this->maxColumnWidth);$/;"	v
content	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $content = $this->buildContent($record);$/;"	v
content	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $content = $this->buildContent($record);$/;"	v
content	src/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^        $content = fread($this->res, 1024);$/;"	v
content	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $content = fread($this->res, 1024);$/;"	v
content	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $content = fread($this->res, 12000);$/;"	v
content	src/vendor/monolog/monolog/tests/Monolog/Handler/InsightOpsHandlerTest.php	/^        $content = fread($this->resource, 1024);$/;"	v
content	src/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $content = fread($this->res, 1024);$/;"	v
content	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $content = fread($this->res, 1024);$/;"	v
content	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^        $content = fread($this->res, 1024);$/;"	v
content2	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^        $content2 = fread($this->res, 1024);$/;"	v
contentType	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $this->contentType = $contentType;$/;"	v
contentType	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $contentType = 'text\/plain';$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^            $context = static::dump('Context', $record['context']);$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^        $context = stream_context_create(array($/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^            $context = & $record['context'];$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $context = $record['context'];$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $context = array_intersect_key($record['context'], $this->parameterNames);$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^        $context = $record['context'];$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^        $context = array_merge($context, $record['extra'], array($/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addAlert($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addCritical($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addDebug($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addEmergency($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addError($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addInfo($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addNotice($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addRecord($level, $message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addWarning($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function alert($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function crit($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function critical($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function debug($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function emerg($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function emergency($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function err($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function error($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function info($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function log($level, $message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function notice($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function warn($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function warning($message, array $context = array())$/;"	v
context	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^        $context = isset($siginfo) ? $siginfo : array();$/;"	v
context	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^        $context = array('file' => 'foo', 'line' => 1);$/;"	v
context	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $context = array($tag, 'custom' => mt_rand());$/;"	v
context	src/vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        $context = array('foo' => 'bar', 'level' => $level);$/;"	v
context	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $context = array('test' => 1);$/;"	v
context	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $context = [];$/;"	v
context	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $context = [];$/;"	v
context	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function alert($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function critical($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function debug($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function emergency($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function error($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function info($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function notice($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function warning($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function alert($message, array $context = array());$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function critical($message, array $context = array());$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function debug($message, array $context = array());$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function emergency($message, array $context = array());$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function error($message, array $context = array());$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function info($message, array $context = array());$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function log($level, $message, array $context = array());$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function notice($message, array $context = array());$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function warning($message, array $context = array());$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    abstract public function log($level, $message, array $context = array());$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function alert($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function critical($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function debug($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function emergency($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function error($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function info($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function notice($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function warning($message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/NullLogger.php	/^    public function log($level, $message, array $context = array())$/;"	v
context	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^        $context = array($/;"	v
contextPrefix	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        $this->contextPrefix = $contextPrefix;$/;"	v
contextPrefix	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    protected $contextPrefix;$/;"	v
contextPrefix	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^        $this->contextPrefix = $contextPrefix;$/;"	v
contextPrefix	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    protected $contextPrefix;$/;"	v
contexts	src/vendor/phptars/tars-report/src/ServerF.php	/^            $contexts = [];$/;"	v
contexts	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^            $contexts = [];$/;"	v
contexts	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $contexts = [];$/;"	v
controls	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^     * The return value of this function controls the bubbling process of the handler stack.$/;"	f
convert	src/vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^        $convert = function ($record) {$/;"	v
convertBasicType	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^    private function convertBasicType($type)$/;"	f
convertBasicType	src/vendor/phptars/tars-server/tests/test.php	/^function convertBasicType($type)$/;"	f
convertFields	src/common/Common.php	/^    public static function convertFields($fields = [], $action = 'tohump')$/;"	f
convertToArgs	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^    public function convertToArgs($paramInfo, $unpackResult)$/;"	f
convertToString	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    protected function convertToString($data)$/;"	f
convertToString	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected function convertToString($data)$/;"	f
cookie	src/vendor/phptars/tars-server/src/core/Response.php	/^    public function cookie($/;"	f
copy	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $copy = unserialize(serialize($this));$/;"	v
copy	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function copy()$/;"	f
copyAnnotation	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function copyAnnotation($startChar, $lineString)$/;"	f
copyAnnotation	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function copyAnnotation()$/;"	f
copyDir	src/vendor/phptars/tars-deploy/src/Deploy.php	/^    public static function copyDir($source, $dest, $tmpDir)$/;"	f
correctly	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^            throw new \\InvalidArgumentException('The FlowdockHandler requires an instance of Monolog\\Formatter\\FlowdockFormatter to function correctly');$/;"	f
correctly	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^        throw new \\InvalidArgumentException('The FlowdockHandler must be configured (via setFormatter) with an instance of Monolog\\Formatter\\FlowdockFormatter to function correctly');$/;"	f
count	src/model/mysql/content/ArticleBasic.php	/^            $count = $param->count ? $param->count :10;$/;"	v
count	src/model/mysql/content/ArticleBasic.php	/^        $count = $this->doSql($sql_count);$/;"	v
count	src/servant/Article/Server/Obj/classes/ListParam.php	/^	public $count="10"; $/;"	v
count	src/vendor/catfan/medoo/src/Medoo.php	/^	public function count($table, $join = null, $column = null, $where = null)$/;"	f
count	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $count = count($tables);$/;"	v
count	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->count = $stmt->affected_rows;$/;"	v
count	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->count = 0;$/;"	v
count	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        return $this->count == $count;$/;"	v
count	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public $count = 0;$/;"	v
count	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    protected function count () {$/;"	f
count	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^            $count = 1;$/;"	v
count	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^            $count = 1;$/;"	v
count	src/vendor/monolog/monolog/tests/Monolog/Handler/SamplingHandlerTest.php	/^        $count = count($testHandler->getRecords());$/;"	v
count	src/vendor/phptars/tars-client/src/Communicator.php	/^        $count = count($this->_routeInfo) - 1;$/;"	v
count	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/LotofTags.php	/^    public $count;$/;"	v
count	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/OutStruct.php	/^    public $count;$/;"	v
count	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^    public $count;$/;"	v
count	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgBody.php	/^    public $count;$/;"	v
count	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^            $count = count($this->_routeInfo) - 1;$/;"	v
count	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $count = count($this->_routeInfo) - 1;$/;"	v
count	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $count; $/;"	v
count	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/OutStruct.php	/^	public $count; $/;"	v
count	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^	public $count; $/;"	v
count	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $count; $/;"	v
count	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/OutStruct.php	/^	public $count; $/;"	v
count	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^	public $count; $/;"	v
cpuUsage	src/vendor/phptars/tars-server/src/core/Server.php	/^                                    $cpuUsage = 100 - $cpuInfo;$/;"	v
createAmqpMessage	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    private function createAmqpMessage($data)$/;"	f
createDir	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    private function createDir()$/;"	f
createExceptionRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    private function createExceptionRecord($level = Logger::DEBUG, $message = 'test', $exception = null)$/;"	f
createHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^    private function createHandler($token = 'myToken')$/;"	f
createHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    private function createHandler($token = 'myToken', $room = 'room1', $name = 'Monolog', $notify = false, $host = 'api.hipchat.com', $version = 'v1')$/;"	f
createHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/InsightOpsHandlerTest.php	/^    private function createHandler()$/;"	f
createHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^    private function createHandler()$/;"	f
createHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    private function createHandler($token = 'myToken', $user = 'myUser', $title = 'Monolog')$/;"	f
createHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    private function createHandler()$/;"	f
createHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    private function createHandler($token = 'myToken', $channel = 'channel1', $username = 'Monolog', $useAttachment = true, $iconEmoji = null, $useShortAttachment = false, $includeExtra = false)$/;"	f
createHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    private function createHandler($connectionString)$/;"	f
createHeader	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function createHeader(array $meta, $message)$/;"	f
createInstance	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^    private function createInstance($proto)$/;"	f
createInstance	src/vendor/phptars/tars-server/tests/test.php	/^ function createInstance($proto)$/;"	f
createRecordHeader	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function createRecordHeader(array $record)$/;"	f
createSocketResource	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function createSocketResource()$/;"	f
createdAt	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $this->createdAt = date("Y-m-d H:i:s");$/;"	v
crit	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function crit($message, array $context = array())$/;"	f
critical	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function critical($message, array $context = array())$/;"	f
critical	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function critical($message, array $context = array())$/;"	f
critical	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function critical($message, array $context = array());$/;"	f
critical	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function critical($message, array $context = array())$/;"	f
curLen	src/vendor/phptars/tars-client/src/Communicator.php	/^        $curLen = 0;$/;"	v
curLen	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $curLen = 0;$/;"	v
curlErrno	src/vendor/monolog/monolog/src/Monolog/Handler/Curl/Util.php	/^                $curlErrno = curl_errno($ch);$/;"	v
curlError	src/vendor/monolog/monolog/src/Monolog/Handler/Curl/Util.php	/^                    $curlError = curl_error($ch);$/;"	v
currentModule	src/vendor/phptars/tars2php/src/tars2php.php	/^                $currentModule = $name;$/;"	v
currentSlice	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $currentSlice = $this->getTimeSlice($this->_reportInterval);$/;"	v
current_stack	src/vendor/catfan/medoo/src/Medoo.php	/^				$current_stack = [];$/;"	v
current_stack	src/vendor/catfan/medoo/src/Medoo.php	/^			$current_stack = [];$/;"	v
customErrorHandler	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    private function customErrorHandler($code, $msg)$/;"	f
customParameters	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public static $customParameters;$/;"	v
d	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                $d = $d->data;$/;"	v
d	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $d = TUPAPIWrapper::getBool('d', 4, $sBuffer, $this->_iVersion);$/;"	v
d	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$d = TUPAPIWrapper::getBool("d",4,$sBuffer,$this->_iVersion);$/;"	v
d	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	 * @param bool $d =out=$/;"	v
data	src/impl/ArticleServantImpl.php	/^	 * @param string $data =out=$/;"	v
data	src/libs/Mysql.php	/^            $data = $this->db->query($sql);$/;"	v
data	src/libs/Mysql.php	/^        $data = $this->db->where($where,$param)->get($this->dbTable);$/;"	v
data	src/model/mysql/content/ArticleBasic.php	/^        $data = $this->doSql($sql);$/;"	v
data	src/model/mysql/content/ArticleBasic.php	/^        $data = $this->getBasic($where,$param);$/;"	v
data	src/model/mysql/content/ArticleBasic.php	/^        $data = $this->getDataByWhere($where,$param);$/;"	v
data	src/model/mysql/content/ArticleRelationship.php	/^        $data = $this->db->where($where,$param)->get($this->dbTable);$/;"	v
data	src/model/mysql/content/ArticleRelationship.php	/^        $data = $this->db->where('top_id',$ab_ids,'IN')->where('del_flag != ?',[0])->get($this->dbTable);$/;"	v
data	src/model/mysql/content/ArticleResource.php	/^        $data = $this->db->where($where,$param)->get($this->dbTable);$/;"	v
data	src/model/mysql/content/ArticleResource.php	/^        $data = $this->db->where('ab_id',$ab_ids,'IN')->where('del_flag != ?',[0])->get($this->dbTable);$/;"	v
data	src/servant/Article/Server/Obj/ArticleServant.php	/^	 * @param string $data =out=$/;"	v
data	src/service/article/Article.php	/^        $data = $articleListObj;$/;"	v
data	src/service/article/Article.php	/^        $data = json_decode($this->param,true);$/;"	v
data	src/service/validate/Validate.php	/^    public $data;$/;"	v
data	src/service/validate/article/ValidateArticle.php	/^        $this->data = $data;$/;"	v
data	src/service/validate/article/ValidateArticle.php	/^        $this->data = json_decode($this->data,true);$/;"	v
data	src/vendor/catfan/medoo/src/Medoo.php	/^						$data = array_values($value);$/;"	v
data	src/vendor/catfan/medoo/src/Medoo.php	/^			$data = $query->fetchAll(PDO::FETCH_ASSOC);$/;"	v
data	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $this->data = $data;$/;"	v
data	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $this->data = $r;$/;"	v
data	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $data = $this->data;$/;"	v
data	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $data = is_null($data) ? [] : $data;$/;"	v
data	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $this->data = $results;$/;"	v
data	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public $data;$/;"	v
data	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^        $data = $this->normalize($data);$/;"	v
data	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $data = array($/;"	v
data	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^            $data = preg_replace_callback($/;"	v
data	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^            $data = str_replace($/;"	v
data	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^        $data = array($/;"	v
data	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^            $data = $this->getFormatter()->format($record);$/;"	v
data	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^        $data = $record["formatted"];$/;"	v
data	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^            $data = base64_encode(utf8_encode($json));$/;"	v
data	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^        $data = base64_encode(utf8_encode($json));$/;"	v
data	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $data = array('time' => $date->format('Y-m-d\\TH:i:s.uO'));$/;"	v
data	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $data = $this->generateDataStream($record);$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^        $data = $doc->getData();$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^        $data = array();$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $data = $resp->getData();$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $data = $response->getData();$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^        $data = array_merge($this->get_user_data(), $data);$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($debugLoggerRecord);$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($emergencyLoggerRecord);$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($errorLoggerRecord);$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($infoLoggerRecord);$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($loggerRecord);$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($this->getRecord($level, 'test', array('test' => 1)));$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($this->getRecord());$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($this->getRecord(Logger::WARNING, $message));$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($warningLoggerRecord);$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $slackRecord->getSlackData($record);$/;"	v
data	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $slackRecord->getSlackData($this->getRecord());$/;"	v
data	src/vendor/phptars/tars-client/src/Communicator.php	/^            $data = $client ? $client->recv() : '';$/;"	v
data	src/vendor/phptars/tars-client/src/Communicator.php	/^            $data = \\socket_read($sock, 65536, PHP_BINARY_READ);$/;"	v
data	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $data = $client ? $client->recv() : '';$/;"	v
data	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $data = \\socket_read($sock, 65536, PHP_BINARY_READ);$/;"	v
data	src/vendor/phptars/tars-report/src/ServerFSync.php	/^                $data = $client->recv(65535);$/;"	v
data	src/vendor/phptars/tars-server/src/core/Request.php	/^    public $data;$/;"	v
data	src/vendor/phptars/tars-server/tests/ClientConf.php	/^        $data = self::getInstance()->get(self::KEY);$/;"	v
data	src/vendor/phptars/tars-utils/src/Conf.php	/^        $data = self::getInstance()->get(self::KEY);$/;"	v
data2	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data2 = $slackRecord2->getSlackData($record);$/;"	v
dataArray	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^        $dataArray = array($/;"	v
dataArray	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $dataArray = array($/;"	v
dataArray	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $dataArray = array($/;"	v
dataArray	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $dataArray = array_merge($extra, $context, $dataArray);$/;"	v
dataArray	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $dataArray = array();$/;"	v
dataArray	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $dataArray = $this->prepareContentData($record);$/;"	v
dataArray	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $dataArray = $this->slackRecord->getSlackData($record);$/;"	v
dataColumns	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $dataColumns = array_keys($tableData);$/;"	v
dataGetAttachmentColor	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function dataGetAttachmentColor()$/;"	f
dataImplode	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function dataImplode($data, &$map, $conjunctor)$/;"	f
dataKeys	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function insertMulti($tableName, array $multiInsertData, array $dataKeys = null)$/;"	v
dataMap	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function dataMap($data, $columns, $column_map, &$stack)$/;"	f
dataPath	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->dataPath = $config['tars']['application']['server']['datapath'];$/;"	v
dataPath	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->dataPath = $dataPath;$/;"	v
dataPath	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $dataPath;$/;"	v
dataPath	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->dataPath = $config['tars']['application']['server']['dataPath'];$/;"	v
dataPath	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->dataPath = $dataPath;$/;"	v
dataPath	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $dataPath;$/;"	v
dataPath	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->dataPath = $tarsServerConf['datapath'];$/;"	v
dataPath	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $dataPath;$/;"	v
dataStringify	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function dataStringify()$/;"	f
data_type	src/vendor/catfan/medoo/src/Medoo.php	/^							$data_type = (is_numeric($value[ 0 ]) && is_numeric($value[ 1 ])) ? PDO::PARAM_INT : PDO::PARAM_STR;$/;"	v
datas	src/vendor/catfan/medoo/src/Medoo.php	/^			$datas = [$datas];$/;"	v
date	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $date = $record['datetime'];$/;"	v
dateFormat	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function __construct($format = null, $dateFormat = null, $allowInlineLineBreaks = false, $ignoreEmptyContextAndExtra = false)$/;"	v
dateFormat	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^        $this->dateFormat = $dateFormat ?: static::SIMPLE_DATE;$/;"	v
dateFormat	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected $dateFormat;$/;"	v
dateFormat	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->dateFormat = $dateFormat;$/;"	v
dateFormat	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->dateFormat = 'Y-m-d';$/;"	v
dateFormat	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected $dateFormat;$/;"	v
dateFormat	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^        $this->dateFormat = $dateFormat;$/;"	v
dateFormat	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    protected $dateFormat = '%Y%m%d';$/;"	v
dateFormatProvider	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function dateFormatProvider()$/;"	f
datetime	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $datetime = $record['datetime'];$/;"	v
datetime	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $datetime = null;$/;"	v
dayCallback	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $dayCallback = function($ago) use ($now) {$/;"	v
db	src/libs/DbMysqli.php	/^        $db = new \\MysqliDb($defaultConf);$/;"	v
db	src/libs/DbMysqli.php	/^        $this->db = $db;$/;"	v
db	src/libs/DbMysqli.php	/^    protected $db = 'default';$/;"	v
db	src/libs/DbMysqli.php	/^    public static function db():\\MysqliDb$/;"	f
db	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $db = isset($this->connectionsSettings[$this->defConnectionName]) ? $this->connectionsSettings[$this->defConnectionName]['db'] : null;$/;"	v
db	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * @uses $db = MySqliDb::getInstance();$/;"	v
db	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $this->db = MysqliDb::getInstance();$/;"	v
db	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    protected $db;$/;"	v
dbFields	src/model/mysql/content/ArticleAttr.php	/^    protected $dbFields = Array($/;"	v
dbFields	src/model/mysql/content/ArticleBasic.php	/^    protected $dbFields = Array($/;"	v
dbFields	src/model/mysql/content/ArticleDetails.php	/^    protected $dbFields = Array($/;"	v
dbFields	src/model/mysql/content/ArticleRelationship.php	/^    protected $dbFields = Array($/;"	v
dbFields	src/model/mysql/content/ArticleResource.php	/^    protected $dbFields = Array($/;"	v
dbName	src/libs/DbMysqli.php	/^        foreach (DBConf::$config as $dbName => $conn) {$/;"	v
dbName	src/model/mysql/content/ArticleAttr.php	/^    protected $dbName = "8mvs_content";$/;"	v
dbName	src/model/mysql/content/ArticleBasic.php	/^    protected $dbName = "8mvs_content";$/;"	v
dbName	src/model/mysql/content/ArticleDetails.php	/^    protected $dbName = "8mvs_content";$/;"	v
dbName	src/model/mysql/content/ArticleRelationship.php	/^    protected $dbName = "8mvs_content";$/;"	v
dbName	src/model/mysql/content/ArticleResource.php	/^    protected $dbName = "8mvs_content";$/;"	v
dbObject	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^class dbObject {$/;"	c
dbObjectAutoload	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private static function dbObjectAutoload ($classname) {$/;"	f
dbTable	src/model/mysql/content/ArticleAttr.php	/^    protected $dbTable = "article_attr";$/;"	v
dbTable	src/model/mysql/content/ArticleBasic.php	/^    protected $dbTable = "article_basic";$/;"	v
dbTable	src/model/mysql/content/ArticleDetails.php	/^    protected $dbTable = "article_details";$/;"	v
dbTable	src/model/mysql/content/ArticleRelationship.php	/^    protected $dbTable = "article_relationship";$/;"	v
dbTable	src/model/mysql/content/ArticleResource.php	/^    protected $dbTable = "article_resource";$/;"	v
dbTable	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $this->dbTable = get_class ($this);$/;"	v
dbTable	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    protected $dbTable;$/;"	v
dd	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $dd = debug_backtrace();$/;"	v
debug	src/vendor/catfan/medoo/src/Medoo.php	/^	public function debug()$/;"	f
debug	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function debug($message, array $context = array())$/;"	f
debug	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function debug($message, array $context = array())$/;"	f
debug	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function debug($message, array $context = array());$/;"	f
debug	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function debug($message, array $context = array())$/;"	f
debugDispatcher	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^            $debugDispatcher = $this->initDebugDispatcherMock($this->connector);$/;"	v
debugDispatcher	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $this->debugDispatcher = $this->initDebugDispatcherMock($this->connector);$/;"	v
debugDispatcher	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected $debugDispatcher;$/;"	v
debugLoggerRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $debugLoggerRecord = $this->getRecord(Logger::DEBUG);$/;"	v
debug_mode	src/vendor/catfan/medoo/src/Medoo.php	/^			$this->debug_mode = false;$/;"	v
debug_mode	src/vendor/catfan/medoo/src/Medoo.php	/^		$this->debug_mode = true;$/;"	v
debug_mode	src/vendor/catfan/medoo/src/Medoo.php	/^	protected $debug_mode = false;$/;"	v
dec	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function dec($num = 1)$/;"	f
decode	src/vendor/phptars/tars-client/src/ResponsePacket.php	/^    public function decode()$/;"	f
decode	src/vendor/phptars/tars-monitor/src/client/ResponsePacket.php	/^    public function decode()$/;"	f
decode	src/vendor/phptars/tars-monitor/src/client/ResponsePacketMonitor.php	/^    public function decode()$/;"	f
decode	src/vendor/phptars/tars-registry/src/client/ResponsePacketRegistry.php	/^    public function decode()$/;"	f
decodeRet	src/vendor/phptars/tars-client/src/ResponsePacket.php	/^        $decodeRet = \\TUPAPI::decode($this->_responseBuf, $this->iVersion);$/;"	v
decodeRet	src/vendor/phptars/tars-monitor/src/client/ResponsePacket.php	/^        $decodeRet = \\TUPAPI::decode($this->_responseBuf, $this->iVersion);$/;"	v
decodeRet	src/vendor/phptars/tars-monitor/src/client/ResponsePacketMonitor.php	/^        $decodeRet = \\TUPAPI::decode($this->_responseBuf, $this->iVersion);$/;"	v
decodeRet	src/vendor/phptars/tars-registry/src/client/ResponsePacketRegistry.php	/^        $decodeRet = \\TUPAPI::decode($this->_responseBuf, $this->iVersion);$/;"	v
decodeRet	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $decodeRet = \\TUPAPI::decodeReqPacket($data);$/;"	v
decrField	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    public function decrField($key, $field, $decrby = 1)$/;"	f
decrField	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^    public function decrField($key, $field, $decrby = 1)$/;"	f
decrField	src/vendor/phptars/tars-monitor/src/contract/StoreCacheInterface.php	/^    public function decrField($key, $field, $decrby = 1);$/;"	f
decrby	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    public function decrField($key, $field, $decrby = 1)$/;"	v
decrby	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^    public function decrField($key, $field, $decrby = 1)$/;"	v
decrby	src/vendor/phptars/tars-monitor/src/contract/StoreCacheInterface.php	/^    public function decrField($key, $field, $decrby = 1);$/;"	v
deduplicationLevel	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $this->deduplicationLevel = Logger::toMonologLevel($deduplicationLevel);$/;"	v
deduplicationLevel	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    protected $deduplicationLevel;$/;"	v
deduplicationStore	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $this->deduplicationStore = $deduplicationStore === null ? sys_get_temp_dir() . '\/monolog-dedup-' . substr(md5(__FILE__), 0, 20) .'.log' : $deduplicationStore;$/;"	v
deduplicationStore	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    protected $deduplicationStore;$/;"	v
deduplicationStore	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    public function __construct(HandlerInterface $handler, $deduplicationStore = null, $deduplicationLevel = Logger::ERROR, $time = 60, $bubble = true)$/;"	v
defConnectionName	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $this->defConnectionName = 'default';$/;"	v
defConnectionName	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->defConnectionName = $name;$/;"	v
defConnectionName	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public $defConnectionName = 'default';$/;"	v
defaultActionLevel	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^        $this->defaultActionLevel = Logger::toMonologLevel($defaultActionLevel);$/;"	v
defaultActionLevel	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^    private $defaultActionLevel;$/;"	v
defaultConf	src/libs/DbMysqli.php	/^        $defaultConf = DBConf::$config[$connection];$/;"	v
defaultErrorLevelMap	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    protected function defaultErrorLevelMap()$/;"	f
defaultMethods	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $defaultMethods = array('fsockopen', 'pfsockopen', 'streamSetTimeout');$/;"	v
defaultPreviousProvider	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    public function defaultPreviousProvider()$/;"	f
defaultValue	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $defaultValue = '';$/;"	v
defaultValue	src/vendor/phptars/tars2php/src/tars2php.php	/^        $defaultValue = null;$/;"	v
del	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    public function del($key)$/;"	f
del	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^    public function del($key)$/;"	f
del	src/vendor/phptars/tars-monitor/src/contract/StoreCacheInterface.php	/^    public function del($key);$/;"	f
delete	src/impl/ArticleServantImpl.php	/^    public function delete($version,$param)$/;"	f
delete	src/servant/Article/Server/Obj/ArticleServant.php	/^	public function delete($version,$where);$/;"	f
delete	src/service/article/Article.php	/^    public function delete()$/;"	f
delete	src/service/validate/article/ValidateArticle.php	/^    public function delete()$/;"	f
delete	src/vendor/catfan/medoo/src/Medoo.php	/^	public function delete($table, $where)$/;"	f
delete	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function delete($tableName, $numRows = null)$/;"	f
delete	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public function delete () {$/;"	f
deleteAttrById	src/model/mysql/content/ArticleAttr.php	/^    public function deleteAttrById($ab_id)$/;"	f
deleteBasicById	src/model/mysql/content/ArticleBasic.php	/^    public function deleteBasicById($ab_id)$/;"	f
deleteByWhere	src/libs/Mysql.php	/^    public function deleteByWhere($where,$param)$/;"	f
deleteDetailById	src/model/mysql/content/ArticleDetails.php	/^    public function deleteDetailById($ab_id)$/;"	f
deleteRelationById	src/model/mysql/content/ArticleRelationship.php	/^    public function deleteRelationById($ab_id)$/;"	f
deleteResourceById	src/model/mysql/content/ArticleResource.php	/^    public function deleteResourceById($ab_id)$/;"	f
delete_res	src/model/mysql/content/ArticleRelationship.php	/^        $delete_res = $this->deleteRelationById($ab_id);$/;"	v
delete_res	src/model/mysql/content/ArticleResource.php	/^        $delete_res = $this->deleteResourceById($ab_id);$/;"	v
depth	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected function normalize($data, $depth = 0)$/;"	v
depth	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected function normalize($data, $depth = 0)$/;"	v
depth	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^    protected function normalize($data, $depth = 0)$/;"	v
depth	src/vendor/phptars/tars-monitor/src/classes/StatSampleMsg.php	/^    public $depth;$/;"	v
detectAndCleanUtf8	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    public function detectAndCleanUtf8(&$data)$/;"	f
dict	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $dict = array_filter($dict);$/;"	v
dir	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $dir = $this->getDirFromStream($this->url);$/;"	v
dir	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $dir = __DIR__.'\/Fixtures';$/;"	v
dirCreated	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $this->dirCreated = true;$/;"	v
dirCreated	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    private $dirCreated;$/;"	v
disconnect	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function disconnect($connection = 'default')$/;"	f
disconnectAll	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function disconnectAll()$/;"	f
do	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Note that function do not add 'limit 1' to the query by itself$/;"	f
doSql	src/libs/Mysql.php	/^    public function doSql($sql)$/;"	f
doc	src/vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^        $doc = $formatter->format($msg);$/;"	v
docblock	src/vendor/phptars/tars-server/src/core/Server.php	/^                $docblock = $method->getDocComment();$/;"	v
docblock	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $docblock = trim($docblock, '\/** ');$/;"	v
document	src/vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^        $document = new Document();$/;"	v
document	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $document = $this->getDocSourceFromElastic($/;"	v
documentId	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $documentId = $this->getCreatedDocId($client->getLastResponse());$/;"	v
documents	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^        $documents = $this->getFormatter()->formatBatch($records);$/;"	v
does	src/vendor/composer/ClassLoader.php	/^            \/\/ Remember that this class does not exist.$/;"	c
domain	src/vendor/phptars/tars-server/src/core/Response.php	/^        $domain = '',$/;"	v
doubleReturn	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $doubleReturn = "\\n\\n";$/;"	v
doubleTab	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $doubleTab = "\\t\\t";$/;"	v
driver	src/vendor/catfan/medoo/src/Medoo.php	/^		$driver = $attr[ 'driver' ];$/;"	v
dsn	src/vendor/catfan/medoo/src/Medoo.php	/^		$dsn = $driver . ':' . implode($stack, ';');$/;"	v
dsn	src/vendor/catfan/medoo/src/Medoo.php	/^		$this->dsn = $dsn;$/;"	v
dsn	src/vendor/catfan/medoo/src/Medoo.php	/^	protected $dsn;$/;"	v
dsn	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $dsn = 'http:\/\/43f6017361224d098402974103bfc53d:a6a0538fc2934ba2bed32e08741b2cd3@marca.python.live.cheggnet.com:9000\/1';$/;"	v
dt	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^            call_user_func(array($this, 'throwHelper'), $arg, $dt = new \\DateTime());$/;"	v
dummy	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^            $dummy = $this->createPartialMock('Psr\\Log\\Test\\DummyTest', array('__toString'));$/;"	v
dummy	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^            $dummy = $this->getMock('Psr\\Log\\Test\\DummyTest', array('__toString'));$/;"	v
dump	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function dump($title, array $dict)$/;"	f
dumper	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^            $dumper = $connector->getDumper();$/;"	v
e	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $e = new \\LogicException('bar');$/;"	v
e	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $e = new \\SoapFault('foo', 'bar', 'hello', 'world');$/;"	v
e	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $e = new Exception();$/;"	v
e	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $e = TUPAPIWrapper::getInt32('e', 5, $sBuffer, $this->_iVersion);$/;"	v
e	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$e = TUPAPIWrapper::getInt32("e",5,$sBuffer,$this->_iVersion);$/;"	v
e	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	 * @param int $e =out=$/;"	v
e2	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $e2 = new \\RuntimeException('foo', 0, $e);$/;"	v
embeddedTable	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^            $embeddedTable = '<table cellspacing="1" width="100%">';$/;"	v
emerg	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function emerg($message, array $context = array())$/;"	f
emergency	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function emergency($message, array $context = array())$/;"	f
emergency	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function emergency($message, array $context = array())$/;"	f
emergency	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function emergency($message, array $context = array());$/;"	f
emergency	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function emergency($message, array $context = array())$/;"	f
emergencyLevel	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->emergencyLevel = $value;$/;"	v
emergencyLevel	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->emergencyLevel = Logger::toMonologLevel($emergencyLevel);$/;"	v
emergencyLevel	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $emergencyLevel;$/;"	v
emergencyLoggerRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $emergencyLoggerRecord = $this->getRecord(Logger::EMERGENCY);$/;"	v
enableSet	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^            $this->enableSet = false;$/;"	v
enableSet	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^            $this->enableSet = true;$/;"	v
enableSet	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->enableSet = $enableSet;$/;"	v
enableSet	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $enableSet = false;$/;"	v
enableSet	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^            $this->enableSet = false;$/;"	v
enableSet	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^            $this->enableSet = true;$/;"	v
enableSet	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->enableSet = $enableSet;$/;"	v
enableSet	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $enableSet = false;$/;"	v
enableSetStr	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $enableSetStr = $config['tars']['application']['enableset'];$/;"	v
enableSetStr	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $enableSetStr = $config['tars']['application']['enableset'];$/;"	v
enableTimer	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->enableTimer = $enableTimer;$/;"	v
enableTimer	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $enableTimer; \/\/是否启用swooletable+server的定时能力$/;"	v
encode	src/vendor/phptars/tars-client/src/RequestPacket.php	/^    public function encode()$/;"	f
encode	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^    public function encode()$/;"	f
encode	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^    public function encode()$/;"	f
encode	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^    public function encode()$/;"	f
encodeBufs	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $encodeBufs = [];$/;"	v
encodeBufs	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $encodeBufs = [];$/;"	v
encodeBufs	src/vendor/phptars/tars-log/src/LogServant.php	/^        $encodeBufs = [];$/;"	v
encodeBufs	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^            $encodeBufs = [];$/;"	v
encodeBufs	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^            $encodeBufs = [];$/;"	v
encodeBufs	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $encodeBufs = [];$/;"	v
encodeBufs	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $encodeBufs = [];$/;"	v
encodeBufs	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $encodeBufs = [];$/;"	v
encodeBufs	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$encodeBufs = [];$/;"	v
encodeJson	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    public function encodeJson($data)$/;"	f
encoding	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $this->encoding = $encoding;$/;"	v
encoding	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $encoding = 'utf-8';$/;"	v
endFlag	src/vendor/phptars/tars2php/src/tars2php.php	/^        $endFlag = strpos($line, '}');$/;"	v
endFlag	src/vendor/phptars/tars2php/src/tars2php.php	/^        $endFlag = strpos($line, '};');$/;"	v
endTime	src/vendor/phptars/tars-client/src/Communicator.php	/^            $endTime = $this->militime();$/;"	v
endpoint	src/vendor/monolog/monolog/src/Monolog/Handler/InsightOpsHandler.php	/^        $endpoint = $useSSL$/;"	v
endpoint	src/vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^        $endpoint = $useSSL ? 'ssl:\/\/' . $host . ':443' : $host . ':80';$/;"	v
endpoints	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^            $endpoints = $this->_queryF->findObjectById($id);$/;"	v
entrance	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->entrance = $tarsServerConf['entrance'];$/;"	v
entrance	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $entrance;$/;"	v
enumFlag	src/vendor/phptars/tars2php/src/tars2php.php	/^            $enumFlag = strpos($line, 'enum');$/;"	v
enumName	src/vendor/phptars/tars2php/src/tars2php.php	/^                $enumName = $enumTokens[1];$/;"	v
enumName	src/vendor/phptars/tars2php/src/tars2php.php	/^                $enumName = trim($enumName, " \\r\\0\\x0B\\t\\n{");$/;"	v
enumTokens	src/vendor/phptars/tars2php/src/tars2php.php	/^                $enumTokens = preg_split('\/enum\/', $line);$/;"	v
err	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function err($message, array $context = array())$/;"	f
errHandler	src/vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^        $errHandler = new ErrorHandler($logger);$/;"	v
errHandler	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^            $errHandler = new SignalHandler($logger);$/;"	v
errHandler	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^        $errHandler = new SignalHandler($logger);$/;"	v
errMap	src/vendor/phptars/tars-client/src/Code.php	/^        $errMap = [$/;"	v
errMap	src/vendor/phptars/tars-monitor/src/client/Code.php	/^        $errMap = [$/;"	v
errMap	src/vendor/phptars/tars-monitor/src/client/CodeMonitor.php	/^        $errMap = [$/;"	v
errMap	src/vendor/phptars/tars-registry/src/client/CodeRegistry.php	/^        $errMap = [$/;"	v
errno	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $errno  = $this->mysqli()->errno;$/;"	v
errno	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $errno = $this->mysqli()->errno;$/;"	v
errno	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $errno;$/;"	v
error	src/vendor/catfan/medoo/src/Medoo.php	/^	public function error()$/;"	f
error	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $error = $this->mysqli()->error;$/;"	v
error	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function error($message, array $context = array())$/;"	f
error	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function error($message, array $context = array())$/;"	f
error	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function error($message, array $context = array());$/;"	f
error	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function error($message, array $context = array())$/;"	f
errorDispatcher	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $this->errorDispatcher = $this->initErrorDispatcherMock($this->connector);$/;"	v
errorDispatcher	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected $errorDispatcher;$/;"	v
errorHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $errorHandler = ErrorHandler::register($this->initLogger($classesPartialsTraceIgnore ? array('classesPartialsTraceIgnore' => $classesPartialsTraceIgnore) : array()), false);$/;"	v
errorLevelMap	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->errorLevelMap = array_replace($this->defaultErrorLevelMap(), $levelMap);$/;"	v
errorLevelMap	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $errorLevelMap;$/;"	v
errorLevelMap	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public static function register(LoggerInterface $logger, $errorLevelMap = array(), $exceptionLevel = null, $fatalLevel = null)$/;"	v
errorLoggerRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $errorLoggerRecord = $this->getRecord(Logger::ERROR);$/;"	v
errorMessage	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^            $this->errorMessage = null;$/;"	v
errorMessage	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $this->errorMessage = preg_replace('{^(fopen|mkdir)\\(.*?\\): }', '', $msg);$/;"	v
errorMessage	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    private $errorMessage;$/;"	v
error_log	src/vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^function error_log()$/;"	f
error_msg	src/libs/Mysql.php	/^    public $error_msg;$/;"	v
error_msg	src/model/mysql/content/ArticleBasic.php	/^            $this->error_msg = '基本信息为空';$/;"	v
error_msg	src/model/mysql/content/ArticleDetails.php	/^            $this->error_msg = '需要更新的内容为空,系统中内容可以为空，所以返回成功!';$/;"	v
error_msg	src/model/mysql/content/ArticleRelationship.php	/^            $this->error_msg = '关联文章为空';$/;"	v
error_msg	src/model/mysql/content/ArticleResource.php	/^            $this->error_msg = '文章资源为空';$/;"	v
error_msg	src/service/validate/Validate.php	/^    public $error_msg;$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^                $this->error_msg = '关联文章数据中某一条数据关联ID错误';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^                $this->error_msg = '关联文章数据中某一条数据被关联ID错误';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^                $this->error_msg = '关联文章数据中某一条非数组格式';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^                $this->error_msg = '资源数据中某一条数据资源ID错误';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^                $this->error_msg = '资源数据中某一条数据资源类型错误';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^                $this->error_msg = '资源数据中某一条非数组格式';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg = '关联文章数据不是数组';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg = '关联文章数据为空';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg = '文章ID错误';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg = '文章不存在';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg = '资源数据不是数组';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg = '资源数据为空';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg= '介绍内容不能为空';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg= '介绍内容错误';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg= '分类类型错误';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg= '创建人错误';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg= '封面图错误';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg= '排序错误';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg= '数据验证失败，非Json格式 INFO : '.$this->data;$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg= '文章标题已存在 ['.$this->data['title'].']';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg= '文章标题已存在';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg= '文章标题必填';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg= '条件数据验证失败，非Json格式 INFO : '.$this->data->where;$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg= '状态错误';$/;"	v
error_msg	src/service/validate/article/ValidateArticle.php	/^            $this->error_msg= '资源错误';$/;"	v
errors	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                    $this->errors = array_merge ($this->errors, $value->errors);$/;"	v
errors	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $this->errors = Array ();$/;"	v
errors	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public $errors = null;$/;"	v
errstr	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $errstr;$/;"	v
escape	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function escape($str)$/;"	f
event	src/impl/ArticleServantImpl.php	/^            $event = new Article();$/;"	v
event	src/vendor/phptars/tars-server/src/core/Server.php	/^        $event = new Event();$/;"	v
eventId	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $eventId = '31423';$/;"	v
eventName	src/vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^        $this->eventName = $eventName;$/;"	v
eventName	src/vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^    private $eventName;$/;"	v
exception	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^            $exception = $context['exception'];$/;"	v
exception	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $exception = new \\RuntimeException('Foo');$/;"	v
exception	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $exception = new \\RuntimeException('Foo', 0, new \\LogicException('Wut?'));$/;"	v
exception	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^        $exception = new \\Exception('foo');$/;"	v
exception	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $exception = new ExceptionTestHandler();$/;"	v
exceptionHandler	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^        $this->exceptionHandler = $callback;$/;"	v
exceptionHandler	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected $exceptionHandler;$/;"	v
exceptionTraceAsString	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^        $this->exceptionTraceAsString = (bool) $exceptionTraceAsString;$/;"	v
exceptionTraceAsString	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    private $exceptionTraceAsString;$/;"	v
exceptionTraceAsString	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    public function __construct($maxNestingLevel = 3, $exceptionTraceAsString = true)$/;"	v
exchange	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^        $this->exchange = $exchange;$/;"	v
exchange	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    protected $exchange;$/;"	v
exchange	src/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^            ->will($this->returnCallback(function (AMQPMessage $msg, $exchange = "", $routing_key = "", $mandatory = false, $immediate = false, $ticket = null) use (&$messages) {$/;"	v
exchange	src/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $exchange = $this->getMock('AMQPExchange', array('publish', 'setName'), array(), '', false);$/;"	v
exchange	src/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $exchange = $this->getMock('PhpAmqpLib\\Channel\\AMQPChannel', array('basic_publish', '__destruct'), array(), '', false);$/;"	v
exchangeName	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^            $this->exchangeName = $exchangeName;$/;"	v
exchangeName	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    protected $exchangeName;$/;"	v
exchangeName	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    public function __construct($exchange, $exchangeName = 'log', $level = Logger::DEBUG, $bubble = true)$/;"	v
excludeFields	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->excludeFields = $excludeFields;$/;"	v
excludeFields	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $excludeFields;$/;"	v
excludeFields	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private function excludeFields(array $record)$/;"	f
exec	src/vendor/catfan/medoo/src/Medoo.php	/^	public function exec($query, $map = [])$/;"	f
execCount	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^                    $execCount = 1;$/;"	v
execCount	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgBody.php	/^    public $execCount;$/;"	v
execute	src/vendor/monolog/monolog/src/Monolog/Handler/Curl/Util.php	/^    public static function execute($ch, $retries = 5, $closeAfterDone = true)$/;"	f
execute	src/vendor/phptars/tars-server/src/cmd/Restart.php	/^    public function execute()$/;"	f
execute	src/vendor/phptars/tars-server/src/cmd/Start.php	/^    public function execute()$/;"	f
execute	src/vendor/phptars/tars-server/src/cmd/Stop.php	/^    public function execute()$/;"	f
exist	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    public function exist($key)$/;"	f
exist	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^    public function exist($key)$/;"	f
exist	src/vendor/phptars/tars-monitor/src/contract/StoreCacheInterface.php	/^    public function exist($key);$/;"	f
expFormatted	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^            $expFormatted = $formatted;$/;"	v
expFormatted	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^            $expFormatted = array('foo' => array('N' => 1), 'bar' => array('N' => 2));$/;"	v
expandNewlines	src/vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^        $this->expandNewlines = $expandNewlines;$/;"	v
expandNewlines	src/vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    protected $expandNewlines;$/;"	v
expectCall	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $expectCall = $this->connector->expects($this->once())->method($method);$/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^        $expected = $msg;$/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^        $expected = array($/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $expected = array($/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^        $expected = <<<EOF$/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^        $expected = array($/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^        $expected = array($/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $expected = $msg;$/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $expected = array($/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $expected = array($formatter->format($msg));$/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^        $expected = array($/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^        $expected = $expectedFormatter->format($record);$/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^        $expected = array($/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $expected = array($/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $expected = array($/;"	v
expected	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $expected = $input;$/;"	v
expected	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^        $expected = array($/;"	v
expected	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^        $expected = array('info {Message {nothing} Bob Bar a}');$/;"	v
expected	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^        $expected = array('warning Crazy context data');$/;"	v
expected	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^        $expected = array('warning DUMMY');$/;"	v
expected2	src/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^        $expected2 = array($/;"	v
expectedFields	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $expectedFields = array($/;"	v
expectedFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^        $expectedFormatter = new LineFormatter(null, null, true, true);$/;"	v
expectedMessage	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $expectedMessage = preg_replace('{[\\r\\n].*}', '', $record['message']);$/;"	v
expectedMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $expectedMessage = new Message();$/;"	v
expectedMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $expectedMessage = $message . ' ' . json_encode(array_slice($context, 1));$/;"	v
expectedMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $expectedMessage = substr($message, 0, 505);$/;"	v
expectedMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $expectedMessage = new \\Swift_Message();$/;"	v
expectedTags	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $expectedTags = mt_rand();$/;"	v
expire	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->expire = $expire;$/;"	v
expire	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $expire;$/;"	v
expire	src/vendor/phptars/tars-server/src/core/Response.php	/^        $expire = 0,$/;"	v
explodeArrays	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $explodeArrays = false,$/;"	v
explodeArrays	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $this->explodeArrays = $explodeArrays;$/;"	v
explodeArrays	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected $explodeArrays;$/;"	v
extType	src/vendor/phptars/tars2php/src/tars2php.php	/^            $extType = $this->getExtType($wholeType, $valueName);$/;"	v
extType	src/vendor/phptars/tars2php/src/tars2php.php	/^        $extType = '';$/;"	v
extra	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^            $extra = static::dump('Extra', $record['extra']);$/;"	v
extra	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $extra = array_intersect_key($record['extra'], $this->parameterNames);$/;"	v
extra	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $extra = array('tags' => array('web'));$/;"	v
extraContructs	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $extraContructs = '';$/;"	v
extraExtInit	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $extraExtInit = '';$/;"	v
extraExtType	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $extraExtType = '';$/;"	v
extraFields	src/vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^                $this->extraFields = $extraFields;$/;"	v
extraFields	src/vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    protected $extraFields = array($/;"	v
extraFields	src/vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    public function __construct($serverData = null, array $extraFields = null)$/;"	v
extraName	src/vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^        foreach ($this->extraFields as $extraName => $serverName) {$/;"	v
extraPrefix	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        $this->extraPrefix = $extraPrefix;$/;"	v
extraPrefix	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    protected $extraPrefix;$/;"	v
extraPrefix	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    public function __construct($systemName = null, $extraPrefix = null, $contextPrefix = 'ctxt_', $maxLength = null)$/;"	v
extraPrefix	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^        $this->extraPrefix = $extraPrefix;$/;"	v
extraPrefix	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    protected $extraPrefix;$/;"	v
extraUse	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->extraUse = '';$/;"	v
extraUse	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $extraUse;$/;"	v
f	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $f = TUPAPIWrapper::getString('f', 6, $sBuffer, $this->_iVersion);$/;"	v
f	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$f = TUPAPIWrapper::getString("f",6,$sBuffer,$this->_iVersion);$/;"	v
f	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	 * @param string $f =out=$/;"	v
facilities	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^    protected $facilities = array($/;"	v
facility	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^            $facility = $this->facilities[strtolower($facility)];$/;"	v
facility	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^        $this->facility = $facility;$/;"	v
facility	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^    protected $facility;$/;"	v
facility	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^    public function __construct($ident, $facility = LOG_USER, $level = Logger::DEBUG, $bubble = true, $logopts = LOG_PID)$/;"	v
factor	src/vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^        $this->factor = $factor;$/;"	v
factor	src/vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^    protected $factor;$/;"	v
fallbackDirsPsr0	src/vendor/composer/ClassLoader.php	/^                $this->fallbackDirsPsr0 = array_merge($/;"	v
fallbackDirsPsr0	src/vendor/composer/ClassLoader.php	/^            $this->fallbackDirsPsr0 = (array) $paths;$/;"	v
fallbackDirsPsr0	src/vendor/composer/ClassLoader.php	/^    private $fallbackDirsPsr0 = array();$/;"	v
fallbackDirsPsr4	src/vendor/composer/ClassLoader.php	/^                $this->fallbackDirsPsr4 = array_merge($/;"	v
fallbackDirsPsr4	src/vendor/composer/ClassLoader.php	/^            $this->fallbackDirsPsr4 = (array) $paths;$/;"	v
fallbackDirsPsr4	src/vendor/composer/ClassLoader.php	/^    private $fallbackDirsPsr4 = array();$/;"	v
fatalErrors	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private static $fatalErrors = array(E_ERROR, E_PARSE, E_CORE_ERROR, E_COMPILE_ERROR, E_USER_ERROR);$/;"	v
fatalLevel	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^                $this->fatalLevel === null ? LogLevel::ALERT : $this->fatalLevel,$/;"	v
fatalLevel	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->fatalLevel = $level;$/;"	v
fatalLevel	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $fatalLevel;$/;"	v
fd	src/vendor/phptars/tars-server/src/core/Response.php	/^    public $fd;$/;"	v
field	src/model/mysql/content/ArticleBasic.php	/^        foreach($data as $field=>$val) {$/;"	v
field	src/model/mysql/content/ArticleBasic.php	/^        foreach($data as $field=>$val){$/;"	v
fields	src/model/mysql/content/ArticleAttr.php	/^        $fields = array_keys($this->dbFields);$/;"	v
fields	src/model/mysql/content/ArticleBasic.php	/^        $fields = array_keys($this->dbFields);$/;"	v
fields	src/model/mysql/content/ArticleDetails.php	/^        $fields = array_keys($this->dbFields);$/;"	v
fields	src/vendor/catfan/medoo/src/Medoo.php	/^		$fields = [];$/;"	v
fields	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function paginate ($table, $page, $fields = null) {$/;"	v
fields	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function byId ($id, $fields = null) {$/;"	v
fields	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function paginate ($page, $fields = null) {$/;"	v
fields	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    protected function get ($limit = null, $fields = null) {$/;"	v
fields	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $fields = array();$/;"	v
fields	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    protected static $fields = array($/;"	v
fields	src/vendor/phptars/tars-report/src/ServerInfo.php	/^    protected static $fields = array($/;"	v
fields	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->fields = '';$/;"	v
fields	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $fields = '';$/;"	v
fieldsPrefix	src/vendor/phptars/tars2php/src/tars2php.php	/^        $fieldsPrefix = $this->tabSymbol.'protected static $_fields = array('.$this->returnSymbol;$/;"	v
fieldsSuffix	src/vendor/phptars/tars2php/src/tars2php.php	/^        $fieldsSuffix = $this->tabSymbol.');'.$this->doubleReturn;$/;"	v
file	src/vendor/composer/ClassLoader.php	/^            $file = $this->findFileWithExtension($class, '.hh');$/;"	v
file	src/vendor/composer/ClassLoader.php	/^            $file = apcu_fetch($this->apcuPrefix.$class, $hit);$/;"	v
file	src/vendor/composer/ClassLoader.php	/^        $file = $this->findFileWithExtension($class, '.php');$/;"	v
file	src/vendor/composer/ClassLoader.php	/^        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {$/;"	v
file	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function handleError($code, $message, $file = '', $line = 0, $context = array())$/;"	v
file	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $file = $record['extra']['file'];$/;"	v
file	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^        $file = $line = '';$/;"	v
file	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $file = __FILE__;$/;"	v
file	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $file = fopen($savefile, "w");$/;"	v
fileConverter	src/vendor/phptars/tars2php/src/tars2php.php	/^$fileConverter = new FileConverter($config);$/;"	v
fileIdentifier	src/vendor/composer/autoload_real.php	/^        foreach ($includeFiles as $fileIdentifier => $file) {$/;"	v
fileInfo	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $fileInfo = pathinfo($this->filename);$/;"	v
fileName	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $fileName = $parts[1];$/;"	v
fileName	src/vendor/phptars/tars-server/src/core/Server.php	/^                        $fileName = $timerDir . $f;$/;"	v
fileNameArr	src/vendor/phptars/tars-server/src/core/Server.php	/^                $fileNameArr = array_filter($servicesInfo['saveTarsConfigFileName']);$/;"	v
filePermission	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $this->filePermission = $filePermission;$/;"	v
filePermission	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    protected $filePermission;$/;"	v
filename	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $filename = static::$modelPath . $classname .".php";$/;"	v
filename	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->filename = $filename;$/;"	v
filename	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected $filename;$/;"	v
filename	src/vendor/phptars/tars-config/src/classes/ConfigInfo.php	/^    public $filename;$/;"	v
filenameFormat	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->filenameFormat = $filenameFormat;$/;"	v
filenameFormat	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->filenameFormat = '{filename}-{date}';$/;"	v
filenameFormat	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected $filenameFormat;$/;"	v
filenameFormatProvider	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function filenameFormatProvider()$/;"	f
files	src/vendor/composer/ClassLoader.php	/^     * Turns on searching the include path for class files.$/;"	c
files	src/vendor/composer/autoload_static.php	/^    public static $files = array ($/;"	v
files	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $files = scandir($timerDir);$/;"	v
filterEmptyFields	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected function filterEmptyFields(array $record)$/;"	f
filtered	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^        $filtered = $this->filterEmptyFields($record['formatted']);$/;"	v
filtered	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^        $filtered = array();$/;"	v
finalMethods	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $finalMethods = array_merge($defaultMethods, $newMethods);$/;"	v
finalizeWrite	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    protected function finalizeWrite()$/;"	f
finalizeWrite	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    protected function finalizeWrite()$/;"	f
find	src/impl/ArticleServantImpl.php	/^    public function find($version,$where,&$data)$/;"	f
find	src/servant/Article/Server/Obj/ArticleServant.php	/^	public function find($version,$where,&$data);$/;"	f
find	src/service/article/Article.php	/^    public function find()$/;"	f
find	src/service/validate/article/ValidateArticle.php	/^    public function find()$/;"	f
findBasic	src/model/mysql/content/ArticleBasic.php	/^    public function findBasic($where,$param)$/;"	f
findBasicById	src/model/mysql/content/ArticleBasic.php	/^    public function findBasicById($ab_id)$/;"	f
findDataByWhere	src/libs/Mysql.php	/^    public function findDataByWhere($where,$param)$/;"	f
findFile	src/vendor/composer/ClassLoader.php	/^    public function findFile($class)$/;"	f
findFileWithExtension	src/vendor/composer/ClassLoader.php	/^    private function findFileWithExtension($class, $ext)$/;"	f
findObjectById	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^    public function findObjectById($id)$/;"	f
findObjectById	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^    public function findObjectById($id)$/;"	f
findObjectById4All	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^    public function findObjectById4All($id, &$activeEp, &$inactiveEp)$/;"	f
findObjectById4Any	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^    public function findObjectById4Any($id, &$activeEp, &$inactiveEp)$/;"	f
findObjectByIdInSameGroup	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^    public function findObjectByIdInSameGroup($id, &$activeEp, &$inactiveEp)$/;"	f
findObjectByIdInSameSet	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^    public function findObjectByIdInSameSet($id, $setId, &$activeEp, &$inactiveEp)$/;"	f
findObjectByIdInSameStation	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^    public function findObjectByIdInSameStation($id, $sStation, &$activeEp, &$inactiveEp)$/;"	f
fingerprint	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $fingerprint = array('{{ default }}', 'other value');$/;"	v
fingersCrossedHandler	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $fingersCrossedHandler = new Handler\\FingersCrossedHandler($groupHandler);$/;"	v
first	src/vendor/composer/ClassLoader.php	/^        $first = $class[0];$/;"	v
first	src/vendor/composer/ClassLoader.php	/^        $first = $prefix[0];$/;"	v
first	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $first = new Logger('first', array($handler = new TestHandler()));$/;"	v
firstLine	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->firstLine = $line;$/;"	v
firstLine	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $firstLine;$/;"	v
firstRsp	src/vendor/phptars/tars-client/src/Communicator.php	/^                $firstRsp = false;$/;"	v
firstRsp	src/vendor/phptars/tars-client/src/Communicator.php	/^        $firstRsp = true;$/;"	v
firstRsp	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                $firstRsp = false;$/;"	v
firstRsp	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $firstRsp = true;$/;"	v
flags	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^        socket_sendto($this->socket, $chunk, strlen($chunk), $flags = 0, $this->ip, $this->port);$/;"	v
flags	src/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^            ->will($this->returnCallback(function ($message, $routing_key, $flags = 0, $attributes = array()) use (&$messages) {$/;"	v
fluentHandler	src/vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^ * $fluentHandler = new Monolog\\Handler\\SocketHandler('unix:\/\/\/var\/run\/td-agent\/td-agent.sock');$/;"	v
flush	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function flush()$/;"	f
flush	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    public function flush()$/;"	f
flush	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    public function flush()$/;"	f
flushBuffer	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    private function flushBuffer()$/;"	f
flushOnOverflow	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^        $this->flushOnOverflow = $flushOnOverflow;$/;"	v
flushOnOverflow	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    protected $flushOnOverflow;$/;"	v
foo	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public $foo = 'foo';$/;"	v
foo	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $foo = new \\stdClass();$/;"	v
foo	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $this->foo = 'BAR';$/;"	v
foo	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public $foo = 'foo';$/;"	v
foo	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public $foo;$/;"	v
for	src/vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^ * Base class for all mail handlers$/;"	c
for	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^ * Provides a base test class for ensuring compliance with the LoggerInterface.$/;"	c
format	src/vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/FormatterInterface.php	/^    public function format(array $record);$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $this->format = $format ?: static::SIMPLE_FORMAT;$/;"	v
format	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected $format;$/;"	v
format	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/LogglyFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/ScalarFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^    public function format(array $record)$/;"	f
format	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^            $format = substr($format, 0, $pos) . '%c' . $match[1][0] . '%c' . substr($format, $pos + strlen($match[0][0]));$/;"	v
format	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $format = '%c' . $formatted;$/;"	v
format	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $format = static::getResponseFormat();$/;"	v
format	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $this->format = $format;$/;"	v
format	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private $format;$/;"	v
formatArray	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    protected function formatArray(array $record, $nestingLevel = 0)$/;"	f
formatBatch	src/vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^    public function formatBatch(array $records)$/;"	f
formatBatch	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^    public function formatBatch(array $records)$/;"	f
formatBatch	src/vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^    public function formatBatch(array $records)$/;"	f
formatBatch	src/vendor/monolog/monolog/src/Monolog/Formatter/FormatterInterface.php	/^    public function formatBatch(array $records);$/;"	f
formatBatch	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    public function formatBatch(array $records)$/;"	f
formatBatch	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function formatBatch(array $records)$/;"	f
formatBatch	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function formatBatch(array $records)$/;"	f
formatBatch	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    public function formatBatch(array $records)$/;"	f
formatBatch	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    public function formatBatch(array $records)$/;"	f
formatBatch	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^    public function formatBatch(array $records)$/;"	f
formatBatchJson	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected function formatBatchJson(array $records)$/;"	f
formatBatchNewlines	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected function formatBatchNewlines(array $records)$/;"	f
formatBytes	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^    protected function formatBytes($bytes)$/;"	f
formatDate	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    protected function formatDate(\\DateTime $value, $nestingLevel)$/;"	f
formatException	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    protected function formatException(\\Exception $exception, $nestingLevel)$/;"	f
formatException	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    private function formatException($exception, $previous = null)$/;"	f
formatExceptionFilePathWithLine	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    private function formatExceptionFilePathWithLine($exception)$/;"	f
formatObject	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    protected function formatObject($value, $nestingLevel)$/;"	f
formatRecordWithExceptionInContext	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    private function formatRecordWithExceptionInContext(JsonFormatter $formatter, $exception)$/;"	f
formatV0	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    protected function formatV0(array $record)$/;"	f
formatV1	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    protected function formatV1(array $record)$/;"	f
formatted	src/vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^        $formatted = array();$/;"	v
formatted	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        $formatted = array();$/;"	v
formatted	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^            $formatted = $this->client->formatAttributes($filtered);$/;"	v
formatted	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^            $formatted = $this->marshaler->marshalItem($filtered);$/;"	v
formatted	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryPeakUsageProcessor.php	/^        $formatted = $this->formatBytes($bytes);$/;"	v
formatted	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryUsageProcessor.php	/^        $formatted = $this->formatBytes($bytes);$/;"	v
formatted	src/vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^        $formatted = $formatter->format($record);$/;"	v
formatted	src/vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^        $formatted = $formatter->formatBatch($records);$/;"	v
formatted	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $formatted = $formatter->format(array($/;"	v
formatted	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $formatted = $formatter->formatBatch(array($/;"	v
formatted	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^        $formatted = $this->formatter->format(array($/;"	v
formatted	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^        $formatted = array('foo' => 1, 'bar' => 2);$/;"	v
formattedException	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^        $formattedException = array($/;"	v
formattedException	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formattedException = $this->formatException($exception);$/;"	v
formattedException	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formattedException = $this->formatException($exception, $formattedPrevException);$/;"	v
formattedException	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formattedException =$/;"	v
formattedMessageStr	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            $formattedMessageStr = implode('', $formattedMessages);$/;"	v
formattedMessages	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $formattedMessages = array($lastFormattedMessage);$/;"	v
formattedMessages	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $formattedMessages = array();$/;"	v
formattedPrevException	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formattedPrevException = $this->formatException($exception->getPrevious());$/;"	v
formattedRecord	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formattedRecord = $formatter->format($record);$/;"	v
formattedResult	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formattedResult = $formatter->format($record);$/;"	v
formattedThrowable	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formattedThrowable = $this->formatException($throwable);$/;"	v
formatted_decoded	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^        $formatted_decoded = json_decode($formatter->format($record), true);$/;"	v
formatter	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^            $this->formatter = $this->getDefaultFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^        $this->formatter = $formatter;$/;"	v
formatter	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    protected $formatter;$/;"	v
formatter	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->formatter = $formatter;$/;"	v
formatter	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $formatter;$/;"	v
formatter	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $formatter = parent::getFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $formatter = parent::getFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^ *   $formatter = new LineFormatter("%channel%.%level_name%: %message% %extra%");$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^        $formatter = new ChromePHPFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^        $formatter = new ElasticaFormatter('my_index', 'doc_type');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^        $formatter = new FlowdockFormatter('test_source', 'source@test.com');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^        $formatter = new FluentdFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^        $formatter = new FluentdFormatter(false);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^        $formatter = new FluentdFormatter(true);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $formatter = new GelfMessageFormatter('LONG_SYSTEM_NAME', null, 'ctxt_', PHP_INT_MAX);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $formatter = new GelfMessageFormatter('mysystem');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $formatter = new GelfMessageFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $formatter = new GelfMessageFormatter(null, 'EXT');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $formatter = new GelfMessageFormatter(null, null, 'CTX');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formatter = new JsonFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formatter = new JsonFormatter(JsonFormatter::BATCH_MODE_JSON, false);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formatter = new JsonFormatter(JsonFormatter::BATCH_MODE_NEWLINES);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formatter = new JsonFormatter(JsonFormatter::BATCH_MODE_NEWLINES, false);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formatter = new NormalizerFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $formatter = new LineFormatter("[%datetime%] %channel%.%level_name%: %message% %context% %extra.file% %extra%\\n", 'Y-m-d');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $formatter = new LineFormatter('%context.foo% => %extra.foo%');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $formatter = new LineFormatter(null, 'Y-m-d');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $formatter = new LineFormatter(null, 'Y-m-d', false, true);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $formatter = new LineFormatter(null, 'Y-m-d', true);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^        $formatter = new LogglyFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^        $formatter = new LogglyFormatter(LogglyFormatter::BATCH_MODE_JSON);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('app', 'test');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('app', 'test', null, 'ctxt_', LogstashFormatter::V1);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('mysystem');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('mysystem', null, null, 'ctxt_', LogstashFormatter::V1);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('test');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('test', 'hostname');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('test', 'hostname', null, 'ctxt_', LogstashFormatter::V1);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('test', null, 'EXT');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('test', null, 'EXT', 'ctxt_', LogstashFormatter::V1);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('test', null, null, 'CTX');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('test', null, null, 'CTX', LogstashFormatter::V1);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('test', null, null, 'ctxt_', LogstashFormatter::V1);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formatter = new MongoDBFormatter($traceDepth, $traceAsString);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formatter = new MongoDBFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formatter = new MongoDBFormatter(0);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formatter = new MongoDBFormatter(2);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formatter = new MongoDBFormatter(2, false);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formatter = new MongoDBFormatter(2, true);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $formatter = new NormalizerFormatter('Y-m-d');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $formatter = new NormalizerFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^        $this->formatter = new ScalarFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    private $formatter;$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^        $formatter = $this->getMock('Monolog\\Formatter\\FormatterInterface');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $formatter = new ElasticaFormatter($this->options['index'], $this->options['type']);$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $formatter = new ElasticaFormatter('index_new', 'type_new');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $formatter = new NormalizerFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^        $formatter = $this->getMock('Monolog\\\\Formatter\\\\FormatterInterface');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^        $formatter = $this->getMock('Monolog\\\\Formatter\\\\FormatterInterface');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $formatter = $this->getMock('Monolog\\\\Formatter\\\\FormatterInterface');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $formatter = $this->getMock('Monolog\\\\Formatter\\\\FormatterInterface');$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^        $formatter = $handler->getFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^        $formatter = new LineFormatter();$/;"	v
formatter	src/vendor/monolog/monolog/tests/Monolog/TestCase.php	/^        $formatter = $this->getMock('Monolog\\\\Formatter\\\\FormatterInterface');$/;"	v
formatter2	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $formatter2 = $this->getMock('Monolog\\\\Formatter\\\\FormatterInterface');$/;"	v
formatterMock	src/vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^        $formatterMock = $this->getMockBuilder('Monolog\\Formatter\\NormalizerFormatter')$/;"	v
formatterResult	src/vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^        $formatterResult = array($/;"	v
fp	src/vendor/phptars/tars2php/src/tars2php.php	/^        $fp = fopen($includeFile, 'r');$/;"	v
fp	src/vendor/phptars/tars2php/src/tars2php.php	/^        $fp = fopen($this->fromFile, 'r');$/;"	v
fp	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->fp = $fp;$/;"	v
from	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $from = 'receiver@example.org';$/;"	v
fromArray	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function fromArray($data, &$structObj)$/;"	f
fromArray	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function fromArray($data, &$structObj)$/;"	f
fromArray	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function fromArray($data, &$structObj)$/;"	f
fromArray	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function fromArray($data, &$structObj)$/;"	f
fromArray	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^    private function fromArray($data, &$structObj)$/;"	f
fromFd	src/vendor/phptars/tars-server/src/core/Response.php	/^    public $fromFd;$/;"	v
fromFile	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->fromFile = $config['tarsFiles'][0];$/;"	v
fromFile	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $fromFile;$/;"	v
fsockopen	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function fsockopen()$/;"	f
fun	src/vendor/phptars/tars-server/src/core/Event.php	/^            $fun = $route['action'];$/;"	v
fun	src/vendor/phptars/tars-server/src/core/Event.php	/^            $fun = 'actionIndex';$/;"	v
func	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function func($expr, $bindParams = null)$/;"	f
func	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function interval($diff, $func = "NOW()")$/;"	v
func	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function now($diff = null, $func = "NOW()")$/;"	v
funcAnnotation	src/vendor/phptars/tars2php/src/tars2php.php	/^        $funcAnnotation = $this->generateFuncAnnotation($inParams, $outParams, $returnInfo);$/;"	v
funcBodyArr	src/vendor/phptars/tars2php/src/tars2php.php	/^        $funcBodyArr = $this->generateFuncBody($inParams, $outParams, $returnInfo);$/;"	v
funcDefinition	src/vendor/phptars/tars2php/src/tars2php.php	/^        $funcDefinition = $this->generateFuncHeader($funcName, $inParams, $outParams);$/;"	v
funcHeader	src/vendor/phptars/tars2php/src/tars2php.php	/^        $funcHeader = $this->generateFuncHeader($funcName, $inParams, $outParams);$/;"	v
funcHeader	src/vendor/phptars/tars2php/src/tars2php.php	/^        $funcHeader = $this->tabSymbol.'public function '.$funcName.'('.$paramsStr;$/;"	v
funcName	src/vendor/phptars/tars-report/src/ServerF.php	/^            $funcName = __FUNCTION__;$/;"	v
funcName	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^            $funcName = __FUNCTION__;$/;"	v
funcName	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $funcName = __FUNCTION__;$/;"	v
funcName	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $funcName = 'execute';$/;"	v
funcName	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $funcName = $unpackResult['sFuncName'];$/;"	v
funcName	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $funcName = $unpackResult['sFuncName'];$/;"	v
funcName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $funcName = $pices[count($pices) - 1];$/;"	v
funcSet	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $funcSet = '';$/;"	v
funcTail	src/vendor/phptars/tars2php/src/tars2php.php	/^        $funcTail = $this->tabSymbol.'}'.$this->doubleReturn;$/;"	v
fwrite	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function fwrite($data)$/;"	f
gc	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^                $this->gc = true;$/;"	v
gc	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $this->gc = false;$/;"	v
gc	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    private $gc = false;$/;"	v
generate	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function generate($query, $map)$/;"	f
generateAttachmentField	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private function generateAttachmentField($title, $value)$/;"	f
generateAttachmentFields	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private function generateAttachmentFields(array $data)$/;"	f
generateDataStream	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateDataStream	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateDataStream	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateDataStream	src/vendor/monolog/monolog/src/Monolog/Handler/InsightOpsHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateDataStream	src/vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateDataStream	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateDataStream	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateDataStream	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateFuncAnnotation	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function generateFuncAnnotation($inParams, $outParams, $returnInfo)$/;"	f
generateFuncBody	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function generateFuncBody($inParams, $outParams, $returnInfo)$/;"	f
generateFuncHeader	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function generateFuncHeader($funcName, $inParams, $outParams)$/;"	f
generateKey	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    private function generateKey($key)$/;"	f
generateScript	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function generateScript()$/;"	f
generateScript	src/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    protected function generateScript()$/;"	f
generateUid	src/vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^    private function generateUid($length)$/;"	f
genericMethod	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^            $genericMethod = $matches[1] . ('Records' !== $matches[3] ? 'Record' : '') . $matches[3];$/;"	v
get	src/impl/ArticleServantImpl.php	/^	public function get($version,ListParam $where,ArticleList &$data)$/;"	f
get	src/servant/Article/Server/Obj/ArticleServant.php	/^	public function get($version,ListParam $where,ArticleList &$data);$/;"	f
get	src/service/article/Article.php	/^    public function get(&$data)$/;"	f
get	src/service/validate/article/ValidateArticle.php	/^    public function get()$/;"	f
get	src/vendor/catfan/medoo/src/Medoo.php	/^	public function get($table, $join = null, $columns = null, $where = null)$/;"	f
get	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function get($tableName, $numRows = null, $columns = '*')$/;"	f
get	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    protected function get ($limit = null, $fields = null) {$/;"	f
get	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    public function get($key)$/;"	f
get	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^    public function get($key)$/;"	f
get	src/vendor/phptars/tars-monitor/src/contract/StoreCacheInterface.php	/^    public function get($key);$/;"	f
get	src/vendor/phptars/tars-server/tests/ClientConf.php	/^    public static function get($key)$/;"	f
get	src/vendor/phptars/tars-utils/src/Conf.php	/^    public static function get()$/;"	f
getAcceptedLevels	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function getAcceptedLevels()$/;"	f
getAlertColor	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    protected function getAlertColor($level)$/;"	f
getAll	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    public function getAll()$/;"	f
getAll	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^    public function getAll()$/;"	f
getAll	src/vendor/phptars/tars-monitor/src/contract/StoreCacheInterface.php	/^    public function getAll();$/;"	f
getAllData	src/libs/Mysql.php	/^    public function getAllData()$/;"	f
getApcuPrefix	src/vendor/composer/ClassLoader.php	/^    public function getApcuPrefix()$/;"	f
getApp	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    public function getApp()$/;"	f
getAppName	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function getAppName(array $context)$/;"	f
getAsyncInvokeTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getAsyncInvokeTimeout()$/;"	f
getAsyncInvokeTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getAsyncInvokeTimeout()$/;"	f
getAttachmentColor	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    public function getAttachmentColor($level)$/;"	f
getAttachmentColor	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    protected function getAttachmentColor($level)$/;"	f
getAvailableTypes	src/vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    public static function getAvailableTypes()$/;"	f
getBasic	src/model/mysql/content/ArticleBasic.php	/^    public function getBasic($where,$param)$/;"	f
getBatchFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    public function getBatchFormatter()$/;"	f
getBatchMode	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function getBatchMode()$/;"	f
getBool	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getBool($name, $tag, $sBuffer, $iVersion)$/;"	f
getBool	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function getBool($name, $tag, $sBuffer, $iVersion)$/;"	f
getBool	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function getBool($name, $tag, $sBuffer, $iVersion)$/;"	f
getBool	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function getBool($name, $tag, $sBuffer, $iVersion)$/;"	f
getBubble	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function getBubble()$/;"	f
getChar	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getChar($name, $tag, $sBuffer, $iVersion)$/;"	f
getChar	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function getChar($name, $tag, $sBuffer, $iVersion)$/;"	f
getChar	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function getChar($name, $tag, $sBuffer, $iVersion)$/;"	f
getChar	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function getChar($name, $tag, $sBuffer, $iVersion)$/;"	f
getCharsetName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getCharsetName()$/;"	f
getCharsetName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getCharsetName()$/;"	f
getChunkSize	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function getChunkSize()$/;"	f
getClass	src/vendor/monolog/monolog/src/Monolog/Utils.php	/^    public static function getClass($object)$/;"	f
getClassMap	src/vendor/composer/ClassLoader.php	/^    public function getClassMap()$/;"	f
getConnectTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getConnectTimeout()$/;"	f
getConnectTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getConnectTimeout()$/;"	f
getConnectionString	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function getConnectionString()$/;"	f
getConnectionTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function getConnectionTimeout()$/;"	f
getConnector	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    public function getConnector()$/;"	f
getContentType	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function getContentType()$/;"	f
getCreatedDocId	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    protected function getCreatedDocId(Response $response)$/;"	f
getDataByWhere	src/libs/Mysql.php	/^    public function getDataByWhere($where,$param)$/;"	f
getDataPath	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getDataPath()$/;"	f
getDataPath	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getDataPath()$/;"	f
getDateFormat	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    public function getDateFormat()$/;"	f
getDateTime	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    protected function getDateTime()$/;"	f
getDefaultBatchFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected function getDefaultBatchFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    public function getDefaultFormatter()$/;"	f
getDirFromStream	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    private function getDirFromStream($stream)$/;"	f
getDocSourceFromElastic	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    protected function getDocSourceFromElastic(Client $client, $index, $type, $documentId)$/;"	f
getDocument	src/vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    protected function getDocument($record)$/;"	f
getDouble	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getDouble($name, $tag, $sBuffer, $iVersion)$/;"	f
getDouble	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function getDouble($name, $tag, $sBuffer, $iVersion)$/;"	f
getDouble	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function getDouble($name, $tag, $sBuffer, $iVersion)$/;"	f
getDouble	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function getDouble($name, $tag, $sBuffer, $iVersion)$/;"	f
getEnableTimer	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getEnableTimer()$/;"	f
getEncoding	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function getEncoding()$/;"	f
getEndpointInfo	src/vendor/phptars/tars-server/tests/testConf.php	/^    public static function getEndpointInfo($endpoint)$/;"	f
getEndpointInfo	src/vendor/phptars/tars-utils/src/Utils.php	/^    public static function getEndpointInfo($endpoint)$/;"	f
getErrMsg	src/vendor/phptars/tars-client/src/Code.php	/^    public static function getErrMsg($code)$/;"	f
getErrMsg	src/vendor/phptars/tars-monitor/src/client/Code.php	/^    public static function getErrMsg($code)$/;"	f
getErrMsg	src/vendor/phptars/tars-monitor/src/client/CodeMonitor.php	/^    public static function getErrMsg($code)$/;"	f
getErrMsg	src/vendor/phptars/tars-registry/src/client/CodeRegistry.php	/^    public static function getErrMsg($code)$/;"	f
getExceptionHandler	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function getExceptionHandler()$/;"	f
getExtType	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function getExtType($wholeType)$/;"	f
getExtType	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function getExtType($wholeType, $valueName)$/;"	f
getExtraParameters	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected function getExtraParameters()$/;"	f
getFallbackDirs	src/vendor/composer/ClassLoader.php	/^    public function getFallbackDirs()$/;"	f
getFallbackDirsPsr4	src/vendor/composer/ClassLoader.php	/^    public function getFallbackDirsPsr4()$/;"	f
getField	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    public function getField($key, $field)$/;"	f
getField	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^    public function getField($key, $field)$/;"	f
getField	src/vendor/phptars/tars-monitor/src/contract/StoreCacheInterface.php	/^    public function getField($key, $field);$/;"	f
getFileHeader	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function getFileHeader($prefix = '')$/;"	f
getFloat	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getFloat($name, $tag, $sBuffer, $iVersion)$/;"	f
getFloat	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function getFloat($name, $tag, $sBuffer, $iVersion)$/;"	f
getFloat	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function getFloat($name, $tag, $sBuffer, $iVersion)$/;"	f
getFloat	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function getFloat($name, $tag, $sBuffer, $iVersion)$/;"	f
getFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function getFormatter()$/;"	f
getFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^    public function getFormatter();$/;"	f
getFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function getFormatter()$/;"	f
getFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    public function getFormatter()$/;"	f
getFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    public function getFormatter()$/;"	f
getGitInfo	src/vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^    private static function getGitInfo()$/;"	f
getGlobPattern	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected function getGlobPattern()$/;"	f
getHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^    protected function getHandler($messagePublisher)$/;"	f
getHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    protected function getHandler($messagePublisher)$/;"	f
getHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    protected function getHandler($ravenClient)$/;"	f
getHandler	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function getHandler()$/;"	f
getHandlerDefaultOption	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function getHandlerDefaultOption($name)$/;"	f
getHandlers	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function getHandlers()$/;"	f
getHeaders	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    public function getHeaders()$/;"	f
getHeaders	src/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    public function getHeaders()$/;"	f
getHighestRecord	src/vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^    protected function getHighestRecord(array $records)$/;"	f
getIVersion	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getIVersion()$/;"	f
getIVersion	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getIVersion()$/;"	f
getIdentityFormatter	src/vendor/monolog/monolog/tests/Monolog/TestCase.php	/^    protected function getIdentityFormatter()$/;"	f
getIndex	src/vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    public function getIndex()$/;"	f
getInitHeaders	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function getInitHeaders()$/;"	f
getInitializer	src/vendor/composer/autoload_static.php	/^    public static function getInitializer(ClassLoader $loader)$/;"	f
getInsertId	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function getInsertId()$/;"	f
getInstance	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public static function getInstance()$/;"	f
getInstance	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function getInstance($name)$/;"	f
getInstance	src/vendor/phptars/tars-registry/src/RouteTable.php	/^    public static function getInstance()$/;"	f
getInstance	src/vendor/phptars/tars-server/tests/ClientConf.php	/^    public static function getInstance()$/;"	f
getInstance	src/vendor/phptars/tars-utils/src/Conf.php	/^    public static function getInstance()$/;"	f
getInt32	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getInt32($name, $tag, $sBuffer, $iVersion)$/;"	f
getInt32	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function getInt32($name, $tag, $sBuffer, $iVersion)$/;"	f
getInt32	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function getInt32($name, $tag, $sBuffer, $iVersion)$/;"	f
getInt32	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function getInt32($name, $tag, $sBuffer, $iVersion)$/;"	f
getInt64	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getInt64($name, $tag, $sBuffer, $iVersion)$/;"	f
getInt64	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function getInt64($name, $tag, $sBuffer, $iVersion)$/;"	f
getInt64	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function getInt64($name, $tag, $sBuffer, $iVersion)$/;"	f
getInt64	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function getInt64($name, $tag, $sBuffer, $iVersion)$/;"	f
getInterfaceBasic	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function getInterfaceBasic()$/;"	f
getKeepAliveTime	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getKeepAliveTime()$/;"	f
getKeepAliveTime	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getKeepAliveTime()$/;"	f
getLastErrno	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function getLastErrno () {$/;"	f
getLastError	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function getLastError()$/;"	f
getLastErrorMvs	src/libs/Mysql.php	/^    public function getLastErrorMvs()$/;"	f
getLastQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function getLastQuery()$/;"	f
getLastQueryMvs	src/libs/Mysql.php	/^    public function getLastQueryMvs() $/;"	f
getLevel	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function getLevel()$/;"	f
getLevelMap	src/vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    public function getLevelMap()$/;"	f
getLevelName	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public static function getLevelName($level)$/;"	f
getLevels	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public static function getLevels()$/;"	f
getLoader	src/libs/Loader.php	/^    public static function getLoader()$/;"	f
getLoader	src/vendor/composer/autoload_real.php	/^    public static function getLoader()$/;"	f
getLocalip	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getLocalip()$/;"	f
getLocalip	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getLocalip()$/;"	f
getLocator	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getLocator()$/;"	f
getLocator	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getLocator()$/;"	f
getLocatorInfo	src/vendor/phptars/tars-server/tests/testConf.php	/^    public static function getLocatorInfo($locatorString)$/;"	f
getLocatorInfo	src/vendor/phptars/tars-utils/src/Utils.php	/^    public static function getLocatorInfo($locatorString)$/;"	f
getLogLevel	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getLogLevel()$/;"	f
getLogLevel	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getLogLevel()$/;"	f
getLogPath	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getLogPath()$/;"	f
getLogPath	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getLogPath()$/;"	f
getLogger	src/vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^    public function getLogger()$/;"	f
getLogger	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    abstract public function getLogger();$/;"	f
getLogs	src/vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^    public function getLogs()$/;"	f
getLogs	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    abstract public function getLogs();$/;"	f
getMap	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getMap($name, $tag, $obj, $sBuffer, $iVersion)$/;"	f
getMap	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public function getMap($name, $tag, $obj, $sBuffer, $iVersion)$/;"	f
getMap	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public function getMap($name, $tag, $obj, $sBuffer, $iVersion)$/;"	f
getMap	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public function getMap($name, $tag, $obj, $sBuffer, $iVersion)$/;"	f
getMaxSampleCount	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getMaxSampleCount()$/;"	f
getMaxSampleCount	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getMaxSampleCount()$/;"	f
getMercurialInfo	src/vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^    private static function getMercurialInfo()$/;"	f
getMessagePublisher	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^    protected function getMessagePublisher()$/;"	f
getMessagePublisher	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    protected function getMessagePublisher()$/;"	f
getModelDb	src/libs/Mysql.php	/^    public function getModelDb()$/;"	f
getModelFields	src/service/validate/article/ValidateArticle.php	/^    public function getModelFields()$/;"	f
getModuleName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getModuleName()$/;"	f
getModuleName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getModuleName()$/;"	f
getMsg	src/vendor/phptars/tars-server/src/Code.php	/^    public static function getMsg($code)$/;"	f
getMultipleRecords	src/vendor/monolog/monolog/tests/Monolog/TestCase.php	/^    protected function getMultipleRecords()$/;"	f
getName	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function getName()$/;"	f
getOne	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function getOne($tableName, $columns = '*')$/;"	f
getOne	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    protected function getOne ($fields = null) {$/;"	f
getOptions	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    public function getOptions()$/;"	f
getOptions	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    public function getOptions()$/;"	f
getPackMethods	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function getPackMethods($type)$/;"	f
getPairs	src/vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^    public function getPairs()$/;"	f
getPrefixes	src/vendor/composer/ClassLoader.php	/^    public function getPrefixes()$/;"	f
getPrefixesPsr4	src/vendor/composer/ClassLoader.php	/^    public function getPrefixesPsr4()$/;"	f
getProcess	src/vendor/phptars/tars-server/src/cmd/CommandBase.php	/^    public function getProcess($processName)$/;"	f
getProcessors	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function getProcessors()$/;"	f
getProperty	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $getProperty = function ($object, $property) {$/;"	v
getProperty	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getProperty()$/;"	f
getProperty	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getProperty()$/;"	f
getProtocol	src/vendor/phptars/tars-server/src/protocol/ProtocolFactory.php	/^    public static function getProtocol($protocolName)$/;"	f
getQueueSize	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getQueueSize()$/;"	f
getQueueSize	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getQueueSize()$/;"	f
getRavenClient	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    protected function getRavenClient()$/;"	f
getRealType	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function getRealType($type)$/;"	f
getRecord	src/vendor/monolog/monolog/tests/Monolog/TestCase.php	/^    protected function getRecord($level = Logger::WARNING, $message = 'test', $context = array())$/;"	f
getRecordTags	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function getRecordTags(array &$record)$/;"	f
getRecordWithMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^    protected function getRecordWithMessage($msg)$/;"	f
getRecords	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function getRecords()$/;"	f
getRefreshEndpointInterval	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getRefreshEndpointInterval()$/;"	f
getRefreshEndpointInterval	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getRefreshEndpointInterval()$/;"	f
getRelationShipByAbId	src/model/mysql/content/ArticleRelationship.php	/^    public function getRelationShipByAbId($ab_id)$/;"	f
getRelationShipInAbId	src/model/mysql/content/ArticleRelationship.php	/^    public function getRelationShipInAbId($ab_ids)$/;"	f
getReportInterval	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getReportInterval()$/;"	f
getReportInterval	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getReportInterval()$/;"	f
getResource	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function getResource()$/;"	f
getResourceByAbId	src/model/mysql/content/ArticleResource.php	/^    public function getResourceByAbId($ab_id)$/;"	f
getResourceInAbId	src/model/mysql/content/ArticleResource.php	/^    public function getResourceInAbId($ab_ids)$/;"	f
getResponseFormat	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected static function getResponseFormat()$/;"	f
getRouteInfo	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getRouteInfo()$/;"	f
getRouteInfo	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getRouteInfo()$/;"	f
getRouteInfo	src/vendor/phptars/tars-registry/src/RouteTable.php	/^    public static function getRouteInfo($moduleName)$/;"	f
getRoutingKey	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    protected function getRoutingKey(array $record)$/;"	f
getSampleRate	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getSampleRate()$/;"	f
getSampleRate	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getSampleRate()$/;"	f
getServantName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getServantName()$/;"	f
getServantName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getServantName()$/;"	f
getServer	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    public function getServer()$/;"	f
getServerName	src/vendor/phptars/tars-deploy/src/Deploy.php	/^    public static function getServerName($tarsPHPRoot)$/;"	f
getSetDivision	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getSetDivision()$/;"	f
getSetDivision	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getSetDivision()$/;"	f
getShort	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getShort($name, $tag, $sBuffer, $iVersion)$/;"	f
getShort	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function getShort($name, $tag, $sBuffer, $iVersion)$/;"	f
getShort	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function getShort($name, $tag, $sBuffer, $iVersion)$/;"	f
getShort	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function getShort($name, $tag, $sBuffer, $iVersion)$/;"	f
getShortMessage	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^    public function getShortMessage($message)$/;"	f
getSlackData	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    public function getSlackData(array $record)$/;"	f
getSlackRecord	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    public function getSlackRecord()$/;"	f
getSlackRecord	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    public function getSlackRecord()$/;"	f
getSocketMode	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getSocketMode()$/;"	f
getSocketMode	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getSocketMode()$/;"	f
getStat	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getStat()$/;"	f
getStat	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getStat()$/;"	f
getStoreCache	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    public static function getStoreCache()$/;"	f
getStream	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    public function getStream()$/;"	f
getString	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getString($name, $tag, $sBuffer, $iVersion)$/;"	f
getString	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function getString($name, $tag, $sBuffer, $iVersion)$/;"	f
getString	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function getString($name, $tag, $sBuffer, $iVersion)$/;"	f
getString	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function getString($name, $tag, $sBuffer, $iVersion)$/;"	f
getStruct	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getStruct($name, $tag, &$obj, $sBuffer, $iVersion)$/;"	f
getStruct	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function getStruct($name, $tag, &$obj, $sBuffer, $iVersion)$/;"	f
getStruct	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function getStruct($name, $tag, &$obj, $sBuffer, $iVersion)$/;"	f
getStruct	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function getStruct($name, $tag, &$obj, $sBuffer, $iVersion)$/;"	f
getStructClassHeader	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function getStructClassHeader($prefix = 'getFileHea')$/;"	f
getSubQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function getSubQuery()$/;"	f
getSubjectFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    protected function getSubjectFormatter($format)$/;"	f
getSyncInvokeTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function getSyncInvokeTimeout()$/;"	f
getSyncInvokeTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function getSyncInvokeTimeout()$/;"	f
getTarsConf	src/conf/ENVConf.php	/^    public static function getTarsConf()$/;"	f
getTarsConf	src/vendor/phptars/tars-utils/src/Utils.php	/^    public static function getTarsConf()$/;"	f
getTimeSlice	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    public function getTimeSlice($interval)$/;"	f
getTimedFilename	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected function getTimedFilename()$/;"	f
getTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function getTimeout()$/;"	f
getToken	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    public function getToken()$/;"	f
getTransactionName	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function getTransactionName(array $context)$/;"	f
getType	src/vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    public function getType()$/;"	f
getUid	src/vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^    public function getUid()$/;"	f
getUint16	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getUint16($name, $tag, $sBuffer, $iVersion)$/;"	f
getUint16	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function getUint16($name, $tag, $sBuffer, $iVersion)$/;"	f
getUint16	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function getUint16($name, $tag, $sBuffer, $iVersion)$/;"	f
getUint16	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function getUint16($name, $tag, $sBuffer, $iVersion)$/;"	f
getUint32	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getUint32($name, $tag, $sBuffer, $iVersion)$/;"	f
getUint32	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function getUint32($name, $tag, $sBuffer, $iVersion)$/;"	f
getUint32	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function getUint32($name, $tag, $sBuffer, $iVersion)$/;"	f
getUint32	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function getUint32($name, $tag, $sBuffer, $iVersion)$/;"	f
getUint8	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getUint8($name, $tag, $sBuffer, $iVersion)$/;"	f
getUint8	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function getUint8($name, $tag, $sBuffer, $iVersion)$/;"	f
getUint8	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function getUint8($name, $tag, $sBuffer, $iVersion)$/;"	f
getUint8	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function getUint8($name, $tag, $sBuffer, $iVersion)$/;"	f
getUnpackMethods	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function getUnpackMethods($type)$/;"	f
getUrl	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    public function getUrl()$/;"	f
getUseIncludePath	src/vendor/composer/ClassLoader.php	/^    public function getUseIncludePath()$/;"	f
getValue	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function getValue($tableName, $column, $limit = 1)$/;"	f
getVector	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function getVector($name, $tag, $vec, $sBuffer, $iVersion)$/;"	f
getVector	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function getVector($name, $tag, $vec, $sBuffer, $iVersion)$/;"	f
getVector	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function getVector($name, $tag, $vec, $sBuffer, $iVersion)$/;"	f
getVector	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function getVector($name, $tag, $vec, $sBuffer, $iVersion)$/;"	f
getWebhookUrl	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    public function getWebhookUrl()$/;"	f
getWritingTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function getWritingTimeout()$/;"	f
git	src/vendor/phptars/tars-deploy/src/Deploy.php	/^        $git = dirname($tmpDir).DIRECTORY_SEPARATOR.'.git';$/;"	v
glob	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $glob = str_replace($/;"	v
grepPidInfo	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $grepPidInfo = implode("|", $tmpId);$/;"	v
grid	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public $grid;$/;"	v
gridFlag	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public $gridFlag;$/;"	v
groupBy	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function groupBy($groupByField)$/;"	f
groupByField	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $groupByField = preg_replace("\/[^-a-z0-9\\.\\(\\),_\\* <>=!]+\/i", '', $groupByField);$/;"	v
groupHandler	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $groupHandler = new Handler\\GroupHandler(array($bufferHandler));$/;"	v
grouprealid	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public $grouprealid;$/;"	v
groupworkid	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public $groupworkid;$/;"	v
guid	src/vendor/catfan/medoo/src/Medoo.php	/^	protected $guid = 0;$/;"	v
handle	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php	/^    public function handle(array $record)$/;"	f
handle	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function handle(array $record)$/;"	f
handle	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $handle = fopen($this->deduplicationStore, 'rw+');$/;"	v
handle	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function handle(array $record)$/;"	f
handle	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function handle(array $record)$/;"	f
handle	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    public function handle(array $record)$/;"	f
handle	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^    public function handle(array $record);$/;"	f
handle	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function handle(array $record)$/;"	f
handle	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^ *   public function handle(array $record)$/;"	f
handle	src/vendor/monolog/monolog/src/Monolog/Handler/NullHandler.php	/^    public function handle(array $record)$/;"	f
handle	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    public function handle(array $record)$/;"	f
handle	src/vendor/monolog/monolog/src/Monolog/Handler/PsrHandler.php	/^    public function handle(array $record)$/;"	f
handle	src/vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^    public function handle(array $record)$/;"	f
handle	src/vendor/monolog/monolog/src/Monolog/Handler/WhatFailureGroupHandler.php	/^    public function handle(array $record)$/;"	f
handle	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handle = $streamProp->getValue($handler);$/;"	v
handle	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handle = fopen('php:\/\/memory', 'a+');$/;"	v
handle	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function handle(array $record)$/;"	f
handle	src/vendor/phptars/tars-deploy/src/Deploy.php	/^        $handle = opendir($path);$/;"	v
handle	src/vendor/phptars/tars-deploy/src/Deploy.php	/^        $handle = opendir($source);$/;"	v
handle	src/vendor/phptars/tars-deploy/src/Deploy.php	/^    public static function handle()$/;"	f
handleBatch	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^    public function handleBatch(array $records);$/;"	f
handleBatch	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	src/vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	src/vendor/monolog/monolog/src/Monolog/Handler/WhatFailureGroupHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleCustomStyles	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function handleCustomStyles($style, $string)$/;"	f
handleDebugRecord	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function handleDebugRecord(array $record)$/;"	f
handleError	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function handleError($code, $message, $file = '', $line = 0, $context = array())$/;"	f
handleError	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $handleError = true;$/;"	v
handleError	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^        $handleError = false;$/;"	v
handleErrorRecord	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function handleErrorRecord(array $record)$/;"	f
handleException	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function handleException($e)$/;"	f
handleException	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected function handleException(Exception $e, array $record)$/;"	f
handleExceptionRecord	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function handleExceptionRecord(array $record)$/;"	f
handleFatalError	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function handleFatalError()$/;"	f
handleJsonError	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    private function handleJsonError($code, $data)$/;"	f
handleOnlyReportedErrors	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->handleOnlyReportedErrors = $handleOnlyReportedErrors;$/;"	v
handleOnlyReportedErrors	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $handleOnlyReportedErrors;$/;"	v
handleSignal	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^    public function handleSignal($signo, array $siginfo = null)$/;"	f
handleStyles	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function handleStyles($formatted)$/;"	f
handled	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $handled = true;$/;"	v
handled	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $handled = false;$/;"	v
handledRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^                $handledRecord = $record;$/;"	v
handledRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $handledRecord = null;$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $handler = new static($logger);$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^        $this->handler = $handler;$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    protected $handler;$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^ *    $handler = new ElasticSearchHandler($client, $options);$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^            $this->handler = call_user_func($this->handler, $record, $this);$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^        $this->handler  = $handler;$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    protected $handler;$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^ *   $handler = new FingersCrossedHandler(new StreamHandler('php:\/\/stderr'), $activationStrategy);$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $this->handler = call_user_func($this->handler, $record, $this);$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->handler = $handler;$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $handler;$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^        $this->handler = $handler;$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    protected $handler;$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^                $handler = Handler::getInstance();$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^                $this->handler = call_user_func($this->handler, $record, $this);$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^        $this->handler = $handler;$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^    protected $handler;$/;"	v
handler	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^                $handler = pcntl_signal_get_handler($signo);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractHandler');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractHandler', array('warning', false));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractHandler', array(Logger::WARNING, false));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractProcessingHandler');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractProcessingHandler', array(Logger::DEBUG, false));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractProcessingHandler', array(Logger::DEBUG, true));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractProcessingHandler', array(Logger::WARNING, false));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractProcessingHandler', array(Logger::WARNING, true));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $handler = new AmqpHandler($exchange, 'log');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^        $handler = new BrowserConsoleHandler();$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $handler = new BufferHandler($test);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $handler = new BufferHandler($test, 0);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $handler = new BufferHandler($test, 0, Logger::INFO);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $handler = new BufferHandler($test, 2);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $handler = new BufferHandler($test, 3, Logger::DEBUG, true, true);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^        $handler = new TestChromePHPHandler();$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/CouchDBHandlerTest.php	/^        $handler = new CouchDBHandler();$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^        $handler = new DeduplicationHandler($test, sys_get_temp_dir().'\/monolog_dedup.log', 0);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^        $handler = new DoctrineCouchDBHandler($client);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^        $handler = new DynamoDbHandler($this->client, 'foo');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $handler = new ElasticSearchHandler($client, $handlerOpts);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $handler = new ElasticSearchHandler($client, $this->options);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $handler = new ElasticSearchHandler($this->client);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $handler = new ElasticSearchHandler($this->client, $this->options);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^        $handler = new ErrorLogHandler($type);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^        $handler = new ErrorLogHandler($type, Logger::DEBUG, true, true);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($test);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($test, Logger::DEBUG, Logger::EMERGENCY);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($test, Logger::INFO, Logger::NOTICE);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($test, Logger::INFO, Logger::NOTICE, false);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($test, Logger::INFO, Logger::NOTICE, true);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($test, array(Logger::INFO, Logger::ERROR));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, Logger::ERROR);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, Logger::INFO);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, Logger::WARNING, 0, false, false);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, Logger::WARNING, 2);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, new ChannelLevelActivationStrategy('error', array('othertest' => 'debug')));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, new ChannelLevelActivationStrategy(Logger::ERROR, array('othertest' => Logger::DEBUG)));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, new ErrorLevelActivationStrategy('warning'));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, new ErrorLevelActivationStrategy(Logger::WARNING));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, new ErrorLevelActivationStrategy(Logger::WARNING), 0, true, true, LogLevel::INFO);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, new ErrorLevelActivationStrategy(Logger::WARNING), 0, true, true, Logger::INFO);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler(function ($record, $handler) use ($test) {$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler(function ($record, $handler) {$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^        $handler = new TestFirePHPHandler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^        $this->handler = new FleepHookHandler(self::TOKEN);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^    private $handler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^        $this->handler = $this->getMock($/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^    private $handler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^        $handler = $this->getHandler($messagePublisher);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^        $handler = new GelfHandler($messagePublisher);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^        $handler = new GelfHandler($this->getMessagePublisher());$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $handler = $this->getHandler($messagePublisher);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $handler = new GelfHandler($messagePublisher);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $handler = new GelfHandler($this->getMessagePublisher());$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^        $handler = new GroupHandler($testHandlers);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^        $handler = new GroupHandler(array($test));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^        $this->handler = $this->getMock('Monolog\\\\Handler\\\\HandlerInterface');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    private $handler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $this->handler = $this->getMock($/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    private $handler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/InsightOpsHandlerTest.php	/^        $this->handler = $this->getMock($/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/InsightOpsHandlerTest.php	/^    private $handler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $this->handler = $this->getMock($/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^    private $handler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\\\Handler\\\\MailHandler');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^        $handler = new MongoDBHandler($mongo, 'DB', 'Collection');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $handler = new StubNewRelicHandler();$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $handler = new StubNewRelicHandler(Logger::DEBUG, false, 'myAppName');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $handler = new StubNewRelicHandler(Logger::DEBUG, false, null, false, 'myTransaction');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $handler = new StubNewRelicHandler(Logger::ERROR, true, self::$appname, true);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $handler = new StubNewRelicHandlerWithoutExtension();$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/NullHandlerTest.php	/^        $handler = new NullHandler();$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/NullHandlerTest.php	/^        $handler = new NullHandler(Logger::WARNING);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $handler = $this->initLogger();$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $handler = new PHPConsoleHandler();$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $handler = new PHPConsoleHandler(array(), $this->connector);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        $handler = new PsrHandler($psrLogger);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $this->handler = $this->getMock($/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    private $handler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $handler = $this->getHandler($ravenClient);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $handler = $this->getHandler($this->getRavenClient());$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $handler = $this->getMock('Monolog\\Handler\\RavenHandler', null, array($this->getRavenClient()));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $handler = new RavenHandler($ravenClient);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $handler = new RavenHandler($this->getRavenClient());$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $handler = new RedisHandler($redis, 'key');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $handler = new RedisHandler($redis, 'key', Logger::DEBUG, true, 10);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^        $handler = $this->createHandler();$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $handler = new RotatingFileHandler(__DIR__.'\/Fixtures\/foo.rot');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $handler = new RotatingFileHandler(__DIR__.'\/Fixtures\/foo.rot', 2);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SamplingHandlerTest.php	/^        $handler = new SamplingHandler($testHandler, 2);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^        $this->handler = $this->getMock($/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    private $handler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^        $handler = new SlackWebhookHandler($/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^        $handler = new SlackWebhookHandler(self::WEBHOOK_URL);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackbotHandlerTest.php	/^        $handler = new SlackbotHandler($/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackbotHandlerTest.php	/^        $handler = new SlackbotHandler('test-team', 'test-token', 'test-channel');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $this->handler = $this->getMock($/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $this->handler = new SocketHandler($connectionString);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    private $handler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler($handle);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler($invalidArgument);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler($temp, Logger::DEBUG, true, null, true);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler('\/foo\/bar\/'.rand(0, 10000).DIRECTORY_SEPARATOR.rand(0, 10000));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler('bogus:\/\/url');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler('file:\/\/'.sys_get_temp_dir().'\/bar\/'.rand(0, 10000).DIRECTORY_SEPARATOR.rand(0, 10000));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler('file:\/\/\/foo\/bar\/'.rand(0, 10000).DIRECTORY_SEPARATOR.rand(0, 10000));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler('ftp:\/\/foo\/bar\/baz\/'.rand(0, 10000));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler('php:\/\/memory');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler(null);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler(sys_get_temp_dir().'\/bar\/'.rand(0, 10000).DIRECTORY_SEPARATOR.rand(0, 10000));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $handler = new SwiftMailerHandler($this->mailer, $callback);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $handler = new SwiftMailerHandler($this->mailer, $messageTemplate);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^        $handler = new SyslogHandler('test');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^        $handler = new SyslogHandler('test', 'unknown');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^        $handler = new SyslogHandler('test', 'user');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^        $handler = new SyslogHandler('test', LOG_USER);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^        $handler = new SyslogHandler('test', LOG_USER, Logger::DEBUG, true, LOG_PERROR);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $handler = $this->getMockBuilder('\\Monolog\\Handler\\SyslogUdpHandler')$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $handler = new SyslogUdpHandler("127.0.0.1", 514, "authpriv");$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $handler = new SyslogUdpHandler("ip", null, "invalidFacility");$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^        $handler = new TestHandler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $handler = new WhatFailureGroupHandler($testHandlers);$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $handler = new WhatFailureGroupHandler(array($exception, $test, $exception));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $handler = new WhatFailureGroupHandler(array($test));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler = $this->getMock('Monolog\\Handler\\HandlerInterface');$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler = $this->getMock('Monolog\\Handler\\NullHandler', array('handle'));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler = $this->getMock('Monolog\\Handler\\NullHandler', array('handle'), array(Logger::ERROR));$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler = new TestHandler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $handler = $this->getHandler();$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $handler = new TestHandler();$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^        $this->handler = $handler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^    private $handler;$/;"	v
handler	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    private function setSignalHandler($signo, $handler = SIG_DFL) {$/;"	v
handler1	src/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^        $handler1 = new BrowserConsoleHandler();$/;"	v
handler1	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler1 = $this->getMock('Monolog\\Handler\\HandlerInterface');$/;"	v
handler1	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler1 = new TestHandler;$/;"	v
handler2	src/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^        $handler2 = new BrowserConsoleHandler();$/;"	v
handler2	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^        $handler2 = new TestChromePHPHandler();$/;"	v
handler2	src/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^        $handler2 = new TestFirePHPHandler;$/;"	v
handler2	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler2 = $this->getMock('Monolog\\Handler\\HandlerInterface');$/;"	v
handler2	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler2 = new TestHandler;$/;"	v
handler3	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler3 = $this->getMock('Monolog\\Handler\\HandlerInterface');$/;"	v
handlerFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^        $handlerFormatter = $this->handler->getFormatter();$/;"	v
handlerKey	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^                $handlerKey = key($this->handlers);$/;"	v
handlerKey	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^        $handlerKey = null;$/;"	v
handlerOpts	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $handlerOpts = array('ignore_error' => $ignore);$/;"	v
handlers	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^        $this->handlers = $handlers;$/;"	v
handlers	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    protected $handlers;$/;"	v
handlers	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^        $this->handlers = array();$/;"	v
handlers	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected $handlers;$/;"	v
handlers	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function __construct($name, array $handlers = array(), array $processors = array())$/;"	v
has	src/vendor/catfan/medoo/src/Medoo.php	/^	public function has($table, $join, $where = null)$/;"	f
has	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function has($tableName)$/;"	f
hasFatalErrorHandler	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->hasFatalErrorHandler = true;$/;"	v
hasFatalErrorHandler	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $hasFatalErrorHandler;$/;"	v
hasLogger	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function hasLogger($logger)$/;"	f
hasLoggerProvider	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function hasLoggerProvider()$/;"	f
hasMbString	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^            $hasMbString = function_exists('mb_strlen');$/;"	v
hasMbString	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        static $hasMbString;$/;"	v
hasNonNumericKeys	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $hasNonNumericKeys = !count(array_filter(array_keys($normalized), 'is_numeric'));$/;"	v
hasRecord	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function hasRecord($record, $level)$/;"	f
hasRecordThatContains	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function hasRecordThatContains($message, $level)$/;"	f
hasRecordThatMatches	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function hasRecordThatMatches($regex, $level)$/;"	f
hasRecordThatPasses	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function hasRecordThatPasses($predicate, $level)$/;"	f
hasRecords	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^            $this->hasRecords = false;$/;"	v
hasRecords	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^        $this->hasRecords = true;$/;"	v
hasRecords	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    private $hasRecords = false;$/;"	v
hasRecords	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function hasRecords($level)$/;"	f
hasSecondDimension	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $hasSecondDimension = count(array_filter($normalized, 'is_array'));$/;"	v
hash	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^        $hash = md5($key);$/;"	v
hash	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^        foreach ($this->_swooleTable as $hash => $value) {$/;"	v
haveOnDuplicate	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $haveOnDuplicate = !empty ($this->_updateColumns);$/;"	v
having	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function having($havingProp, $havingValue = 'DBNULL', $operator = '=', $cond = 'AND')$/;"	f
havingValue	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $havingValue = $havingValue[$key];$/;"	v
havingValue	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function having($havingProp, $havingValue = 'DBNULL', $operator = '=', $cond = 'AND')$/;"	v
havingValue	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function orHaving($havingProp, $havingValue = null, $operator = null)$/;"	v
headInfo	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $headInfo = compact('masterName', 'slaveName', 'interfaceName', 'masterIp', 'slaveIp', 'slavePort',$/;"	v
header	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^            foreach ($this->getInitHeaders() as $header => $content) {$/;"	v
header	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^        $header = $this->createRecordHeader($record);$/;"	v
header	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^        $header = sprintf('%s-%s', self::HEADER_PREFIX, join('-', $meta));$/;"	v
header	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^        $header = "POST " . self::FLEEP_HOOK_URI . $this->token . " HTTP\/1.1\\r\\n";$/;"	v
header	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^        $header = "POST \/v1\/messages\/team_inbox\/" . $this->apiToken . " HTTP\/1.1\\r\\n";$/;"	v
header	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            $header = "POST \/v1\/rooms\/message?format=json&auth_token={$this->token} HTTP\/1.1\\r\\n";$/;"	v
header	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            $header = "POST \/v2\/room\/{$room}\/notification?auth_token={$this->token} HTTP\/1.1\\r\\n";$/;"	v
header	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $header = "POST \/1\/messages.json HTTP\/1.1\\r\\n";$/;"	v
header	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $header = "POST \/api\/chat.postMessage HTTP\/1.1\\r\\n";$/;"	v
header	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    public function write($line, $header = "")$/;"	v
header	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^        $header = $this->makeCommonSyslogHeader($this->logLevels[$record['level']]);$/;"	v
header	src/vendor/phptars/tars-server/src/core/Response.php	/^    public function header($key, $value)$/;"	f
headers	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $headers = array('Content-Type: application\/json');$/;"	v
headers	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $headers = ltrim(implode("\\r\\n", $this->headers) . "\\r\\n", "\\r\\n");$/;"	v
headers	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $headers = array();$/;"	v
headers	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    protected $headers = array();$/;"	v
headers	src/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    protected $headers = array();$/;"	v
headersAccepted	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected function headersAccepted()$/;"	f
headersAccepted	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function headersAccepted()$/;"	f
highPriorityLevel	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->highPriorityLevel = $value;$/;"	v
highPriorityLevel	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->highPriorityLevel = Logger::toMonologLevel($highPriorityLevel);$/;"	v
highPriorityLevel	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $highPriorityLevel;$/;"	v
highestRecord	src/vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^                $highestRecord = $record;$/;"	v
highestRecord	src/vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^        $highestRecord = null;$/;"	v
hipChatHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $hipChatHandler = new HipChatHandler('token', 'room', 'SixteenCharsHere');$/;"	v
hipChatHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $hipChatHandler = new HipChatHandler('token', 'room', 'SixteenCharsHere', false, Logger::CRITICAL, true, true, 'test', 'api.hipchat.com', 'v2');$/;"	v
host	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $this->host = $urlInfo['host'];$/;"	v
host	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private $host;$/;"	v
host	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $this->host = $host;$/;"	v
host	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private $host;$/;"	v
host	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $host = gethostname();$/;"	v
host	src/vendor/phptars/tars-config/src/classes/ConfigInfo.php	/^    public $host;$/;"	v
host	src/vendor/phptars/tars-config/src/classes/GetConfigListInfo.php	/^    public $host = '';$/;"	v
host	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public $host;$/;"	v
host	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $host = $data['host'];$/;"	v
host	src/vendor/phptars/tars-server/src/core/Server.php	/^        $host = $result['host'];$/;"	v
host	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->host = $tarsServerConf['listen'][0]['bIp'];$/;"	v
host	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $host = '0.0.0.0';$/;"	v
host	src/vendor/phptars/tars-server/tests/testConf.php	/^        $host = trim($subParts[1], 'h ');$/;"	v
host	src/vendor/phptars/tars-utils/src/Utils.php	/^        $host = trim($subParts[1], 'h ');$/;"	v
hostname	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^            $hostname = '-';$/;"	v
httpConnection	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $this->httpConnection = curl_init('http:\/\/'.$this->host.':'.$this->port.'\/1.0\/event\/put');$/;"	v
httpConnection	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private $httpConnection;$/;"	v
httponly	src/vendor/phptars/tars-server/src/core/Response.php	/^        $httponly = false$/;"	v
humpToUndline	src/common/Common.php	/^    public static function humpToUndline($str = '')$/;"	f
i	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $i = 1;$/;"	v
i	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        foreach ($tables as $i => $value)$/;"	v
i	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^        foreach ($this->recordsByLevel[$level] as $i => $rec) {$/;"	v
i	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^        $i = 0;$/;"	v
iMessageType	src/vendor/phptars/tars-report/src/ServerF.php	/^            $iMessageType = 0;$/;"	v
iMessageType	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^            $iMessageType = 0;$/;"	v
iMessageType	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $iMessageType = 0;$/;"	v
iMessageType	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $iMessageType = 0;$/;"	v
iMessageType	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $iMessageType = 0;$/;"	v
iMessageType	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $iMessageType = 0;$/;"	v
iPort	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^            $iPort = $this->_routeInfo[$index]['iPort'];$/;"	v
iPort	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $iPort = $this->_routeInfo[$index]['iPort'];$/;"	v
iPort	src/vendor/phptars/tars-server/tests/testConf.php	/^                $iPort = trim($part, " p\\t\\r");$/;"	v
iPort	src/vendor/phptars/tars-server/tests/testConf.php	/^        $iPort = '';$/;"	v
iPort	src/vendor/phptars/tars-utils/src/Utils.php	/^                $iPort = trim($part, " p\\t\\r");$/;"	v
iPort	src/vendor/phptars/tars-utils/src/Utils.php	/^        $iPort = '';$/;"	v
iPropertyVer	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $iPropertyVer = 1$/;"	v
iPropertyVer	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgHead.php	/^    public $iPropertyVer = 1;$/;"	v
iRequestId	src/vendor/phptars/tars-report/src/ServerF.php	/^            $iRequestId = 1;$/;"	v
iRequestId	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^            $iRequestId = 1;$/;"	v
iRequestId	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $iRequestId = 1;$/;"	v
iRequestId	src/vendor/phptars/tars-server/src/core/Server.php	/^        $iRequestId = $unpackResult['iRequestId'];$/;"	v
iRequestId	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $iRequestId = $unpackResult['iRequestId']; \/\/ 使用协程的id$/;"	v
iRequestId	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $iRequestId = $unpackResult['iRequestId']; \/\/ 使用协程的id$/;"	v
iTimeout	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $iTimeout = 0;$/;"	v
iTimeout	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $iTimeout = 0;$/;"	v
iTimeout	src/vendor/phptars/tars-server/tests/testConf.php	/^                $iTimeout = trim($part, " t\\t\\r");$/;"	v
iTimeout	src/vendor/phptars/tars-server/tests/testConf.php	/^        $iTimeout = '';$/;"	v
iTimeout	src/vendor/phptars/tars-utils/src/Utils.php	/^                $iTimeout = trim($part, " t\\t\\r");$/;"	v
iTimeout	src/vendor/phptars/tars-utils/src/Utils.php	/^        $iTimeout = '';$/;"	v
iVersion	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->iVersion = $iVersion;$/;"	v
iVersion	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $iVersion = 3;$/;"	v
iVersion	src/vendor/phptars/tars-client/src/ResponsePacket.php	/^    public $iVersion;$/;"	v
iVersion	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->iVersion = $iVersion;$/;"	v
iVersion	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $iVersion = 3;$/;"	v
iVersion	src/vendor/phptars/tars-monitor/src/client/ResponsePacket.php	/^    public $iVersion;$/;"	v
iVersion	src/vendor/phptars/tars-monitor/src/client/ResponsePacketMonitor.php	/^    public $iVersion;$/;"	v
iVersion	src/vendor/phptars/tars-registry/src/client/ResponsePacketRegistry.php	/^    public $iVersion;$/;"	v
iVersion	src/vendor/phptars/tars-report/src/ServerF.php	/^            $iVersion = 3;$/;"	v
iVersion	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^            $iVersion = 3;$/;"	v
iVersion	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $iVersion = 3;$/;"	v
iVersion	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $iVersion = $unpackResult['iVersion'];$/;"	v
iVersion	src/vendor/phptars/tars-server/src/core/Server.php	/^        $iVersion = $unpackResult['iVersion'];$/;"	v
iVersion	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $iVersion = $unpackResult['iVersion'];$/;"	v
iVersion	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $iVersion = $unpackResult['iVersion'];$/;"	v
iVersion	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^    public function packBuffer($type, $argv, $tag, $name, $iVersion = 3)$/;"	v
iVersion	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^\/\/        $iVersion = $decodeRet['iVersion'];$/;"	v
id	src/vendor/catfan/medoo/src/Medoo.php	/^	public function id()$/;"	f
id	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $id = $this->insert($tableName, $insertData);$/;"	v
id	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                $id = $value->save();$/;"	v
id	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $id = $this->db->insert ($this->dbTable, $sqlData);$/;"	v
id	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/LotofTags.php	/^    public $id;$/;"	v
id	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/OutStruct.php	/^    public $id;$/;"	v
id	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^    public $id;$/;"	v
id	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $id; $/;"	v
id	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/OutStruct.php	/^	public $id; $/;"	v
id	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^	public $id; $/;"	v
id	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $id; $/;"	v
id	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/OutStruct.php	/^	public $id; $/;"	v
id	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^	public $id; $/;"	v
ident	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^        $this->ident = $ident;$/;"	v
ident	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^    protected $ident;$/;"	v
ident	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^        $this->ident = $ident;$/;"	v
ident	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    protected $ident;$/;"	v
identifier	src/vendor/catfan/medoo/src/Medoo.php	/^		$identifier = [$/;"	v
ids	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $ids = array();$/;"	v
ignoreEmptyContextAndExtra	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $this->ignoreEmptyContextAndExtra = $ignore;$/;"	v
ignoreEmptyContextAndExtra	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $this->ignoreEmptyContextAndExtra = $ignoreEmptyContextAndExtra;$/;"	v
ignoreEmptyContextAndExtra	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected $ignoreEmptyContextAndExtra;$/;"	v
ignoreEmptyContextAndExtra	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function ignoreEmptyContextAndExtra($ignore = true)$/;"	f
ignoreErrors	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected function toJson($data, $ignoreErrors = false)$/;"	v
impl	src/vendor/phptars/tars-server/src/core/Event.php	/^        $impl = $request->impl;$/;"	v
impl	src/vendor/phptars/tars-server/src/core/Request.php	/^    public $impl;$/;"	v
impl	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected static $impl;$/;"	v
importFile	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^		$importFile = str_replace("\\\\", "\\\\\\\\", $importFile);  $/;"	v
importSettings	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^	public function loadData($importTable, $importFile, $importSettings = null)$/;"	v
importSettings	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^	public function loadXml($importTable, $importFile, $importSettings = null)$/;"	v
in	src/vendor/composer/ClassLoader.php	/^ * In this example, if you try to use a class in the Symfony\\Component$/;"	c
in	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^     * be used in the anonymous function in `setUp` because PHP 5.3$/;"	f
in2	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $in2 = TUPAPIWrapper::getInt32('in2', 3, $sBuffer, $this->_iVersion);$/;"	v
in2	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$in2 = TUPAPIWrapper::getInt32("in2",3,$sBuffer,$this->_iVersion);$/;"	v
in2	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	 * @param int $in2 =out=$/;"	v
inIdentifier	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function inIdentifier($char)$/;"	f
inParams	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $inParams = $paramInfo['inParams'];$/;"	v
inParams	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $inParams = [];$/;"	v
inParams	src/vendor/phptars/tars2php/src/tars2php.php	/^        $inParams = $result['in'];$/;"	v
inParams	src/vendor/phptars/tars2php/src/tars2php.php	/^        $inParams = [];$/;"	v
inactiveEp	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $inactiveEp = TUPAPIWrapperRegistry::getVector('inactiveEp', 3, new \\TARS_Vector(new EndpointF()), $sBuffer, $this->_iVersion);$/;"	v
inactiveEp	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $inactiveEp = TUPAPIWrapperRegistry::getVector('inactiveEp', 4, new \\TARS_Vector(new EndpointF()), $sBuffer, $this->_iVersion);$/;"	v
inc	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function inc($num = 1)$/;"	f
includeContextAndExtra	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->includeContextAndExtra = $includeContextAndExtra;$/;"	v
includeContextAndExtra	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $includeContextAndExtra;$/;"	v
includeFile	src/vendor/composer/ClassLoader.php	/^function includeFile($file)$/;"	f
includeFile	src/vendor/phptars/tars2php/src/tars2php.php	/^                $includeFile = trim($tokens[1], "\\" \\r\\n");$/;"	v
includeFiles	src/vendor/composer/autoload_real.php	/^            $includeFiles = Composer\\Autoload\\ComposerStaticInit574af4278003c7859f368489409dc322::$files;$/;"	v
includeFiles	src/vendor/composer/autoload_real.php	/^            $includeFiles = require __DIR__ . '\/autoload_files.php';$/;"	v
includeFlag	src/vendor/phptars/tars2php/src/tars2php.php	/^            $includeFlag = strpos($line, '#include');$/;"	v
includeParse	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function includeParse($includeFile, &$preEnums, &$preStructs, $uniqueName, $moduleName, $namespaceName, $servantName,$/;"	f
includeParser	src/vendor/phptars/tars2php/src/tars2php.php	/^                $includeParser = new IncludeParser();$/;"	v
includeScan	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function includeScan($includeFile, &$preEnums, &$preStructs,$/;"	f
includeStacktraces	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $this->includeStacktraces = $include;$/;"	v
includeStacktraces	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected $includeStacktraces = false;$/;"	v
includeStacktraces	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function includeStacktraces($include = true)$/;"	f
includeStacktraces	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $this->includeStacktraces = $include;$/;"	v
includeStacktraces	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected $includeStacktraces;$/;"	v
includeStacktraces	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function includeStacktraces($include = true)$/;"	f
incr	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $incr = $matches[1];$/;"	v
incr	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $incr = '+';$/;"	v
incrField	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    public function incrField($key, $field, $incrby = 1)$/;"	f
incrField	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^    public function incrField($key, $field, $incrby = 1)$/;"	f
incrField	src/vendor/phptars/tars-monitor/src/contract/StoreCacheInterface.php	/^    public function incrField($key, $field, $incrby = 1);$/;"	f
incrby	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^        $incrby = 0 - $decrby;$/;"	v
incrby	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    public function incrField($key, $field, $incrby = 1)$/;"	v
incrby	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^    public function incrField($key, $field, $incrby = 1)$/;"	v
incrby	src/vendor/phptars/tars-monitor/src/contract/StoreCacheInterface.php	/^    public function incrField($key, $field, $incrby = 1);$/;"	v
index	src/vendor/catfan/medoo/src/Medoo.php	/^								foreach ($value as $index => $item)$/;"	v
index	src/vendor/catfan/medoo/src/Medoo.php	/^							foreach ($value as $index => $item)$/;"	v
index	src/vendor/catfan/medoo/src/Medoo.php	/^						foreach ($value as $index => $item)$/;"	v
index	src/vendor/catfan/medoo/src/Medoo.php	/^		$index = 0;$/;"	v
index	src/vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^        $this->index = $index;$/;"	v
index	src/vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    protected $index;$/;"	v
index	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^            $index = array_search($logger, self::$loggers, true);$/;"	v
index	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^        foreach ($loggersToCheck as $index => $loggerToCheck) {$/;"	v
index	src/vendor/phptars/tars-client/src/Communicator.php	/^        $index = rand(0, $count);$/;"	v
index	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^            $index = rand(0, $count);$/;"	v
index	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $index = rand(0, $count);$/;"	v
index	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $index = 0;$/;"	v
index	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $index = 0;$/;"	v
index	src/vendor/phptars/tars2php/src/tars2php.php	/^        $index = 0;$/;"	v
info	src/vendor/catfan/medoo/src/Medoo.php	/^	public function info()$/;"	f
info	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function info($message, array $context = array())$/;"	f
info	src/vendor/phptars/tars-server/tests/testConf.php	/^            $info = self::getEndpointInfo($subPart);$/;"	v
info	src/vendor/phptars/tars-utils/src/Utils.php	/^            $info = self::getEndpointInfo($subPart);$/;"	v
info	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function info($message, array $context = array())$/;"	f
info	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function info($message, array $context = array());$/;"	f
info	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function info($message, array $context = array())$/;"	f
infoLoggerRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $infoLoggerRecord = $this->getRecord(Logger::INFO);$/;"	v
infos	src/vendor/phptars/tars-server/tests/testConf.php	/^        $infos = [];$/;"	v
infos	src/vendor/phptars/tars-utils/src/Utils.php	/^        $infos = [];$/;"	v
init	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function init($sFilePath)$/;"	f
init	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function init($sFilePath)$/;"	f
init	src/vendor/phptars/tars-server/tests/ClientConf.php	/^    public static function init($clientConf)$/;"	f
init	src/vendor/phptars/tars-utils/src/Conf.php	/^    public static function init($tarsConf)$/;"	f
initConnector	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function initConnector(Connector $connector = null)$/;"	f
initConnectorMock	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function initConnectorMock()$/;"	f
initDebugDispatcherMock	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function initDebugDispatcherMock(Connector $connector)$/;"	f
initDir	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function initDir()$/;"	f
initErrorDispatcherMock	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function initErrorDispatcherMock(Connector $connector)$/;"	f
initLogger	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function initLogger($handlerOptions = array(), $level = Logger::DEBUG)$/;"	f
initOptions	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function initOptions(array $options)$/;"	f
initStoreCache	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    public static function initStoreCache(StoreCacheInterface $storeCache)$/;"	f
initialized	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected static $initialized = false;$/;"	v
initialized	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^            $this->initialized = true;$/;"	v
initialized	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    protected $initialized = false;$/;"	v
initialized	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected static $initialized = false;$/;"	v
initialized	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected static $initialized = false;$/;"	v
initialized	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^            $this->initialized = true;$/;"	v
initialized	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    protected $initialized = false;$/;"	v
innerConjunct	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function innerConjunct($data, $map, $conjunctor, $outer_conjunctor)$/;"	f
input	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $input = array($/;"	v
inputDir	src/vendor/phptars/tars2php/src/tars2php.php	/^        $inputDir = substr($this->fromFile, 0, $pos);$/;"	v
inputDir	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->inputDir = $inputDir;$/;"	v
ins	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $ins = new $className(...$args);$/;"	v
ins	src/vendor/phptars/tars-server/tests/test.php	/^         $ins = new $className(...$args);$/;"	v
insert	src/vendor/catfan/medoo/src/Medoo.php	/^	public function insert($table, $datas)$/;"	f
insert	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function insert($tableName, $insertData)$/;"	f
insert	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public function insert () {$/;"	f
insertData	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $insertData = array_combine($dataKeys, $insertData);$/;"	v
insertMulti	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function insertMulti($tableName, array $multiInsertData, array $dataKeys = null)$/;"	f
inst	src/vendor/phptars/tars-monitor/tests/propertyFDemo.php	/^$inst = \\Tars\\monitor\\PropertyF::getInstance();$/;"	v
inst	src/vendor/phptars/tars-monitor/tests/statFDemo.php	/^$inst = \\Tars\\monitor\\StatF::getInstance();$/;"	v
inst	src/vendor/phptars/tars-registry/tests/demo.php	/^$inst = \\Tars\\registry\\QueryF::getInstance();$/;"	v
inst	src/vendor/phptars/tars-server/tests/test.php	/^$inst = createInstance($str2);$/;"	v
instance	src/libs/DbMysqli.php	/^        $instance = (new static);$/;"	v
instance	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $instance = $this;$/;"	v
intVal	src/vendor/phptars/tars-client/tests/testServant.php	/^$intVal = $servant->sayHelloWorld($name, $greetings);$/;"	v
interface	src/vendor/phptars/tars-server/src/core/Server.php	/^            $interface = new \\ReflectionClass($this->servicesInfo['home-api']);$/;"	v
interfaceClass	src/vendor/phptars/tars2php/src/tars2php.php	/^        $interfaceClass = $this->getFileHeader('').$this->extraUse.'class '.$this->interfaceName.' {'.$this->returnSymbol;$/;"	v
interfaceClass	src/vendor/phptars/tars2php/src/tars2php.php	/^        $interfaceClass = $this->getFileHeader('').$this->extraUse.'interface '.$this->interfaceName.' {'.$this->returnSymbol;$/;"	v
interfaceFlag	src/vendor/phptars/tars2php/src/tars2php.php	/^            $interfaceFlag = strpos(strtolower($line), 'interface');$/;"	v
interfaceName	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^    public $interfaceName;$/;"	v
interfaceName	src/vendor/phptars/tars-monitor/src/classes/StatSampleMsg.php	/^    public $interfaceName;$/;"	v
interfaceName	src/vendor/phptars/tars2php/src/tars2php.php	/^                $interfaceName = $name.'Servant';$/;"	v
interfaceName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->interfaceName = $interfaceName;$/;"	v
interfaceName	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $interfaceName;$/;"	v
interfaceParser	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $interfaceParser = new InterfaceParser($fp, $line, $this->namespaceName, $this->moduleName,$/;"	v
interfaceParser	src/vendor/phptars/tars2php/src/tars2php.php	/^                $interfaceParser = new InterfaceParser($fp, $line, $namespaceName, $moduleName,$/;"	v
interfaces	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $interfaces = $interfaceParser->parse();$/;"	v
interfaces	src/vendor/phptars/tars2php/src/tars2php.php	/^                $interfaces = $interfaceParser->parse();$/;"	v
interval	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function interval($diff, $func = "NOW()")$/;"	f
intervalCount	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgBody.php	/^        $this->intervalCount = new \\TARS_Map(\\TARS::INT32, \\TARS::INT32);$/;"	v
intervalCount	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgBody.php	/^    public $intervalCount;$/;"	v
invalidArgumentProvider	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function invalidArgumentProvider()$/;"	f
invoke	src/vendor/phptars/tars-client/src/Communicator.php	/^    public function invoke(RequestPacket $requestPacket, $timeout, $sIp = '', $iPort = 0)$/;"	f
invoke	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    public function invoke(RequestPacketMonitor $requestPacket, $timeout)$/;"	f
invoke	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    public function invoke(RequestPacketRegistry $requestPacket, $timeout)$/;"	f
ip	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^        $this->ip = $ip;$/;"	v
ip	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    protected $ip;$/;"	v
ip	src/vendor/phptars/tars-client/src/Communicator.php	/^        $ip = empty($sIp) ? $this->_routeInfo[$index]['sIp'] : $sIp;$/;"	v
ip	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgHead.php	/^    public $ip;$/;"	v
ipv6	src/vendor/phptars/tars-server/src/core/Response.php	/^    public function sendto($ip, $port, $data, $ipv6 = false)$/;"	v
is	src/vendor/composer/ClassLoader.php	/^     * Finds the path to the file where the class is defined.$/;"	c
is	src/vendor/composer/ClassLoader.php	/^ * This class is loosely based on the Symfony UniversalClassLoader.$/;"	c
is	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^     * If the `mb_strlen()` function is available, it will use that, as HipChat$/;"	f
isAppendingNewlines	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function isAppendingNewlines()$/;"	f
isArgument	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionCallsConnectorMethod($option, $method, $value, $isArgument = true)$/;"	v
isBasicType	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^    private function isBasicType($type)$/;"	f
isBasicType	src/vendor/phptars/tars-server/tests/test.php	/^ function isBasicType($type)$/;"	f
isBasicType	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function isBasicType($word)$/;"	f
isClassMapAuthoritative	src/vendor/composer/ClassLoader.php	/^    public function isClassMapAuthoritative()$/;"	f
isConnected	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function isConnected()$/;"	f
isConnected	src/vendor/phptars/tars-client/src/Communicator.php	/^                        $isConnected = false;$/;"	v
isConnected	src/vendor/phptars/tars-client/src/Communicator.php	/^                    $isConnected = false;$/;"	v
isConnected	src/vendor/phptars/tars-client/src/Communicator.php	/^        $isConnected = true;$/;"	v
isConnected	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                        $isConnected = false;$/;"	v
isConnected	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                    $isConnected = false;$/;"	v
isConnected	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $isConnected = true;$/;"	v
isDuplicate	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    private function isDuplicate(array $record)$/;"	f
isEnableSet	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function isEnableSet()$/;"	f
isEnableSet	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function isEnableSet()$/;"	f
isEnum	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function isEnum($word)$/;"	f
isEnum	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function isEnum($word, $preEnums)$/;"	f
isHandlerActivated	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ActivationStrategyInterface.php	/^    public function isHandlerActivated(array $record);$/;"	f
isHandlerActivated	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^    public function isHandlerActivated(array $record)$/;"	f
isHandlerActivated	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ErrorLevelActivationStrategy.php	/^    public function isHandlerActivated(array $record)$/;"	f
isHandling	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function isHandling(array $record)$/;"	f
isHandling	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function isHandling(array $record)$/;"	f
isHandling	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function isHandling(array $record)$/;"	f
isHandling	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    public function isHandling(array $record)$/;"	f
isHandling	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^    public function isHandling(array $record);$/;"	f
isHandling	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function isHandling(array $record)$/;"	f
isHandling	src/vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^    public function isHandling(array $record)$/;"	f
isHandling	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function isHandling($level)$/;"	f
isInsert	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $isInsert = preg_match('\/^[INSERT|REPLACE]\/', $this->_query);$/;"	v
isJson	src/service/validate/Validate.php	/^    public function isJson($data)$/;"	f
isLegacy	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    private function isLegacy()$/;"	f
isMap	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function isMap($word)$/;"	f
isNew	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $this->isNew = false;$/;"	v
isNew	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public $isNew = true;$/;"	v
isNewRelicEnabled	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function isNewRelicEnabled()$/;"	f
isNewRelicEnabled	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    protected function isNewRelicEnabled()$/;"	f
isPersistent	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function isPersistent()$/;"	f
isRaw	src/vendor/catfan/medoo/src/Medoo.php	/^			$isRaw = $this->isRaw($value);$/;"	v
isRaw	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function isRaw($object)$/;"	f
isRequireType	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function isRequireType($word)$/;"	f
isReturn	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function isReturn($char)$/;"	f
isSpace	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function isSpace($char)$/;"	f
isStruct	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function isStruct($word)$/;"	f
isStruct	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function isStruct($word, $preStructs)$/;"	f
isSubQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $this->isSubQuery = true;$/;"	v
isSubQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $isSubQuery = false;$/;"	v
isSubQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $isSubQuery = false;$/;"	v
isTag	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function isTag($word)$/;"	f
isTraceClassOrSkippedFunction	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    private function isTraceClassOrSkippedFunction(array $trace, $index)$/;"	f
isUsingLevelsInTag	src/vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^    public function isUsingLevelsInTag()$/;"	f
isV3	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^        $isV3 = defined('Aws\\Sdk::VERSION') && version_compare(\\Aws\\Sdk::VERSION, '3.0', '>=');$/;"	v
isVector	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function isVector($word)$/;"	f
is_port	src/vendor/catfan/medoo/src/Medoo.php	/^			$is_port = isset($port);$/;"	v
is_single	src/vendor/catfan/medoo/src/Medoo.php	/^		$is_single = (is_string($column) && $column !== '*');$/;"	v
istcp	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public $istcp;$/;"	v
item	src/vendor/catfan/medoo/src/Medoo.php	/^								$item = '%' . $item . '%';$/;"	v
item	src/vendor/catfan/medoo/src/Medoo.php	/^							$item = strval($item);$/;"	v
item	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                        $item = new $modelName ($data[$table]);$/;"	v
item	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                $item = new static ($r);$/;"	v
item	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $item = new static ($results);$/;"	v
item	src/vendor/phptars/tars-deploy/src/Deploy.php	/^            if ($item == '.' || $item == '..') {$/;"	v
items	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $items = $matches[2];$/;"	v
items	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $items = '';$/;"	v
j	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                    $j = $i - $outStartIndex;$/;"	v
jceProto	src/vendor/phptars/tars-deploy/src/Deploy.php	/^        $jceProto = require_once $jceProtoFile;$/;"	v
jceProtoFile	src/vendor/phptars/tars-deploy/src/Deploy.php	/^        $jceProtoFile = $tarsPHPRoot.DIRECTORY_SEPARATOR.'tars'.DIRECTORY_SEPARATOR.'tars.proto.php';$/;"	v
join	src/vendor/catfan/medoo/src/Medoo.php	/^	private function aggregate($type, $table, $join = null, $column = null, $where = null)$/;"	v
join	src/vendor/catfan/medoo/src/Medoo.php	/^	public function count($table, $join = null, $column = null, $where = null)$/;"	v
join	src/vendor/catfan/medoo/src/Medoo.php	/^	public function get($table, $join = null, $columns = null, $where = null)$/;"	v
join	src/vendor/catfan/medoo/src/Medoo.php	/^	public function rand($table, $join = null, $columns = null, $where = null)$/;"	v
join	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function join($joinTable, $joinCondition, $joinType = '')$/;"	f
join	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function join ($objectName, $key = null, $joinType = 'LEFT', $primaryKey = null) {$/;"	f
joinObj	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $joinObj = new $objectName;$/;"	v
joinOrWhere	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function joinOrWhere($whereJoin, $whereProp, $whereValue = 'DBNULL', $operator = '=', $cond = 'AND')$/;"	f
joinStr	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $joinStr = $joinTable;$/;"	v
joinStr	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $joinStr = $this->_buildPair ("", $joinTable);$/;"	v
joinStr	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $joinStr = $this->_buildPair("", $joinTable);$/;"	v
joinStr	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $joinStr = MysqliDb::$prefix . "{$key} = " . $primaryKey;$/;"	v
joinStr	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $joinStr = MysqliDb::$prefix . $this->dbTable . ".{$key} = " . $primaryKey;$/;"	v
joinTable	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $joinTable = self::$prefix . $joinTable;$/;"	v
joinType	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $joinType = strtoupper(trim($joinType));$/;"	v
joinType	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function join($joinTable, $joinCondition, $joinType = '')$/;"	v
joinWhere	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function joinWhere($whereJoin, $whereProp, $whereValue = 'DBNULL', $operator = '=', $cond = 'AND')$/;"	f
join_array	src/vendor/catfan/medoo/src/Medoo.php	/^			$join_array = [$/;"	v
join_key	src/vendor/catfan/medoo/src/Medoo.php	/^		$join_key = is_array($join) ? array_keys($join) : null;$/;"	v
joins	src/vendor/catfan/medoo/src/Medoo.php	/^							$joins = [];$/;"	v
json	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^            $json = $this->handleJsonError(json_last_error(), $data);$/;"	v
json	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^        $json = $this->jsonEncode($data);$/;"	v
json	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^        $json = $this->toJson(array($/;"	v
json	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^            $json = @json_encode(self::$json);$/;"	v
json	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^        $json = @json_encode(self::$json);$/;"	v
json	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected static $json = array($/;"	v
jsonBuilder	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function jsonBuilder()$/;"	f
jsonEncode	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    private function jsonEncode($data)$/;"	f
jsonPrettyPrintFlag	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $jsonPrettyPrintFlag = defined('JSON_PRETTY_PRINT') ? JSON_PRETTY_PRINT : 128;$/;"	v
jsonPrettyPrintFlag	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $this->jsonPrettyPrintFlag = defined('JSON_PRETTY_PRINT') ? JSON_PRETTY_PRINT : 128;$/;"	v
jsonPrettyPrintFlag	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    private $jsonPrettyPrintFlag;$/;"	v
k	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                        foreach ($val as $k => $v) {$/;"	v
k	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            foreach ($data as $k => $v)$/;"	v
keepAlive	src/vendor/phptars/tars-report/src/ServerF.php	/^    public function keepAlive(ServerInfo $serverInfo)$/;"	f
keepAlive	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^    public function keepAlive(ServerInfo $serverInfo)$/;"	f
keepAlive	src/vendor/phptars/tars-report/src/ServerFSync.php	/^    public function keepAlive(ServerInfo $serverInfo)$/;"	f
keepAliveTime	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->keepAliveTime = $keepAliveTime;$/;"	v
keepAliveTime	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->keepAliveTime = 120;$/;"	v
keepAliveTime	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $keepAliveTime;$/;"	v
keepAliveTime	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->keepAliveTime = $config['tars']['application']['client']['keepAliveTime'];$/;"	v
keepAliveTime	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->keepAliveTime = $keepAliveTime;$/;"	v
keepAliveTime	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->keepAliveTime = 120;$/;"	v
keepAliveTime	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $keepAliveTime;$/;"	v
keepaliveinit	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function keepaliveinit()$/;"	f
key	src/model/mysql/content/ArticleBasic.php	/^        foreach($data as $key=>$item) {$/;"	v
key	src/model/mysql/content/ArticleRelationship.php	/^        foreach($save as $key=>$item)$/;"	v
key	src/vendor/catfan/medoo/src/Medoo.php	/^							foreach ($relation as $key => $value)$/;"	v
key	src/vendor/catfan/medoo/src/Medoo.php	/^			foreach ($data as $key => $value)$/;"	v
key	src/vendor/catfan/medoo/src/Medoo.php	/^			foreach ($map as $key => $value)$/;"	v
key	src/vendor/catfan/medoo/src/Medoo.php	/^			foreach ($raw_map as $key => $value)$/;"	v
key	src/vendor/catfan/medoo/src/Medoo.php	/^		foreach ($attr as $key => $value)$/;"	v
key	src/vendor/catfan/medoo/src/Medoo.php	/^		foreach ($columns as $key => $value)$/;"	v
key	src/vendor/catfan/medoo/src/Medoo.php	/^		foreach ($data as $key => $value)$/;"	v
key	src/vendor/catfan/medoo/src/Medoo.php	/^		foreach ($map as $key => $value)$/;"	v
key	src/vendor/catfan/medoo/src/Medoo.php	/^		foreach ($output as $key => $value)$/;"	v
key	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^			foreach($table as $key => $value) {$/;"	v
key	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                foreach ($row as $key => $val) {$/;"	v
key	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $key = key($value);$/;"	v
key	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            foreach ($arr as $key => $value) {$/;"	v
key	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            foreach ($customFieldsOrRegExp as $key => $value) {$/;"	v
key	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            foreach ($host as $key => $val) {$/;"	v
key	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            foreach ($this->_updateColumns as $key => $val) {$/;"	v
key	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $key = key($res[0]);$/;"	v
key	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        foreach ($this->_groupBy as $key => $value) {$/;"	v
key	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                    $key = $this->relations[$name][2];$/;"	v
key	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                    $key = isset ($this->relations[$name][2]) ? $this->relations[$name][2] : $name;$/;"	v
key	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                $key = $opts[2];$/;"	v
key	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                $this->errors[] = Array ($this->dbTable . "." . $key => "$type validation failed");$/;"	v
key	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                $this->errors[] = Array ($this->dbTable . "." . $key => "is required");$/;"	v
key	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $key = $objectName . "id";$/;"	v
key	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $key = null;$/;"	v
key	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        foreach ($this->data as $key => &$value) {$/;"	v
key	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        foreach ($this->dbFields as $key => $desc) {$/;"	v
key	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function join ($objectName, $key = null, $joinType = 'LEFT', $primaryKey = null) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        foreach ($record['context'] as $key => $val) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        foreach ($record['extra'] as $key => $val) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^            foreach ($record['context'] as $key => $value) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^            foreach ($record['extra'] as $key => $value) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^            foreach ($data as $key => $value) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^            foreach ($record['context'] as $key => $val) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^            foreach ($record['extra'] as $key => $val) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^        foreach ($records as $key => $record) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^            foreach ($data as $key => $value) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^        foreach ($records as $key => $record) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Formatter/ScalarFormatter.php	/^        foreach ($record as $key => $value) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        foreach ($dict as $key => $value) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^            foreach ($record['formatted']['context'] as $key => $parameter) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^            foreach ($record['formatted']['extra'] as $key => $parameter) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        foreach ($this->normalizerFormatter->format($data) as $key => $value) {$/;"	v
key	src/vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php	/^        foreach ($record['context'] as $key => $val) {$/;"	v
key	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        foreach ($messageArray as $key => $value) {$/;"	v
key	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^            foreach ($data as $key => $value) {$/;"	v
key	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            foreach ($m1 as $key => $value) {$/;"	v
key	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            foreach ($mcs as $key => $value) {$/;"	v
key	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        foreach ($msgHeadArr as $key => $msgHead) {$/;"	v
key	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $key = implode('|', $headInfo);$/;"	v
key	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        foreach ($table->getAll() as $key => $value) {$/;"	v
key	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^        $key = $this->generateKey($key);$/;"	v
key	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^                $key = $this->_swooleTableKey->get($hash);$/;"	v
key	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^            foreach ($data as $key => $value) {$/;"	v
key	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^            foreach ($data as $key => $value) {$/;"	v
key	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^            foreach ($data as $key => $value) {$/;"	v
key	src/vendor/phptars/tars-server/src/core/Server.php	/^                                foreach ($cpusInfo as $key => $cpuInfo) {$/;"	v
key	src/vendor/phptars/tars-server/src/core/Server.php	/^                            foreach ($adapter as $key => $value) {$/;"	v
key	src/vendor/phptars/tars-server/src/core/Server.php	/^                        foreach ($this->tarsConfig['tars']['application']['client'] as $key => $value) {$/;"	v
key	src/vendor/phptars/tars-server/src/core/Server.php	/^                        foreach ($this->tarsConfig['tars']['application']['server'] as $key => $value) {$/;"	v
key	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            foreach ($data as $key => $value) {$/;"	v
key	src/vendor/phptars/tars2php/src/tars2php.php	/^        foreach (Utils::$wholeTypeMap as $key => $value) {$/;"	v
key	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			foreach($m1 as $key => $value) {$/;"	v
key	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			foreach($mcs as $key => $value) {$/;"	v
keyHashArray	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^            $keyHashArray = explode($this->redisStoreCachePrefix, $key);$/;"	v
keyname	src/vendor/catfan/medoo/src/Medoo.php	/^							$keyname = strtolower(preg_replace(['\/([a-z\\d])([A-Z])\/', '\/([^_])([A-Z][a-z])\/'], '$1_$2', $value));$/;"	v
keys	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $keys = explode('.', $field);$/;"	v
keys	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^        $keys = $this->_redis->keys($this->redisStoreCachePrefix . "*");$/;"	v
label	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $label = $record['channel'] .': '. $record['message'];$/;"	v
label	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $label = $record['channel'];$/;"	v
labels	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        static $labels = array();$/;"	v
largeArray	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $largeArray = range(1, 1000);$/;"	v
largeArray	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $largeArray = range(1, 2000);$/;"	v
largeArray	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $largeArray = range(1, 1000);$/;"	v
largeArray	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $largeArray = range(1, 2000);$/;"	v
last	src/vendor/catfan/medoo/src/Medoo.php	/^	public function last()$/;"	f
lastData	src/vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^        $this->lastData = $data;$/;"	v
lastData	src/vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^    public $lastData;$/;"	v
lastError	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $lastError = error_get_last();$/;"	v
lastError	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $this->lastError = null;$/;"	v
lastError	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public $lastError;$/;"	v
lastFatalTrace	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^            $this->lastFatalTrace = $trace;$/;"	v
lastFatalTrace	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $lastFatalTrace;$/;"	v
lastFormattedMessage	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $lastFormattedMessage = array_pop($formattedMessages);$/;"	v
lastInsertId	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function onDuplicate($updateColumns, $lastInsertId = null)$/;"	v
lastKey	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $lastKey = end($keys);$/;"	v
lastMessage	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $lastMessage = array_pop($messages);$/;"	v
lastMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfMockMessagePublisher.php	/^        $this->lastMessage = $message;$/;"	v
lastMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfMockMessagePublisher.php	/^    public $lastMessage = null;$/;"	v
lastPos	src/vendor/composer/ClassLoader.php	/^            while (false !== $lastPos = strrpos($subPath, '\\\\')) {$/;"	v
lastSentBytes	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^            $this->lastSentBytes = $sent;$/;"	v
lastSentBytes	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->lastSentBytes = $sent;$/;"	v
lastSentBytes	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $lastSentBytes = null;$/;"	v
lastStack	src/vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^        $this->lastStack = $stack;$/;"	v
lastStack	src/vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^    public $lastStack;$/;"	v
lastWritingAt	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^            $this->lastWritingAt = time();$/;"	v
lastWritingAt	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $lastWritingAt;$/;"	v
left	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $left = substr($next, 0, $pos);$/;"	v
left	src/vendor/phptars/tars-server/tests/test.php	/^             $left = substr($next, 0, $pos);$/;"	v
len	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^            $len = strlen($this->contextPrefix . $key . $val);$/;"	v
len	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^            $len = strlen($this->extraPrefix . $key . $val);$/;"	v
len	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        $len = 200 + strlen((string) $record['message']) + strlen($this->systemName);$/;"	v
len	src/vendor/phptars/tars-client/src/Communicator.php	/^        $len = strlen($requestBuf);$/;"	v
len	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $len = strlen($requestBuf);$/;"	v
length	src/vendor/composer/ClassLoader.php	/^            $length = strlen($prefix);$/;"	v
length	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $length = strlen($data);$/;"	v
length	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $length = 200;$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^            $level = isset($this->errorLevelMap[$code]) ? $this->errorLevelMap[$code] : LogLevel::CRITICAL;$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^        $this->level = Logger::toMonologLevel($level);$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    protected $level = Logger::DEBUG;$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^    public function __construct($facility = LOG_USER, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    public function __construct($url, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^    public function __construct(CouchDBClient $client, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    public function __construct(DynamoDbClient $client, $table, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    public function __construct($messageType = self::OPERATING_SYSTEM, $level = Logger::DEBUG, $bubble = true, $expandNewlines = false)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $level = $this->passthruLevel;$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    public function __construct($token, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    public function __construct($apiToken, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^    public function __construct($publisher, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $level = $record['level'];$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            case $level == Logger::DEBUG:$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $level = 0;$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^    public function __construct($eventName, $secretKey, $level = Logger::ERROR, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $level = $this->level;$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    public function __construct($token, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^    public function __construct($apiKey, $message, $level = Logger::ERROR, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^    public function __construct($mongo, $database, $collection, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function __construct($to, $subject, $from, $level = Logger::ERROR, $bubble = true, $maxColumnWidth = 70)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $level = Logger::ERROR,$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/PsrHandler.php	/^    public function __construct(LoggerInterface $logger, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $level = $this->level;$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    public function __construct(Raven_Client $ravenClient, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    public function __construct($redis, $key, $level = Logger::DEBUG, $bubble = true, $capSize = false)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    public function __construct(RollbarNotifier $rollbarNotifier, $level = Logger::ERROR, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^    public function __construct($slackTeam, $token, $channel, $level = Logger::CRITICAL, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function __construct($connectionString, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    public function __construct($stream, $level = Logger::DEBUG, $bubble = true, $filePermission = null, $useLocking = false)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    public function __construct(\\Swift_Mailer $mailer, $message, $level = Logger::ERROR, $bubble = true)$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^            $level = constant('Monolog\\Logger::' . strtoupper($matches[2]));$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^        $level = static::toMonologLevel($level);$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^        $this->level = Logger::toMonologLevel($level);$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^    private $level;$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^        $this->level = Logger::toMonologLevel($level);$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    private $level;$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^        $this->level = Logger::toMonologLevel($level);$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^    private $level;$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^        $level = isset($this->signalLevelMap[$signo]) ? $this->signalLevelMap[$signo] : LogLevel::CRITICAL;$/;"	v
level	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^    public function registerSignalHandler($signo, $level = LogLevel::CRITICAL, $callPrevious = true, $restartSyscalls = true, $async = true)$/;"	v
level	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function initLogger($handlerOptions = array(), $level = Logger::DEBUG)$/;"	v
level	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $level = Logger::ERROR;$/;"	v
levelMap	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function registerErrorHandler(array $levelMap = array(), $callPrevious = true, $errorTypes = -1, $handleOnlyReportedErrors = true)$/;"	v
levelMap	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    protected $levelMap = array($/;"	v
levelMap	src/vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    protected $levelMap = array($/;"	v
levelMap	src/vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^        $levelMap = $zendMonitor->getLevelMap();$/;"	v
levelName	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $levelName = $record['level_name'];$/;"	v
levelName	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $levelName = null;$/;"	v
levelName	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^        $levelName = static::getLevelName($level);$/;"	v
levelName	src/vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        foreach ($monologLogger->getLevels() as $levelName => $level) {$/;"	v
levelName	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $levelName = Logger::getLevelName($level);$/;"	v
levelTag	src/vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^        $this->levelTag = (bool) $levelTag;$/;"	v
levelTag	src/vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^    protected $levelTag = false;$/;"	v
levels	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected static $levels = array($/;"	v
levels	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $levels = array(Logger::CRITICAL, Logger::ALERT, Logger::EMERGENCY);$/;"	v
levels	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $levels = array(Logger::INFO, Logger::ERROR);$/;"	v
levels	src/vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        $levels = array();$/;"	v
like_clauses	src/vendor/catfan/medoo/src/Medoo.php	/^						$like_clauses = [];$/;"	v
limit	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $limit = preg_match('\/limit\\s+1;?$\/i', $query);$/;"	v
limit	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        if (isset($res[0][$key]) && $limit == true) {$/;"	v
limit	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function getValue($tableName, $column, $limit = 1)$/;"	v
line	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $line = $record['extra']['line'];$/;"	v
line	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $line = __LINE__;$/;"	v
line	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $line = trim($line);$/;"	v
line	src/vendor/phptars/tars-server/tests/testConf.php	/^            $line = trim($line, " \\r\\0\\x0B\\t\\n");$/;"	v
line	src/vendor/phptars/tars-utils/src/Utils.php	/^            $line = trim($line, " \\r\\0\\x0B\\t\\n");$/;"	v
line	src/vendor/phptars/tars2php/src/tars2php.php	/^        $line = '';$/;"	v
line	src/vendor/phptars/tars2php/src/tars2php.php	/^        $line = trim($line);$/;"	v
line	src/vendor/phptars/tars2php/src/tars2php.php	/^        if (!$line || $line[0] === '\/' || $line[0] === '*' || $line === '{') {$/;"	v
lineString	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $lineString = $this->copyAnnotation($char, $lineString);$/;"	v
lineString	src/vendor/phptars/tars2php/src/tars2php.php	/^        $lineString = '';$/;"	v
lines	src/vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^            $lines = preg_split('{[\\r\\n]+}', (string) $record['formatted']);$/;"	v
lines	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^        $lines = $this->splitMessageIntoLines($record['formatted']);$/;"	v
lines	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $lines = explode('*', $docblock);$/;"	v
lines	src/vendor/phptars/tars-server/tests/testConf.php	/^        $lines = explode($text, "\\r\\n");$/;"	v
lines	src/vendor/phptars/tars-utils/src/Utils.php	/^        $lines = explode("\\n", $text);$/;"	v
list	src/servant/Article/Server/Obj/classes/ArticleList.php	/^	public $list; $/;"	v
list	src/vendor/phptars/tars-client/src/Communicator.php	/^                    $list = unpack('Nlen', substr($data, 0, 4));$/;"	v
list	src/vendor/phptars/tars-client/src/Communicator.php	/^                $list = unpack('Nlen', substr($data, 0, 4));$/;"	v
list	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                    $list = unpack('Nlen', substr($data, 0, 4));$/;"	v
list	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                $list = unpack('Nlen', substr($data, 0, 4));$/;"	v
list	src/vendor/phptars/tars-report/src/ServerFSync.php	/^                        $list = unpack('Nlen', substr($data, 0, 4));$/;"	v
list	src/vendor/phptars/tars-server/src/protocol/HTTPProtocol.php	/^        $list = explode('\/', $uri);$/;"	v
loadClass	src/vendor/composer/ClassLoader.php	/^    public function loadClass($class)$/;"	f
loadClassLoader	src/vendor/composer/autoload_real.php	/^    public static function loadClassLoader($class)$/;"	f
loadConfig	src/vendor/phptars/tars-config/src/ConfigServant.php	/^    public function loadConfig($app, $server, $filename, &$config)$/;"	f
loadConfigByHost	src/vendor/phptars/tars-config/src/ConfigServant.php	/^    public function loadConfigByHost($appServerName, $filename, $host, &$config)$/;"	f
loadConfigByInfo	src/vendor/phptars/tars-config/src/ConfigServant.php	/^    public function loadConfigByInfo(ConfigInfo $configInfo, &$config)$/;"	f
loadData	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^	public function loadData($importTable, $importFile, $importSettings = null)$/;"	f
loadDataLocal	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^		$loadDataLocal = isset($settings["loadDataLocal"]) ? 'LOCAL' : '';$/;"	v
loadTarsConfig	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function loadTarsConfig()$/;"	f
loadXml	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^	public function loadXml($importTable, $importFile, $importSettings = null)$/;"	f
loader	src/vendor/composer/ClassLoader.php	/^ *     $loader = new \\Composer\\Autoload\\ClassLoader();$/;"	v
loader	src/vendor/composer/ClassLoader.php	/^ * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.$/;"	c
loader	src/vendor/composer/autoload_real.php	/^        self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader();$/;"	v
loader	src/vendor/composer/autoload_real.php	/^    private static $loader;$/;"	v
localIP	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $localIP = swoole_get_local_ip();$/;"	v
localRelease	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $localRelease = 'v41.41.41';$/;"	v
localip	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->localip = $config['tars']['application']['server']['localip'];$/;"	v
localip	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->localip = $localip;$/;"	v
localip	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $localip;$/;"	v
localip	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->localip = $config['tars']['application']['server']['localip'];$/;"	v
localip	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->localip = $localip;$/;"	v
localip	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $localip;$/;"	v
locator	src/conf/ENVConf.php	/^    public static $locator = 'tars.tarsregistry.QueryObj@tcp -h 192.168.163.128 -p 17890';$/;"	v
locator	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->locator = $config['tars']['application']['client']['locator'];$/;"	v
locator	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->locator = $locator;$/;"	v
locator	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $locator = null;$/;"	v
locator	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->locator = $config['tars']['application']['client']['locator'];$/;"	v
locator	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->locator = $locator;$/;"	v
locator	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $locator = null;$/;"	v
locator	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $locator = $this->tarsConfig['tars']['application']['client']['locator'];$/;"	v
locator	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $locator = $data['client']['locator'];$/;"	v
locator	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $locator = $this->tarsConfig['tars']['application']['client']['locator'];$/;"	v
locatorName	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^        $locatorName = $result['locatorName'];$/;"	v
locatorName	src/vendor/phptars/tars-server/tests/testConf.php	/^        $locatorName = $parts[0];$/;"	v
locatorName	src/vendor/phptars/tars-utils/src/Utils.php	/^        $locatorName = $parts[0];$/;"	v
lock	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^	public function lock($table)$/;"	f
log	src/vendor/catfan/medoo/src/Medoo.php	/^		$log = end($this->logs);$/;"	v
log	src/vendor/catfan/medoo/src/Medoo.php	/^	public function log()$/;"	f
log	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^            $log = fgets($handle);$/;"	v
log	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^ *    $log = new Logger('application');$/;"	v
log	src/vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^ *   $log = new Logger('application');$/;"	v
log	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^ *   $log = new Logger('application');$/;"	v
log	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^ *   $log = new Logger('application');$/;"	v
log	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function log($level, $message, array $context = array())$/;"	f
log	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $log = __DIR__.'\/Fixtures\/foo-'.date($dateFormat).'.rot';$/;"	v
log	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $log = __DIR__.'\/Fixtures\/foo-'.date('Y-m-d').'.rot';$/;"	v
log	src/vendor/phptars/tars-deploy/src/Deploy.php	/^    public static function log($info)$/;"	f
log	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function log($level, $message, array $context = array());$/;"	f
log	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    abstract public function log($level, $message, array $context = array());$/;"	f
log	src/vendor/psr/log/Psr/Log/NullLogger.php	/^    public function log($level, $message, array $context = array())$/;"	f
log1	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^        $log1 = new Logger('test1');$/;"	v
log2	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^        $log2 = new Logger('test2');$/;"	v
logConf	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^        $this->logConf = $config;$/;"	v
logConf	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    private $logConf;$/;"	v
logFiles	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $logFiles = glob($this->getGlobPattern());$/;"	v
logFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $logFormatter = $this->getMock('Monolog\\\\Formatter\\\\FormatterInterface');$/;"	v
logInfo	src/common/Common.php	/^    public static function logInfo($content)$/;"	f
logLevel	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->logLevel = $config['tars']['application']['server']['loglevel'];$/;"	v
logLevel	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->logLevel = $logLevel;$/;"	v
logLevel	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->logLevel = 'INFO';$/;"	v
logLevel	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $logLevel;$/;"	v
logLevel	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->logLevel = $config['tars']['application']['server']['logLevel'];$/;"	v
logLevel	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->logLevel = $logLevel;$/;"	v
logLevel	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->logLevel = 'INFO';$/;"	v
logLevel	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $logLevel;$/;"	v
logLevelProvider	src/vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^    public function logLevelProvider()$/;"	f
logLevels	src/vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^    private $logLevels = array($/;"	v
logLevels	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    private $logLevels = array($/;"	v
logLevels	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    protected $logLevels = array($/;"	v
logLevels	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^    private $logLevels = array($/;"	v
logLevels	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^    protected $logLevels = array($/;"	v
logLevels	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected $logLevels = array($/;"	v
logMethodProvider	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function logMethodProvider()$/;"	f
logPath	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->logPath = $config['tars']['application']['server']['logpath'];$/;"	v
logPath	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->logPath = $logPath;$/;"	v
logPath	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $logPath;$/;"	v
logPath	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->logPath = $config['tars']['application']['server']['logPath'];$/;"	v
logPath	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->logPath = $logPath;$/;"	v
logPath	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $logPath;$/;"	v
logServant	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^        $this->logServant = new LogServant($config, $servantName);$/;"	v
logServant	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    private $logServant;$/;"	v
logServant	src/vendor/phptars/tars-log/tests/demo.php	/^$logServant = new \\Tars\\log\\LogServant($config);$/;"	v
logToken	src/vendor/monolog/monolog/src/Monolog/Handler/InsightOpsHandler.php	/^        $this->logToken = $token;$/;"	v
logToken	src/vendor/monolog/monolog/src/Monolog/Handler/InsightOpsHandler.php	/^    protected $logToken;$/;"	v
logToken	src/vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^        $this->logToken = $token;$/;"	v
logToken	src/vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^    protected $logToken;$/;"	v
logger	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->logger = $logger;$/;"	v
logger	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $logger;$/;"	v
logger	src/vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^ * $logger = new Monolog\\Logger('fluent.tag');$/;"	v
logger	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^ *      $logger = new \\Monolog\\Logger('all', array(new \\Monolog\\Handler\\PHPConsoleHandler()));$/;"	v
logger	src/vendor/monolog/monolog/src/Monolog/Handler/PsrHandler.php	/^        $this->logger = $logger;$/;"	v
logger	src/vendor/monolog/monolog/src/Monolog/Handler/PsrHandler.php	/^    protected $logger;$/;"	v
logger	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^        $this->logger = $logger;$/;"	v
logger	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^    private $logger;$/;"	v
logger	src/vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^        $logger = new Logger('test', array($handler = new TestHandler));$/;"	v
logger	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^        $logger = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractHandler');$/;"	v
logger	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $logger = $this->initLogger($tagsContextKeys ? array('debugTagsKeysInContext' => $tagsContextKeys) : array());$/;"	v
logger	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $logger = new Logger('app');$/;"	v
logger	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $logger = new Logger('foo');$/;"	v
logger	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $logger = new Logger(__METHOD__);$/;"	v
logger	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $logger = new Logger(__METHOD__, array($handler1, $handler2));$/;"	v
logger	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $logger = new Logger(__METHOD__, array('last' => $handler3, 'second' => $handler2, 'first' => $handler1));$/;"	v
logger	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $logger = new Logger(__METHOD__, array(), array($processor1, $processor2));$/;"	v
logger	src/vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^        $logger = new Logger('foo');$/;"	v
logger	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^            $logger = new Logger('test', array($streamHandler));$/;"	v
logger	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^        $logger = new Logger('test', array($handler = new TestHandler));$/;"	v
logger	src/vendor/phptars/tars-log/src/LogServant.php	/^    public function logger($app, $server, $file, $format, $buffer)$/;"	f
logger	src/vendor/phptars/tars-log/tests/demo.php	/^$logger = new Logger("tars_logger");$/;"	v
logger	src/vendor/psr/log/Psr/Log/LoggerAwareTrait.php	/^        $this->logger = $logger;$/;"	v
logger	src/vendor/psr/log/Psr/Log/LoggerAwareTrait.php	/^    protected $logger;$/;"	v
logger	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^        $logger = $this->getLogger();$/;"	v
logger1	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^        $logger1 = new Logger('test1');$/;"	v
logger2	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^        $logger2 = new Logger('test2');$/;"	v
logger3	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^        $logger3 = new Logger('test3');$/;"	v
loggerRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $loggerRecord = $this->getRecord($level, 'test', $context);$/;"	v
loggerbyInfo	src/vendor/phptars/tars-log/src/LogServant.php	/^    public function loggerbyInfo(LogInfo $info, $buffer)$/;"	f
loggers	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^    private static $loggers = array();$/;"	v
logging	src/vendor/catfan/medoo/src/Medoo.php	/^			$this->logging = $options[ 'logging' ];$/;"	v
logging	src/vendor/catfan/medoo/src/Medoo.php	/^	protected $logging = false;$/;"	v
logicalPathPsr0	src/vendor/composer/ClassLoader.php	/^            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;$/;"	v
logicalPathPsr0	src/vendor/composer/ClassLoader.php	/^            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)$/;"	v
logicalPathPsr4	src/vendor/composer/ClassLoader.php	/^        $logicalPathPsr4 = strtr($class, '\\\\', DIRECTORY_SEPARATOR) . $ext;$/;"	v
logopts	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^        $this->logopts = $logopts;$/;"	v
logopts	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^    protected $logopts;$/;"	v
logs	src/vendor/catfan/medoo/src/Medoo.php	/^			$this->logs = [[$query, $map]];$/;"	v
logs	src/vendor/catfan/medoo/src/Medoo.php	/^	protected $logs = [];$/;"	v
logs	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $logs = array();$/;"	v
longString	src/vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^        $longString = str_repeat("derp", 20000);$/;"	v
lookup	src/vendor/composer/ClassLoader.php	/^     * Should class lookup fail if not found in the current class map?$/;"	c
lower	src/vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^            $lower = function ($match) {$/;"	v
m1_map	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $m1_map = new \\TARS_Map(\\TARS::STRING, \\TARS::STRING);$/;"	v
m1_map	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$m1_map = new \\TARS_Map(\\TARS::STRING,\\TARS::STRING);$/;"	v
m2	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $m2 = TUPAPIWrapper::getMap('m2', 5, new \\TARS_Map(\\TARS::INT32, new SimpleStruct()), $sBuffer, $this->_iVersion);$/;"	v
m2	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$m2 = TUPAPIWrapper::getMap("m2",5,new \\TARS_Map(\\TARS::INT32,new SimpleStruct()),$sBuffer,$this->_iVersion);$/;"	v
mail	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^function mail($to, $subject, $message, $additional_headers = null, $additional_parameters = null)$/;"	f
mailer	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^        $this->mailer = $mailer;$/;"	v
mailer	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    protected $mailer;$/;"	v
mailer	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $mailer = new NativeMailerHandler($to, $subject, $from);$/;"	v
mailer	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $mailer = new NativeMailerHandler('spammer@example.org', 'dear victim', "receiver@example.org\\r\\nFrom: faked@attacker.org");$/;"	v
mailer	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $mailer = new NativeMailerHandler('spammer@example.org', 'dear victim', 'receiver@example.org');$/;"	v
mailer	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $mailer = new NativeMailerHandler('to@example.org', 'Alert: %level_name% %message%', 'from@example.org');$/;"	v
mailer	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $this->mailer = $this$/;"	v
mailer	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^    private $mailer;$/;"	v
makeCommonSyslogHeader	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    protected function makeCommonSyslogHeader($severity)$/;"	f
managerPidFile	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->managerPidFile = $this->dataPath . '\/manager.pid';$/;"	v
managerPidFile	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $managerPidFile;$/;"	v
map	src/vendor/catfan/medoo/src/Medoo.php	/^				$map = $column_map[ $isRaw ? $key : $value ];$/;"	v
map	src/vendor/catfan/medoo/src/Medoo.php	/^		$map = [$/;"	v
map	src/vendor/catfan/medoo/src/Medoo.php	/^		$map = [];$/;"	v
map	src/vendor/catfan/medoo/src/Medoo.php	/^	public $map;$/;"	v
map	src/vendor/catfan/medoo/src/Medoo.php	/^	public function exec($query, $map = [])$/;"	v
map	src/vendor/catfan/medoo/src/Medoo.php	/^	public function query($query, $map = [])$/;"	v
map	src/vendor/catfan/medoo/src/Medoo.php	/^	public static function raw($string, $map = [])$/;"	v
map	src/vendor/composer/ClassLoader.php	/^        \/\/ class map lookup$/;"	c
map	src/vendor/composer/ClassLoader.php	/^     * that have not been registered with the class map.$/;"	c
map	src/vendor/composer/autoload_real.php	/^            $map = require __DIR__ . '\/autoload_namespaces.php';$/;"	v
map	src/vendor/composer/autoload_real.php	/^            $map = require __DIR__ . '\/autoload_psr4.php';$/;"	v
map	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function map($idField)$/;"	f
map	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^            $map = array($/;"	v
mapFill	src/vendor/phptars/tars2php/src/tars2php.php	/^                $mapFill = $this->tripleTab.'$'.$valueName.'_map = '.$this->getExtType($param['wholeType'], $valueName).';'.$this->returnSymbol.$/;"	v
mapKey	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function mapKey()$/;"	f
mapVectorStack	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $mapVectorStack = [];$/;"	v
mapVectorStack	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $mapVectorStack = [];$/;"	v
mapVectorState	src/vendor/phptars/tars2php/src/tars2php.php	/^                            $mapVectorState = true;$/;"	v
mapVectorState	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $mapVectorState = true;$/;"	v
mapVectorState	src/vendor/phptars/tars2php/src/tars2php.php	/^            $mapVectorState = false;$/;"	v
mapVectorState	src/vendor/phptars/tars2php/src/tars2php.php	/^        $mapVectorState = false;$/;"	v
map_key	src/vendor/catfan/medoo/src/Medoo.php	/^					$map_key = $this->mapKey();$/;"	v
map_key	src/vendor/catfan/medoo/src/Medoo.php	/^				$map_key =$this->mapKey();$/;"	v
map_key	src/vendor/catfan/medoo/src/Medoo.php	/^			$map_key = $this->mapKey();$/;"	v
marshaler	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^            $this->marshaler = new Marshaler;$/;"	v
marshaler	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected $marshaler;$/;"	v
masterIp	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $masterIp = '',$/;"	v
masterIp	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^    public $masterIp;$/;"	v
masterIp	src/vendor/phptars/tars-monitor/src/classes/StatSampleMsg.php	/^    public $masterIp;$/;"	v
masterName	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $masterName = '',$/;"	v
masterName	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $masterName = 'phpClient',$/;"	v
masterName	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^    public $masterName;$/;"	v
masterName	src/vendor/phptars/tars-monitor/src/classes/StatSampleMsg.php	/^    public $masterName;$/;"	v
masterPid	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $masterPid = $data['masterPid'];$/;"	v
masterPidFile	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->masterPidFile = $this->dataPath . '\/master.pid';$/;"	v
masterPidFile	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $masterPidFile;$/;"	v
mathName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $mathName = $Tokens[1];$/;"	v
mathName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $mathName = trim($mathName, " \\r\\0\\x0B\\t\\n{");$/;"	v
max	src/vendor/catfan/medoo/src/Medoo.php	/^	public function max($table, $join, $column = null, $where = null)$/;"	f
maxColumnWidth	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $this->maxColumnWidth = $maxColumnWidth;$/;"	v
maxColumnWidth	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $maxColumnWidth;$/;"	v
maxFiles	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->maxFiles = (int) $maxFiles;$/;"	v
maxFiles	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected $maxFiles;$/;"	v
maxFiles	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    public function __construct($filename, $maxFiles = 0, $level = Logger::DEBUG, $bubble = true, $filePermission = null, $useLocking = false)$/;"	v
maxLength	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        $maxLength = 45;$/;"	v
maxLength	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        $this->maxLength = is_null($maxLength) ? self::DEFAULT_MAX_LENGTH : $maxLength;$/;"	v
maxLength	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    protected $maxLength;$/;"	v
maxLevel	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^            $maxLevel = Logger::toMonologLevel($maxLevel);$/;"	v
maxLevel	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function setAcceptedLevels($minLevelOrList = Logger::DEBUG, $maxLevel = Logger::EMERGENCY)$/;"	v
maxMessageLength	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $maxMessageLength = 512 - strlen($this->title);$/;"	v
maxNestingLevel	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^        $this->maxNestingLevel = max($maxNestingLevel, 0);$/;"	v
maxNestingLevel	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    private $maxNestingLevel;$/;"	v
maxRspTime	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgBody.php	/^    public $maxRspTime;$/;"	v
maxSampleCount	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->maxSampleCount = $config['tars']['application']['client']['max-sample-count'];$/;"	v
maxSampleCount	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->maxSampleCount = $maxSampleCount;$/;"	v
maxSampleCount	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $maxSampleCount = 0;$/;"	v
maxSampleCount	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->maxSampleCount = $config['tars']['application']['client']['maxSampleCount'];$/;"	v
maxSampleCount	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->maxSampleCount = $maxSampleCount;$/;"	v
maxSampleCount	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $maxSampleCount = 0;$/;"	v
mcs_map	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $mcs_map = new \\TARS_Map(\\TARS::STRING, new ComplicatedStruct());$/;"	v
mcs_map	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$mcs_map = new \\TARS_Map(\\TARS::STRING,new ComplicatedStruct());$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^            $message = reset($message);$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^        $message = array('message' => $record['message']);$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^                $message = mb_substr($message, 0, $maxLength - 4, 'UTF-8') . ' ...';$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^                $message = substr($message, 0, $maxLength - 4) . ' ...';$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^        $message = '';$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^        $message = array($/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        $message = new Message();$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^        $message = '';$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $message = '';$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^            $message = $this->formatV0($record);$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^            $message = $this->formatV1($record);$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^        $message = array($/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $message = $record['context'][self::TABLE];$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $message = reset($message);$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^        $message = array('message' => $record['message']);$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^            if ($level === $record['level_name'] && $message === $expectedMessage && $timestamp > $timestampValidity) {$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^            $message = sprintf('The given message type "%s" is not supported', print_r($messageType, true));$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^            $message = call_user_func($message);$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^        $message = clone $this->message;$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^        $this->message = $message;$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^    protected $message;$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $message = $record['message'];$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $message = ($this->useFormattedMessage) ? $record['formatted'] : $record['message'];$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $message = substr($message, 0, $maxMessageLength);$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $message = $record['message'];$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $message = $this->formatter->format($record);$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^            $message = call_user_func($this->messageTemplate, $content, $records);$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^            $message = clone $this->messageTemplate;$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^        $message = null;$/;"	v
message	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^            $message = implode("\\n", $message);$/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^        $message = $formatter->format($record);$/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $message = $formatter->format($record);$/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $message = $formatter->format(array($/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $message = $this->formatRecordWithExceptionInContext($formatter, $exception);$/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $message = $this->formatRecordWithExceptionInContext($formatter, $throwable);$/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $message = $formatter->format($/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $message = $formatter->format(array($/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $message = $formatter->formatBatch(array($/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $message = json_decode($formatter->format($record), true);$/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^        $message = $wildfire->format($record);$/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $message = 'message';$/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $message = 'test';$/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        $message = 'Hello, world! ' . $level;$/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $message = str_pad('test', 520, 'a');$/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    private function createExceptionRecord($level = Logger::DEBUG, $message = 'test', $exception = null)$/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $message = 'Test message';$/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^        $message = $proc(array($/;"	v
message	src/vendor/monolog/monolog/tests/Monolog/TestCase.php	/^    protected function getRecord($level = Logger::WARNING, $message = 'test', $context = array())$/;"	v
messageArray	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $messageArray = $message->toArray();$/;"	v
messageIndex	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected static $messageIndex = 1;$/;"	v
messagePublisher	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^        $messagePublisher = $this->getMessagePublisher();$/;"	v
messagePublisher	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $messagePublisher = $this->getMessagePublisher();$/;"	v
messageStr	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            $messageStr = implode(PHP_EOL, $messages);$/;"	v
messageTemplate	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^        $this->messageTemplate = $message;$/;"	v
messageTemplate	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    private $messageTemplate;$/;"	v
messageTemplate	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $messageTemplate = new \\Swift_Message();$/;"	v
messageType	src/vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^        $this->messageType = $messageType;$/;"	v
messageType	src/vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    protected $messageType;$/;"	v
message_array	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $message_array = $message->toArray();$/;"	v
message_array	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $message_array = $message['@fields'];$/;"	v
messages	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^            $messages = $this->getFormatter()->formatBatch($messages);$/;"	v
messages	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^        $messages = array();$/;"	v
messages	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $messages = array($lastMessage);$/;"	v
messages	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $messages = array();$/;"	v
messages	src/vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^        $messages = array();$/;"	v
messages	src/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $messages = array();$/;"	v
meta	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $meta = $stmt->result_metadata();$/;"	v
method	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $method = array_shift($args);$/;"	v
method	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $method = new \\ReflectionMethod('Monolog\\Handler\\SwiftMailerHandler', 'buildMessage');$/;"	v
methodProvider	src/vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^    public function methodProvider()$/;"	f
methodThatThrowsAnException	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    private function methodThatThrowsAnException()$/;"	f
methods	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    private function setMockHandler(array $methods = array())$/;"	v
methods	src/vendor/phptars/tars-server/src/core/Server.php	/^            $methods = $interface->getMethods();$/;"	v
microsecondTimestamps	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^        $this->microsecondTimestamps = (bool) $micro;$/;"	v
microsecondTimestamps	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected $microsecondTimestamps = true;$/;"	v
microseconds	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $microseconds = round(($this->timeout - $seconds) * 1e6);$/;"	v
microtime	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^        $microtime = microtime(true);$/;"	v
miliseconds	src/vendor/phptars/tars-client/src/Communicator.php	/^        $miliseconds = (float) sprintf('%.0f', (floatval($msec) + floatval($sec)) * 1000);$/;"	v
militime	src/vendor/phptars/tars-client/src/Communicator.php	/^    private function militime()$/;"	f
min	src/vendor/catfan/medoo/src/Medoo.php	/^	public function min($table, $join, $column = null, $where = null)$/;"	f
minLevelOrList	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^            $minLevelOrList = Logger::toMonologLevel($minLevelOrList);$/;"	v
minLevelOrList	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function __construct($handler, $minLevelOrList = Logger::DEBUG, $maxLevel = Logger::EMERGENCY, $bubble = true)$/;"	v
minRspTime	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgBody.php	/^    public $minRspTime;$/;"	v
missingClasses	src/vendor/composer/ClassLoader.php	/^    private $missingClasses = array();$/;"	v
mix	src/vendor/phptars/tars2php/src/tars2php.php	/^        $mix = trim($tokens[0]);$/;"	v
mode	src/vendor/catfan/medoo/src/Medoo.php	/^						$mode = ' ' . $mode_array[ $MATCH[ 'mode' ] ];$/;"	v
mode	src/vendor/catfan/medoo/src/Medoo.php	/^					$mode = '';$/;"	v
mode	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $mode = $data['mode'];$/;"	v
mode	src/vendor/phptars/tars-server/tests/testConf.php	/^        $mode = trim($subParts[0]);$/;"	v
mode	src/vendor/phptars/tars-utils/src/Utils.php	/^        $mode = trim($subParts[0]);$/;"	v
mode_array	src/vendor/catfan/medoo/src/Medoo.php	/^					$mode_array = [$/;"	v
modelName	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $modelName = $opts[1];$/;"	v
modelName	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $modelName = $this->relations[$name][1];$/;"	v
modelPath	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    protected static $modelPath;$/;"	v
moduleData	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^        $moduleData = explode('.', $moduleName);$/;"	v
moduleFlag	src/vendor/phptars/tars2php/src/tars2php.php	/^            $moduleFlag = strpos($line, 'module');$/;"	v
moduleName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->moduleName = $config['tars']['application']['client']['modulename'];$/;"	v
moduleName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->moduleName = $moduleName;$/;"	v
moduleName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $moduleName = 'tarsproxy';$/;"	v
moduleName	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^        $moduleName = $this->logConf->getModuleName();$/;"	v
moduleName	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $moduleName = '',$/;"	v
moduleName	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $moduleName = 'php',$/;"	v
moduleName	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgHead.php	/^    public $moduleName;$/;"	v
moduleName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->moduleName = $config['tars']['application']['client']['moduleName'];$/;"	v
moduleName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->moduleName = $moduleName;$/;"	v
moduleName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $moduleName = 'tarsproxy';$/;"	v
moduleName	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $moduleName = $this->tarsConfig['tars']['application']['client']['modulename'];$/;"	v
moduleName	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $moduleName = $this->tarsConfig['tars']['application']['client']['modulename'];$/;"	v
moduleName	src/vendor/phptars/tars2php/src/tars2php.php	/^            $this->moduleName = $this->appName.'\/'.$this->serverName.'\/'.$this->objName;$/;"	v
moduleName	src/vendor/phptars/tars2php/src/tars2php.php	/^            $this->moduleName = $this->appName.'\\\\'.$this->serverName.'\\\\'.$this->objName;$/;"	v
moduleName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->moduleName = $moduleName;$/;"	v
moduleName	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $moduleName;$/;"	v
moduleParse	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function moduleParse()$/;"	f
moduleScan	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function moduleScan()$/;"	f
mongo	src/vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^        $mongo = $this->getMock('Mongo', array('selectCollection'), array(), '', false);$/;"	v
mongoCollection	src/vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^        $this->mongoCollection = $mongo->selectCollection($database, $collection);$/;"	v
mongoCollection	src/vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^    protected $mongoCollection;$/;"	v
mongodb	src/vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^ *   $mongodb = new MongoDBHandler(new \\Mongo("mongodb:\/\/localhost:27017"), "logs", "prod");$/;"	v
monitorProperty	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^    public function monitorProperty($/;"	f
monitorPropertyBatch	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^    public function monitorPropertyBatch($msgHeadArr, $msgBodyArr)$/;"	f
monitorStat	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    public function monitorStat($/;"	f
monitorStoreClassName	src/vendor/phptars/tars-server/src/cmd/Start.php	/^        $monitorStoreClassName = isset($servicesInfo['monitorStoreConf']['className']) ? $servicesInfo['monitorStoreConf']['className'] : \\Tars\\monitor\\cache\\SwooleTableStoreCache::class;$/;"	v
monitorStoreConfig	src/vendor/phptars/tars-server/src/cmd/Start.php	/^        $monitorStoreConfig = isset($servicesInfo['monitorStoreConf']['config']) ? $servicesInfo['monitorStoreConf']['config'] : [];$/;"	v
monologLogger	src/vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        $monologLogger = new Logger('');$/;"	v
monthCallback	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $monthCallback = function($ago) {$/;"	v
moreChar	src/vendor/phptars/tars2php/src/tars2php.php	/^                            $moreChar = $param[$i + 1];$/;"	v
moreChar	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $moreChar = $rest[$i + 1];$/;"	v
moreChar	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $moreChar = $returnType[$i + 1];$/;"	v
moreChar	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $moreChar = fgetc($this->fp);$/;"	v
moreChar	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $moreChar = fgetc($this->fp);$/;"	v
msg	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $msg = 'Malformed UTF-8 characters, possibly incorrectly encoded';$/;"	v
msg	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $msg = 'Maximum stack depth exceeded';$/;"	v
msg	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $msg = 'Underflow or the modes mismatch';$/;"	v
msg	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $msg = 'Unexpected control character found';$/;"	v
msg	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $msg = 'Unknown error';$/;"	v
msg	src/vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^        $msg = array($/;"	v
msg	src/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $msg = $messages[0][0];$/;"	v
msg	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $msg = array($/;"	v
msg	src/vendor/phptars/tars-client/src/ResponsePacket.php	/^            $msg = isset($decodeRet['sResultDesc'])?$decodeRet['sResultDesc']:"";$/;"	v
msg	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $msg = [];$/;"	v
msg	src/vendor/phptars/tars-monitor/src/client/ResponsePacket.php	/^            $msg = isset($decodeRet['sResultDesc']) ? $decodeRet['sResultDesc'] : "";$/;"	v
msg	src/vendor/phptars/tars-monitor/src/client/ResponsePacketMonitor.php	/^            $msg = $decodeRet['sResultDesc'];$/;"	v
msg	src/vendor/phptars/tars-registry/src/client/ResponsePacketRegistry.php	/^            $msg = $decodeRet['sResultDesc'];$/;"	v
msgBody	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^            $msgBody = $msgBodyArr[$key];$/;"	v
msgBody	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $msgBody = new StatPropMsgBody();$/;"	v
msgBody	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^                $msgBody = new StatMicMsgBody();$/;"	v
msgBody	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^            $msgBody = new StatMicMsgBody();$/;"	v
msgBody	src/vendor/phptars/tars-server/src/core/Server.php	/^                                    $msgBody = [$/;"	v
msgBody	src/vendor/phptars/tars-server/src/core/Server.php	/^                                $msgBody = [$/;"	v
msgBodyArr	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $msgBodyArr = [];$/;"	v
msgHead	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $msgHead = new StatPropMsgHead();$/;"	v
msgHead	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^                $msgHead = new StatMicMsgHead();$/;"	v
msgHead	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^            $msgHead = new StatMicMsgHead();$/;"	v
msgHead	src/vendor/phptars/tars-server/src/core/Server.php	/^                                    $msgHead = [$/;"	v
msgHead	src/vendor/phptars/tars-server/src/core/Server.php	/^                                $msgHead = [$/;"	v
msgHeadArr	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $msgHeadArr = [];$/;"	v
msg_map	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^            $msg_map = new \\TARS_Map(new StatMicMsgHead(), new StatMicMsgBody(), 1);$/;"	v
msg_vec	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^            $msg_vec = new \\TARS_Vector(new StatSampleMsg());$/;"	v
msgs	src/vendor/phptars/tars-server/src/Code.php	/^    public static $msgs = [$/;"	v
mss	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^        $this->mss = new \\TARS_Map(\\TARS::STRING, new SimpleStruct());$/;"	v
mss	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^    public $mss;$/;"	v
mss	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/LotofTags.php	/^        $this->mss = new \\TARS_Map(\\TARS::STRING, new SimpleStruct());$/;"	v
mss	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/LotofTags.php	/^    public $mss;$/;"	v
mss	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^		$this->mss = new \\TARS_Map(\\TARS::STRING,new SimpleStruct());$/;"	v
mss	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^	public $mss; $/;"	v
mss	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/LotofTags.php	/^		$this->mss = new \\TARS_Map(\\TARS::STRING,new SimpleStruct());$/;"	v
mss	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $mss; $/;"	v
mss	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^		$this->mss = new \\TARS_Map(\\TARS::STRING,new SimpleStruct());$/;"	v
mss	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^	public $mss; $/;"	v
mss	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/LotofTags.php	/^		$this->mss = new \\TARS_Map(\\TARS::STRING,new SimpleStruct());$/;"	v
mss	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $mss; $/;"	v
multipleDimensions	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $multipleDimensions = array(array(1, 2));$/;"	v
mustRotate	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^            $this->mustRotate = !file_exists($this->url);$/;"	v
mustRotate	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^            $this->mustRotate = true;$/;"	v
mustRotate	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->mustRotate = false;$/;"	v
mustRotate	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected $mustRotate;$/;"	v
mysqlLongType	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $mysqlLongType = 252;$/;"	v
mysqli	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $mysqli = $mysqlic->newInstanceArgs($params);$/;"	v
mysqli	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function mysqli()$/;"	f
mysqlic	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $mysqlic = new ReflectionClass('mysqli');$/;"	v
name	src/vendor/composer/ClassLoader.php	/^            \/\/ PEAR-like class name$/;"	c
name	src/vendor/composer/ClassLoader.php	/^            \/\/ namespaced class name$/;"	c
name	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        foreach ($this->_with as $name => $opts) {$/;"	v
name	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^            foreach ($record as $name => $value) {$/;"	v
name	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                    \/\/ as a class name to avoid any unexpected leak of sensitive information$/;"	c
name	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $this->name = $name;$/;"	v
name	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private $name;$/;"	v
name	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    public function __construct($token, $room, $name = 'Monolog', $notify = false, $level = Logger::CRITICAL, $bubble = true, $useSSL = true, $format = 'text', $host = 'api.hipchat.com', $version = self::API_V1)$/;"	v
name	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^        $this->name = $name;$/;"	v
name	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected $name;$/;"	v
name	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^        $name = $name ?: $logger->getName();$/;"	v
name	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function addLogger(Logger $logger, $name = null, $overwrite = false)$/;"	v
name	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^            foreach ($constants as $name => $value) {$/;"	v
name	src/vendor/phptars/tars-client/tests/testServant.php	/^$name = 'ted';$/;"	v
name	src/vendor/phptars/tars-server/src/cmd/Start.php	/^        $name = $tarsConfig['tars']['application']['server']['app']$/;"	v
name	src/vendor/phptars/tars-server/src/cmd/Stop.php	/^        $name = $tarsConfig['tars']['application']['server']['app'] .$/;"	v
name	src/vendor/phptars/tars-server/tests/testConf.php	/^                        $name = substr($line, 0, $pos);$/;"	v
name	src/vendor/phptars/tars-utils/src/Utils.php	/^                        $name = substr($line, 0, $pos);$/;"	v
name	src/vendor/phptars/tars2php/src/tars2php.php	/^                $name = Utils::pregMatchByName('enum', $line);$/;"	v
name	src/vendor/phptars/tars2php/src/tars2php.php	/^                $name = Utils::pregMatchByName('interface', $line);$/;"	v
name	src/vendor/phptars/tars2php/src/tars2php.php	/^                $name = Utils::pregMatchByName('module', $line);$/;"	v
name	src/vendor/phptars/tars2php/src/tars2php.php	/^                $name = Utils::pregMatchByName('struct', $line);$/;"	v
name	src/vendor/phptars/tars2php/src/tars2php.php	/^            $name = $param['valueName'];$/;"	v
namespace	src/vendor/composer/autoload_real.php	/^            foreach ($map as $namespace => $path) {$/;"	v
namespaceName	src/vendor/phptars/tars-server/src/core/Event.php	/^        $namespaceName = $request->namespaceName;$/;"	v
namespaceName	src/vendor/phptars/tars-server/src/core/Request.php	/^    public $namespaceName; \/\/标识当前服务的namespacePrefix$/;"	v
namespaceName	src/vendor/phptars/tars-server/src/core/Server.php	/^            $this->namespaceName = $this->servicesInfo['namespaceName'];$/;"	v
namespaceName	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $namespaceName;$/;"	v
namespaceName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->namespaceName = $namespaceName;$/;"	v
namespaceName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->namespaceName = empty($this->namespacePrefix) ? $this->appName.'\\\\'.$this->serverName.'\\\\'.$this->objName$/;"	v
namespaceName	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $namespaceName;$/;"	v
namespacePrefix	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->namespacePrefix = $config['namespacePrefix'];$/;"	v
namespacePrefix	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $namespacePrefix;$/;"	v
needPage	src/servant/Article/Server/Obj/classes/ListParam.php	/^	public $needPage; $/;"	v
nestingLevel	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    protected function formatArray(array $record, $nestingLevel = 0)$/;"	v
new	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^        $new = clone $this;$/;"	v
newEncodeBufs	src/vendor/phptars/tars-client/src/RequestPacket.php	/^            $newEncodeBufs = [];$/;"	v
newEncodeBufs	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^            $newEncodeBufs = [];$/;"	v
newEncodeBufs	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^            $newEncodeBufs = [];$/;"	v
newEncodeBufs	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^            $newEncodeBufs = [];$/;"	v
newMethods	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $newMethods = array_diff($methods, $defaultMethods);$/;"	v
newRes	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $newRes = Array();$/;"	v
newStr	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $newStr = "";$/;"	v
new_relation_list	src/model/mysql/content/ArticleBasic.php	/^        $new_relation_list = [];$/;"	v
new_resource_list	src/model/mysql/content/ArticleBasic.php	/^        $new_resource_list = [];$/;"	v
newrelic_add_custom_parameter	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^function newrelic_add_custom_parameter($key, $value)$/;"	f
newrelic_name_transaction	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^function newrelic_name_transaction($transactionName)$/;"	f
newrelic_notice_error	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^function newrelic_notice_error()$/;"	f
newrelic_set_appname	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^function newrelic_set_appname($appname)$/;"	f
next	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $next = trim(substr($proto, $pos, strlen($proto) - $pos), '()');$/;"	v
next	src/vendor/phptars/tars-server/tests/test.php	/^             $next = trim(substr($proto, $pos, strlen($proto) - $pos), '()');$/;"	v
nextChar	src/vendor/phptars/tars2php/src/tars2php.php	/^        $nextChar = fgetc($this->fp);$/;"	v
nextRotation	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->nextRotation = new \\DateTime('tomorrow');$/;"	v
nextRotation	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected $nextRotation;$/;"	v
nextnextChar	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $nextnextChar = fgetc($this->fp);$/;"	v
node	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^                $node = &$node[$key];$/;"	v
node	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $node = &$record;$/;"	v
normalize	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected function normalize($data, $depth = 0)$/;"	f
normalize	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected function normalize($data, $depth = 0)$/;"	f
normalize	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^    protected function normalize($data, $depth = 0)$/;"	f
normalizeException	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected function normalizeException($e)$/;"	f
normalizeException	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected function normalizeException($e)$/;"	f
normalizeException	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected function normalizeException($e)$/;"	f
normalizeValue	src/vendor/monolog/monolog/src/Monolog/Formatter/ScalarFormatter.php	/^    protected function normalizeValue($value)$/;"	f
normalized	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^            $normalized = array();$/;"	v
normalized	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^            $normalized = array();$/;"	v
normalized	src/vendor/monolog/monolog/src/Monolog/Formatter/ScalarFormatter.php	/^        $normalized = $this->normalize($value);$/;"	v
normalized	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $normalized = $this->normalizerFormatter->format($fields);$/;"	v
normalizerFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $this->normalizerFormatter = new NormalizerFormatter();$/;"	v
normalizerFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $normalizerFormatter;$/;"	v
not	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function not($col = null)$/;"	f
notice	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function notice($message, array $context = array())$/;"	f
notice	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function notice($message, array $context = array())$/;"	f
notice	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function notice($message, array $context = array());$/;"	f
notice	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function notice($message, array $context = array())$/;"	f
notify	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $this->notify = $notify;$/;"	v
notify	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private $notify;$/;"	v
now	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function now($diff = null, $func = "NOW()")$/;"	f
now	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $now = time();$/;"	v
numRows	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function delete($tableName, $numRows = null)$/;"	v
numRows	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function get($tableName, $numRows = null, $columns = '*')$/;"	v
numRows	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function query($query, $numRows = null)$/;"	v
numRows	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function update($tableName, $tableData, $numRows = null)$/;"	v
number	src/vendor/catfan/medoo/src/Medoo.php	/^			$number = $query->fetchColumn();$/;"	v
numericKeys	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $numericKeys = array('library' => 'monolog');$/;"	v
obj	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                    $obj = new $modelName;$/;"	v
obj	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                $obj = new $modelName;$/;"	v
obj	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $obj = new static;$/;"	v
obj	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $obj = new \\stdClass;$/;"	v
obj	src/vendor/phptars/tars-server/src/core/Event.php	/^        $obj = new $class($request, $response);$/;"	v
obj	src/vendor/phptars/tars-server/src/core/Server.php	/^                $obj = new $className();$/;"	v
objAdapter	src/vendor/phptars/tars-server/tests/testConf.php	/^                        $objAdapter = [];$/;"	v
objAdapter	src/vendor/phptars/tars-server/tests/testConf.php	/^        $objAdapter = [];$/;"	v
objAdapter	src/vendor/phptars/tars-utils/src/Utils.php	/^                        $objAdapter = [];$/;"	v
objAdapter	src/vendor/phptars/tars-utils/src/Utils.php	/^        $objAdapter = [];$/;"	v
objName	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $objName = $data['objName'];$/;"	v
objName	src/vendor/phptars/tars-server/src/core/Server.php	/^        $objName = $result['objName'];$/;"	v
objName	src/vendor/phptars/tars-server/tests/testConf.php	/^        $objName = $parts[0];$/;"	v
objName	src/vendor/phptars/tars-utils/src/Utils.php	/^        $objName = $parts[0];$/;"	v
objName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->objName = $config['objName'];$/;"	v
objName	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $objName;$/;"	v
objectBuilder	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function objectBuilder()$/;"	f
objectVars	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^        $objectVars = get_object_vars($value);$/;"	v
objects	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $objects = Array ();$/;"	v
offset	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $offset = $this->pageLimit * ($page - 1);$/;"	v
ok	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $ok = filter_var($value, FILTER_VALIDATE_FLOAT);$/;"	v
old	src/vendor/catfan/medoo/src/Medoo.php	/^				foreach ($replacements as $old => $new)$/;"	v
oldNewline	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $oldNewline = $this->appendNewline;$/;"	v
omcs	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $omcs = TUPAPIWrapper::getMap('omcs', 2, new \\TARS_Map(\\TARS::STRING, new ComplicatedStruct()), $sBuffer, $this->_iVersion);$/;"	v
omcs	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$omcs = TUPAPIWrapper::getMap("omcs",2,new \\TARS_Map(\\TARS::STRING,new ComplicatedStruct()),$sBuffer,$this->_iVersion);$/;"	v
onClose	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function onClose($server, $fd, $fromId)$/;"	f
onConnect	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function onConnect($server, $fd, $fromId)$/;"	f
onDuplicate	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function onDuplicate($updateColumns, $lastInsertId = null)$/;"	f
onFinish	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function onFinish($server, $taskId, $data)$/;"	f
onManagerStart	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function onManagerStart($server)$/;"	f
onMasterStart	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function onMasterStart($server)$/;"	f
onReceive	src/vendor/phptars/tars-server/src/core/Event.php	/^    public function onReceive(Request $request, Response &$response)$/;"	f
onReceive	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function onReceive($server, $fd, $fromId, $data)$/;"	f
onRequest	src/vendor/phptars/tars-server/src/core/Event.php	/^    public function onRequest(Request $request, Response $response)$/;"	f
onRequest	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function onRequest($request, $response)$/;"	f
onTask	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function onTask($server, $taskId, $fromId, $data)$/;"	f
onTimer	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function onTimer($server, $interval)$/;"	f
onWorkerStart	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function onWorkerStart($server, $workerId)$/;"	f
onWorkerStop	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function onWorkerStop($server, $workerId)$/;"	f
operator	src/vendor/catfan/medoo/src/Medoo.php	/^					$operator = $match[ 'operator' ];$/;"	v
operator	src/vendor/catfan/medoo/src/Medoo.php	/^					elseif ($operator === '<>' || $operator === '><')$/;"	v
operator	src/vendor/catfan/medoo/src/Medoo.php	/^					elseif ($operator === '~' || $operator === '!~')$/;"	v
operator	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $operator = $key;$/;"	v
option	src/vendor/catfan/medoo/src/Medoo.php	/^		$option = isset($options[ 'option' ]) ? $options[ 'option' ] : [];$/;"	v
option	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $option = strtoupper($option);$/;"	v
options	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $options = Array($options);$/;"	v
options	src/vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^        $this->options = array_merge(array($/;"	v
options	src/vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^    private $options;$/;"	v
options	src/vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^    public function __construct(array $options = array(), $level = Logger::DEBUG, $bubble = true)$/;"	v
options	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^        $this->options = array_merge($/;"	v
options	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    protected $options = array();$/;"	v
options	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    public function __construct(Client $client, array $options = array(), $level = Logger::DEBUG, $bubble = true)$/;"	v
options	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^ *    $options = array($/;"	v
options	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $this->options = $this->initOptions($options);$/;"	v
options	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private $options = array($/;"	v
options	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    public function __construct(array $options = array(), Connector $connector = null, $level = Logger::DEBUG, $bubble = true)$/;"	v
options	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $options = array();$/;"	v
options	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $options = array($/;"	v
options	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^            $options = JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE;$/;"	v
options	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $options = 0;$/;"	v
options	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    protected $options = array($/;"	v
options	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $options = $handler->getOptions();$/;"	v
or	src/vendor/composer/ClassLoader.php	/^     * Loads the given class or interface.$/;"	c
orHaving	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function orHaving($havingProp, $havingValue = null, $operator = null)$/;"	f
orWhere	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function orWhere($whereProp, $whereValue = 'DBNULL', $operator = '=')$/;"	f
order	src/vendor/catfan/medoo/src/Medoo.php	/^			$order = 'NEWID()';$/;"	v
order	src/vendor/catfan/medoo/src/Medoo.php	/^			$order = 'RAND()';$/;"	v
order	src/vendor/catfan/medoo/src/Medoo.php	/^		$order = 'RANDOM()';$/;"	v
orderBy	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function orderBy($orderByField, $orderbyDirection = "DESC", $customFieldsOrRegExp = null)$/;"	f
orderByField	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^	    $orderByField = $orderByField . " REGEXP '" . $customFieldsOrRegExp . "'";$/;"	v
orderByField	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $orderByField = 'FIELD (' . $orderByField . ', "' . implode('","', $customFieldsOrRegExp) . '")';$/;"	v
orderByField	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $orderByField = preg_replace("\/[^ -a-z0-9\\.\\(\\),_`\\*\\'\\"]+\/i", '', $orderByField);$/;"	v
orderByField	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $orderByField = preg_replace('\/(\\`)([`a-zA-Z0-9_]*\\.)\/', '\\1' . self::$prefix . '\\2', $orderByField);$/;"	v
order_raw	src/vendor/catfan/medoo/src/Medoo.php	/^		$order_raw = $this->raw($order);$/;"	v
orderbyDirection	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $orderbyDirection = strtoupper(trim($orderbyDirection));$/;"	v
orderbyDirection	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function orderBy($orderByField, $orderbyDirection = "DESC", $customFieldsOrRegExp = null)$/;"	v
out	src/vendor/phptars/tars-client/src/Communicator.php	/^        $out = null;$/;"	v
out	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $out = null;$/;"	v
outGreetings	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $outGreetings = TUPAPIWrapper::getString('outGreetings', 2, $sBuffer, $this->_iVersion);$/;"	v
outGreetings	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$outGreetings = TUPAPIWrapper::getString("outGreetings",2,$sBuffer,$this->_iVersion);$/;"	v
outGreetings	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	 * @param string $outGreetings =out=$/;"	v
outLen	src/vendor/phptars/tars-client/src/Communicator.php	/^            $outLen = @\\socket_recvfrom($sock, $out, 32768, 0, $ip, $port);$/;"	v
outLen	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $outLen = @\\socket_recvfrom($sock, $out, 32768, 0, $ip, $port);$/;"	v
outParams	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $outParams = $paramInfo['outParams'];$/;"	v
outParams	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $outParams = $paramInfo['outParams'];$/;"	v
outParams	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $outParams = [];$/;"	v
outParams	src/vendor/phptars/tars2php/src/tars2php.php	/^        $outParams = $result['out'];$/;"	v
outParams	src/vendor/phptars/tars2php/src/tars2php.php	/^        $outParams = [];$/;"	v
outStartIndex	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $outStartIndex = count($paramInfo['inParams']);$/;"	v
output	src/vendor/catfan/medoo/src/Medoo.php	/^		$output = [$/;"	v
output	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^        $output = $this->addTitle($record['level_name'], $record['level']);$/;"	v
output	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^                $output = str_replace('%'.$var.'%', $this->stringify($val), $output);$/;"	v
output	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^                $output = str_replace('%context%', '', $output);$/;"	v
output	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^                $output = str_replace('%context.'.$var.'%', $this->stringify($val), $output);$/;"	v
output	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^                $output = str_replace('%extra%', '', $output);$/;"	v
output	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^                $output = str_replace('%extra.'.$var.'%', $this->stringify($val), $output);$/;"	v
output	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^            $output = preg_replace('\/%(?:extra|context)\\..+?%\/', '', $output);$/;"	v
output	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $output = $this->format;$/;"	v
outputDir	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->outputDir = empty($config['dstPath']) ? '.\/' : $config['dstPath'].'\/';$/;"	v
outputDir	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $outputDir;$/;"	v
ovcs	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $ovcs = TUPAPIWrapper::getVector('ovcs', 4, new \\TARS_Vector(new ComplicatedStruct()), $sBuffer, $this->_iVersion);$/;"	v
ovcs	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$ovcs = TUPAPIWrapper::getVector("ovcs",4,new \\TARS_Vector(new ComplicatedStruct()),$sBuffer,$this->_iVersion);$/;"	v
overflowed	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected static $overflowed = false;$/;"	v
packBuffer	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^    public function packBuffer($type, $argv, $tag, $name, $iVersion = 3)$/;"	f
packErrRsp	src/vendor/phptars/tars-server/src/protocol/HTTPProtocol.php	/^    public function packErrRsp($unpackResult, $code, $msg)$/;"	f
packErrRsp	src/vendor/phptars/tars-server/src/protocol/JSONProtocol.php	/^    public function packErrRsp($unpackResult, $code, $msg)$/;"	f
packErrRsp	src/vendor/phptars/tars-server/src/protocol/Protocol.php	/^    public function packErrRsp($unpackResult, $code, $msg);$/;"	f
packErrRsp	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^    public function packErrRsp($unpackResult, $code, $msg)$/;"	f
packLen	src/vendor/phptars/tars-client/src/Communicator.php	/^                $packLen = $list['len'];$/;"	v
packLen	src/vendor/phptars/tars-client/src/Communicator.php	/^        $packLen = 0;$/;"	v
packLen	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                $packLen = $list['len'];$/;"	v
packLen	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $packLen = 0;$/;"	v
packMethod	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $packMethod = $packMethods[$type];$/;"	v
packMethod	src/vendor/phptars/tars2php/src/tars2php.php	/^            $packMethod = Utils::getPackMethods($type);$/;"	v
packMethods	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $packMethods = [$/;"	v
packMethods	src/vendor/phptars/tars2php/src/tars2php.php	/^        $packMethods = [$/;"	v
packRsp	src/vendor/phptars/tars-server/src/protocol/HTTPProtocol.php	/^    public function packRsp($paramInfo, $unpackResult, $args, $returnVal)$/;"	f
packRsp	src/vendor/phptars/tars-server/src/protocol/JSONProtocol.php	/^    public function packRsp($paramInfo, $unpackResult, $args, $returnVal)$/;"	f
packRsp	src/vendor/phptars/tars-server/src/protocol/Protocol.php	/^    public function packRsp($paramInfo, $unpackResult, $args, $returnVal);$/;"	f
packRsp	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^    public function packRsp($paramInfo, $unpackResult, $args, $returnVal)$/;"	f
page	src/model/mysql/content/ArticleBasic.php	/^            $page = $param->page ? $param->page :1;$/;"	v
page	src/servant/Article/Server/Obj/classes/ListParam.php	/^	public $page="1"; $/;"	v
page	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/LotofTags.php	/^    public $page;$/;"	v
page	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/OutStruct.php	/^    public $page;$/;"	v
page	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^    public $page;$/;"	v
page	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $page; $/;"	v
page	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/OutStruct.php	/^	public $page; $/;"	v
page	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^	public $page; $/;"	v
page	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $page; $/;"	v
page	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/OutStruct.php	/^	public $page; $/;"	v
page	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/SimpleStruct.php	/^	public $page; $/;"	v
pageLimit	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public $pageLimit = 20;$/;"	v
pageLimit	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public static $pageLimit = 20;$/;"	v
paginate	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function paginate ($table, $page, $fields = null) {$/;"	f
paginate	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function paginate ($page, $fields = null) {$/;"	f
param	src/model/mysql/content/ArticleAttr.php	/^        $param = [$ab_id];$/;"	v
param	src/model/mysql/content/ArticleBasic.php	/^        $param = [$ab_id];$/;"	v
param	src/model/mysql/content/ArticleBasic.php	/^        $param = [$title];$/;"	v
param	src/model/mysql/content/ArticleDetails.php	/^        $param = [$ab_id];$/;"	v
param	src/model/mysql/content/ArticleRelationship.php	/^        $param = [$ab_id,$ab_id];$/;"	v
param	src/model/mysql/content/ArticleRelationship.php	/^        $param = [$ab_id];$/;"	v
param	src/model/mysql/content/ArticleResource.php	/^        $param = [$ab_id];$/;"	v
param	src/service/article/Article.php	/^    public $param;$/;"	v
paramInfo	src/vendor/phptars/tars-server/src/core/Event.php	/^                $paramInfo = $paramInfos[$sFuncName];$/;"	v
paramInfo	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $paramInfo = $paramInfos[$sFuncName];$/;"	v
paramInfos	src/vendor/phptars/tars-server/src/core/Event.php	/^        $paramInfos = $request->paramInfos;$/;"	v
paramInfos	src/vendor/phptars/tars-server/src/core/Request.php	/^    public $paramInfos;$/;"	v
paramInfos	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected static $paramInfos;$/;"	v
paramInfos	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $paramInfos = $request->paramInfos;$/;"	v
paramKey	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^                    foreach ($parameter as $paramKey => $paramValue) {$/;"	v
paramParser	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function paramParser($params)$/;"	f
paramPrefix	src/vendor/phptars/tars2php/src/tars2php.php	/^            $paramPrefix = $this->paramTypeMap($param['type']);$/;"	v
paramPrefix	src/vendor/phptars/tars2php/src/tars2php.php	/^            $paramPrefix = Utils::paramTypeMap($param['type']);$/;"	v
paramSuffix	src/vendor/phptars/tars2php/src/tars2php.php	/^            $paramSuffix = '$'.$param['valueName'];$/;"	v
paramSuffix	src/vendor/phptars/tars2php/src/tars2php.php	/^            $paramSuffix = '&$'.$param['valueName'];$/;"	v
paramType	src/vendor/phptars/tars2php/src/tars2php.php	/^                            $paramType = $word;$/;"	v
paramType	src/vendor/phptars/tars2php/src/tars2php.php	/^            $paramType = 'in';$/;"	v
paramTypeMap	src/vendor/phptars/tars2php/src/tars2php.php	/^    private function paramTypeMap($paramType)$/;"	f
paramTypeMap	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function paramTypeMap($paramType)$/;"	f
param_where	src/model/mysql/content/ArticleBasic.php	/^        $param_where = json_decode($param->where,true);$/;"	v
parameterNames	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $parameterNames = array($/;"	v
parameters	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $parameters = array();$/;"	v
parameters	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $parameters = implode(' ', $this->parameters);$/;"	v
parameters	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $this->parameters = array_merge($this->parameters, (array) $parameters);$/;"	v
parameters	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $parameters = array();$/;"	v
params	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $params = array(''); \/\/ Create the empty 0 index$/;"	v
params	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $params = array_values($pro);$/;"	v
params	src/vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^        $params = $doc->getParams();$/;"	v
params	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $params = $GLOBALS['mail'][0];$/;"	v
params	src/vendor/phptars/tars2php/src/tars2php.php	/^        $params = [];$/;"	v
paramsStr	src/vendor/phptars/tars2php/src/tars2php.php	/^        $paramsStr = '';$/;"	v
paramsStr	src/vendor/phptars/tars2php/src/tars2php.php	/^        $paramsStr = trim($paramsStr, ',');$/;"	v
parentPid	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^        $parentPid = posix_getpid();$/;"	v
parentWidth	src/vendor/phptars/tars-monitor/src/classes/StatSampleMsg.php	/^    public $parentWidth;$/;"	v
parse	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function parse()$/;"	f
parseAnnotation	src/vendor/phptars/tars-server/src/protocol/HTTPProtocol.php	/^    public function parseAnnotation($docblock)$/;"	f
parseAnnotation	src/vendor/phptars/tars-server/src/protocol/JSONProtocol.php	/^    public function parseAnnotation($docblock)$/;"	f
parseAnnotation	src/vendor/phptars/tars-server/src/protocol/Protocol.php	/^    public function parseAnnotation($docblock);$/;"	f
parseAnnotation	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^    public function parseAnnotation($docblock)$/;"	f
parseFile	src/vendor/phptars/tars-utils/src/Utils.php	/^    public static function parseFile($configPath)$/;"	f
parseNodeInfo	src/vendor/phptars/tars-server/tests/testConf.php	/^    public static function parseNodeInfo($nodeInfo)$/;"	f
parseNodeInfo	src/vendor/phptars/tars-utils/src/Utils.php	/^    public static function parseNodeInfo($nodeInfo)$/;"	f
parseText	src/vendor/phptars/tars-server/tests/testConf.php	/^    public static function parseText($text)$/;"	f
parseText	src/vendor/phptars/tars-utils/src/Utils.php	/^    public static function parseText($text)$/;"	f
parts	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $parts = explode(' ', $cmd);$/;"	v
parts	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                    $parts = explode(' ', $validLine);$/;"	v
parts	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $parts = explode(' ', $validLine);$/;"	v
parts	src/vendor/phptars/tars-server/tests/testConf.php	/^        $parts = explode('-', $endpoint);$/;"	v
parts	src/vendor/phptars/tars-server/tests/testConf.php	/^        $parts = explode('@', $locatorString);$/;"	v
parts	src/vendor/phptars/tars-server/tests/testConf.php	/^        $parts = explode('@', $nodeInfo);$/;"	v
parts	src/vendor/phptars/tars-utils/src/Utils.php	/^        $parts = explode('-', $endpoint);$/;"	v
parts	src/vendor/phptars/tars-utils/src/Utils.php	/^        $parts = explode('@', $locatorString);$/;"	v
parts	src/vendor/phptars/tars-utils/src/Utils.php	/^        $parts = explode('@', $nodeInfo);$/;"	v
passthru	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^                $passthru = $passthru || !$this->isDuplicate($record);$/;"	v
passthru	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $passthru = null;$/;"	v
passthru	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        if ($passthru === true || $passthru === null) {$/;"	v
passthruLevel	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $this->passthruLevel = Logger::toMonologLevel($passthruLevel);$/;"	v
passthruLevel	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $passthruLevel;$/;"	v
path	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $path = substr(json_encode($exception->getFile(), $options), 1, -1);$/;"	v
path	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $path = str_replace('\\\\\/', '\/', json_encode(__FILE__));$/;"	v
path	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^        $path = tempnam(sys_get_temp_dir(), 'monolog-');$/;"	v
path	src/vendor/phptars/tars-server/src/core/Response.php	/^        $path = '\/',$/;"	v
pathEnd	src/vendor/composer/ClassLoader.php	/^                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);$/;"	v
pattern	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^            $pattern = '%"wrappedResource":"\\[object\\] \\(Monolog\\\\\\\\\\\\\\\\Formatter\\\\\\\\\\\\\\\\TestFooNorm: \\)"%';$/;"	v
pattern	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^            $pattern = '%\\\\\\\\"foo\\\\\\\\":null%';$/;"	v
payload	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^            $payload = $context['payload'];$/;"	v
payload	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^        $payload = array();$/;"	v
pcntl	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^            $pcntl = new ReflectionExtension('pcntl');$/;"	v
pcntl_async_signals	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^     * @requires function pcntl_async_signals$/;"	f
pcntl_fork	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^     * @requires function pcntl_fork$/;"	f
pcntl_signal	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^     * @requires function pcntl_signal$/;"	f
pcntl_signal_dispatch	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^     * @requires function pcntl_signal_dispatch$/;"	f
pcntl_signal_get_handler	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^     * @requires function pcntl_signal_get_handler$/;"	f
pcntl_sigprocmask	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^     * @requires function pcntl_sigprocmask$/;"	f
pcntl_waitpid	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^     * @requires function pcntl_waitpid$/;"	f
pdo	src/vendor/catfan/medoo/src/Medoo.php	/^			$this->pdo = $options[ 'pdo' ];$/;"	v
pdo	src/vendor/catfan/medoo/src/Medoo.php	/^			$this->pdo = new PDO($/;"	v
pdo	src/vendor/catfan/medoo/src/Medoo.php	/^	public $pdo;$/;"	v
persistent	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->persistent = (bool) $persistent;$/;"	v
persistent	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $persistent = false;$/;"	v
pfsockopen	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function pfsockopen()$/;"	f
phar	src/vendor/phptars/tars-deploy/src/Deploy.php	/^        $phar = new \\PharData($tgzFile);$/;"	v
pices	src/vendor/phptars/tars2php/src/tars2php.php	/^        $pices = preg_split('\/\\s+\/', $mix);$/;"	v
pid	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^            $pid = '-';$/;"	v
pid	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $pid = getmypid();$/;"	v
pid	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^        $pid = pcntl_fork();$/;"	v
pid	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^        $pid = posix_getpid();$/;"	v
pid	src/vendor/phptars/tars-report/src/ServerInfo.php	/^    public $pid;$/;"	v
pidList	src/vendor/phptars/tars-server/src/cmd/Stop.php	/^        $pidList = implode(' ', $ret['pidList']);$/;"	v
ping	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function ping()$/;"	f
placeholders	src/vendor/catfan/medoo/src/Medoo.php	/^								$placeholders = [];$/;"	v
placeholders	src/vendor/catfan/medoo/src/Medoo.php	/^							$placeholders = [];$/;"	v
policy	src/vendor/phptars/tars-monitor/src/classes/StatPropInfo.php	/^    public $policy;$/;"	v
popHandler	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function popHandler()$/;"	f
popProcessor	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function popProcessor()$/;"	f
popProcessor	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^    public function popProcessor();$/;"	f
popProcessor	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function popProcessor()$/;"	f
popProcessor	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function popProcessor()$/;"	f
port	src/vendor/catfan/medoo/src/Medoo.php	/^				$port = $options[ 'port' ];$/;"	v
port	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $this->port = $urlInfo['port'];$/;"	v
port	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private $port;$/;"	v
port	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^        $this->port = $port;$/;"	v
port	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    protected $port;$/;"	v
port	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    public function __construct($ip, $port = 514)$/;"	v
port	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    public function __construct($host, $port = 514, $facility = LOG_USER, $level = Logger::DEBUG, $bubble = true, $ident = 'php')$/;"	v
port	src/vendor/phptars/tars-client/src/Communicator.php	/^        $port = empty($iPort) ? $this->_routeInfo[$index]['iPort'] : $iPort;$/;"	v
port	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public $port;$/;"	v
port	src/vendor/phptars/tars-report/src/ServerF.php	/^    public function __construct($ip = '', $port = '', $objName = '')$/;"	v
port	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^    public function __construct($ip = '', $port = '', $objName = '')$/;"	v
port	src/vendor/phptars/tars-report/src/ServerFSync.php	/^    public function __construct($ip = '', $port = '', $objName = '')$/;"	v
port	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $port = $data['port'];$/;"	v
port	src/vendor/phptars/tars-server/src/core/Server.php	/^        $port = $result['port'];$/;"	v
port	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->port = $tarsServerConf['listen'][0]['iPort'];$/;"	v
port	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $port = '8088';$/;"	v
port	src/vendor/phptars/tars-server/tests/testConf.php	/^        $port = trim($subParts[2], 'p ');$/;"	v
port	src/vendor/phptars/tars-utils/src/Utils.php	/^        $port = trim($subParts[2], 'p ');$/;"	v
pos	src/index.php	/^$pos = strpos($config_path, '--config=');$/;"	v
pos	src/vendor/composer/ClassLoader.php	/^        if (false !== $pos = strrpos($class, '\\\\')) {$/;"	v
pos	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^            $pos = $match[0][1];$/;"	v
pos	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $pos = strpos($stream, ':\/\/');$/;"	v
pos	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $pos = strpos($next, ',');$/;"	v
pos	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $pos = strpos($proto, '(');$/;"	v
pos	src/vendor/phptars/tars-server/tests/test.php	/^             $pos = strpos($next, ',');$/;"	v
pos	src/vendor/phptars/tars-server/tests/test.php	/^         $pos = strpos($proto, '(');$/;"	v
pos	src/vendor/phptars/tars-server/tests/testConf.php	/^                        $pos = strpos($line, '=');$/;"	v
pos	src/vendor/phptars/tars-utils/src/Utils.php	/^                        $pos = strpos($line, '=');$/;"	v
pos	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $pos = ftell($this->fp);$/;"	v
pos	src/vendor/phptars/tars2php/src/tars2php.php	/^        $pos = strrpos($this->fromFile, '\/', -1);$/;"	v
posix_getpid	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^     * @requires function posix_getpid$/;"	f
posix_kill	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^     * @requires function posix_kill$/;"	f
postData	src/vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^        $postData = array($/;"	v
postData	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $postData = $this->slackRecord->getSlackData($record);$/;"	v
postString	src/vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^        $postString = json_encode($postData);$/;"	v
postString	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $postString = json_encode($postData);$/;"	v
preConsts	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $preConsts = [];$/;"	v
preEnums	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->preEnums = $preEnums;$/;"	v
preEnums	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $preEnums = [];$/;"	v
preEnums	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $preEnums;$/;"	v
preEnums	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static $preEnums;$/;"	v
preNamespaceEnums	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->preNamespaceEnums = $preNamespaceEnums;$/;"	v
preNamespaceEnums	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $preNamespaceEnums = [];$/;"	v
preNamespaceEnums	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $preNamespaceEnums;$/;"	v
preNamespaceStructs	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->preNamespaceStructs = $preNamespaceStructs;$/;"	v
preNamespaceStructs	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $preNamespaceStructs = [];$/;"	v
preNamespaceStructs	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $preNamespaceStructs;$/;"	v
preStructs	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->preStructs = $preStructs;$/;"	v
preStructs	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $preStructs = [];$/;"	v
preStructs	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $preStructs;$/;"	v
preStructs	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static $preStructs;$/;"	v
prefix	src/libs/DbMysqli.php	/^    protected $prefix = '';$/;"	v
prefix	src/vendor/catfan/medoo/src/Medoo.php	/^			$this->prefix = $options[ 'prefix' ];$/;"	v
prefix	src/vendor/catfan/medoo/src/Medoo.php	/^	protected $prefix;$/;"	v
prefix	src/vendor/composer/ClassLoader.php	/^            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {$/;"	v
prefix	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public static $prefix = '';$/;"	v
prefixDirsPsr4	src/vendor/composer/ClassLoader.php	/^    private $prefixDirsPsr4 = array();$/;"	v
prefixDirsPsr4	src/vendor/composer/autoload_static.php	/^    public static $prefixDirsPsr4 = array ($/;"	v
prefixLengthsPsr4	src/vendor/composer/ClassLoader.php	/^    private $prefixLengthsPsr4 = array();$/;"	v
prefixLengthsPsr4	src/vendor/composer/autoload_static.php	/^    public static $prefixLengthsPsr4 = array ($/;"	v
prefixesPsr0	src/vendor/composer/ClassLoader.php	/^    private $prefixesPsr0 = array();$/;"	v
pregMatchByName	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static function pregMatchByName($name, $line)$/;"	f
prepareContentData	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    protected function prepareContentData($record)$/;"	f
prepareData	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function prepareData () {$/;"	f
preparing	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^     * Instance of the SlackRecord util class preparing data for Slack API.$/;"	c
preparing	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^     * Instance of the SlackRecord util class preparing data for Slack API.$/;"	c
prepend	src/vendor/composer/ClassLoader.php	/^    public function add($prefix, $paths, $prepend = false)$/;"	v
prepend	src/vendor/composer/ClassLoader.php	/^    public function addPsr4($prefix, $paths, $prepend = false)$/;"	v
prettyPrintFlag	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $prettyPrintFlag = defined('JSON_PRETTY_PRINT') ? JSON_PRETTY_PRINT : 128;$/;"	v
prev	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $prev = set_error_handler(array($this, 'handleError'), $errorTypes);$/;"	v
prev	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $prev = set_exception_handler(array($this, 'handleException'));$/;"	v
previous	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    private function formatException($exception, $previous = null)$/;"	v
previous	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $previous = new \\LogicException('Wut?');$/;"	v
previousCalled	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^        $previousCalled = 0;$/;"	v
previousErrorHandler	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^            $this->previousErrorHandler = $prev ?: true;$/;"	v
previousErrorHandler	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $previousErrorHandler;$/;"	v
previousExceptionHandler	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^            $this->previousExceptionHandler = $prev;$/;"	v
previousExceptionHandler	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $previousExceptionHandler;$/;"	v
previousSignalHandler	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^    private $previousSignalHandler = array();$/;"	v
previousText	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $previousText = '';$/;"	v
previousUserContext	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^                $previousUserContext = $this->ravenClient->context->user;$/;"	v
previousUserContext	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $previousUserContext = false;$/;"	v
primaryKey	src/model/mysql/content/ArticleAttr.php	/^    protected $primaryKey = "aa_id";$/;"	v
primaryKey	src/model/mysql/content/ArticleBasic.php	/^    protected $primaryKey = "ab_id";$/;"	v
primaryKey	src/model/mysql/content/ArticleDetails.php	/^    protected $primaryKey = "ad_id";$/;"	v
primaryKey	src/model/mysql/content/ArticleRelationship.php	/^    protected $primaryKey = "ar_id";$/;"	v
primaryKey	src/model/mysql/content/ArticleResource.php	/^    protected $primaryKey = "ar_id";$/;"	v
primaryKey	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                $primaryKey = $obj->primaryKey;$/;"	v
primaryKey	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $primaryKey = MysqliDb::$prefix . $joinObj->dbTable . "." . $joinObj->primaryKey;$/;"	v
primaryKey	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    protected $primaryKey = 'id';$/;"	v
priority	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^        $priority = $severity + $this->facility;$/;"	v
prm	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                    $prm = null;$/;"	v
prm	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $prm = isset($params[$k]) ? $params[$k] : null;$/;"	v
pro	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $pro = $this->connectionsSettings[$connectionName];$/;"	v
proc	src/vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^        $proc = new PsrLogMessageProcessor;$/;"	v
processAdmin	src/vendor/phptars/tars-server/src/core/Server.php	/^    private function processAdmin($unpackResult, $sFuncName, $response)$/;"	f
processAllWith	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function processAllWith (&$data, $shouldReset = true) {$/;"	f
processArrays	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function processArrays (&$data) {$/;"	f
processHasOneWith	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function processHasOneWith () {$/;"	f
processName	src/vendor/phptars/tars-server/src/core/Server.php	/^                        $processName = $application.'.'.$serverName;$/;"	v
processRecord	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php	/^    protected function processRecord(array $record)$/;"	f
processed	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^            $processed = array();$/;"	v
processed	src/vendor/monolog/monolog/src/Monolog/Handler/WhatFailureGroupHandler.php	/^            $processed = array();$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^        $processor = function () {};$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $processor = $this->getMockBuilder('Monolog\\Processor\\WebProcessor')$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/GitProcessorTest.php	/^        $processor = new GitProcessor();$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $processor = new IntrospectionProcessor();$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $processor = new IntrospectionProcessor(Logger::CRITICAL);$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php	/^        $processor = new MemoryPeakUsageProcessor();$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php	/^        $processor = new MemoryPeakUsageProcessor(true, false);$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php	/^        $processor = new MemoryUsageProcessor();$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php	/^        $processor = new MemoryUsageProcessor(true, false);$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/MercurialProcessorTest.php	/^        $processor = new MercurialProcessor();$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/ProcessIdProcessorTest.php	/^        $processor = new ProcessIdProcessor();$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php	/^        $processor = new TagProcessor($tags);$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php	/^        $processor = new UidProcessor();$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php	/^        $processor = new UidProcessor(10);$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^        $processor = new WebProcessor($server);$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^        $processor = new WebProcessor($server, array('url' => 'REMOTE_ADDR'));$/;"	v
processor	src/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^        $processor = new WebProcessor($server, array('url', 'http_method'));$/;"	v
processor1	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^        $processor1 = new WebProcessor;$/;"	v
processor1	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $processor1 = new WebProcessor;$/;"	v
processor2	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^        $processor2 = new WebProcessor;$/;"	v
processor2	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $processor2 = new WebProcessor;$/;"	v
processorUid1	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $processorUid1 = new Processor\\UidProcessor(10);$/;"	v
processorUid2	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $processorUid2 = new Processor\\UidProcessor(5);$/;"	v
processors	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    protected $processors = array();$/;"	v
processors	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^        $this->processors = $processors;$/;"	v
processors	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected $processors;$/;"	v
prop	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            foreach ($bindParams as $prop => $val) {$/;"	v
prop	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        foreach ($this->_orderBy as $prop => $value) {$/;"	v
propInfo	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^            $propInfo = new StatPropInfo();$/;"	v
propInfo	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $propInfo = new StatPropInfo();$/;"	v
propMsgBody	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^            $propMsgBody = new StatPropMsgBody();$/;"	v
propMsgHead	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^            $propMsgHead = new StatPropMsgHead();$/;"	v
property	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->property = $config['tars']['application']['client']['property'];$/;"	v
property	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->property = $property;$/;"	v
property	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $property = 'tars.tarsproperty.PropertyObj';$/;"	v
property	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->property = $config['tars']['application']['client']['property'];$/;"	v
property	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->property = $property;$/;"	v
property	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $property = 'tars.tarsproperty.PropertyObj';$/;"	v
propertyFWrapper	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $propertyFWrapper = new PropertyFWrapper($locator, 2, $application . '.' . $serverName);$/;"	v
propertyName	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^    public function __construct($locator, $socketMode, $propertyName = 'tars.tarsproperty.PropertyObj')$/;"	v
propertyName	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $propertyName = 'tars.tarsproperty.PropertyObj'$/;"	v
propertyName	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgHead.php	/^    public $propertyName;$/;"	v
proto	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                        $proto = $this->createInstance($inParam['proto']);$/;"	v
proto	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                        $proto = new $inParam['proto']();$/;"	v
protoName	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                    $protoName = null;$/;"	v
protoName	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $protoName = 'proto' . $index;$/;"	v
protocol	src/vendor/phptars/tars-server/src/core/Event.php	/^        $this->protocol = $protocol;$/;"	v
protocol	src/vendor/phptars/tars-server/src/core/Event.php	/^    protected $protocol;$/;"	v
protocol	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->protocol = ProtocolFactory::getProtocol($this->protocolName);$/;"	v
protocol	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $protocol;$/;"	v
protocolIns	src/vendor/phptars/tars-server/src/protocol/ProtocolFactory.php	/^            $protocolIns = 'Tars\\\\protocol\\\\' . strtoupper($protocolName) . 'Protocol';$/;"	v
protocolName	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->protocolName = $tarsServerConf['protocolName'];$/;"	v
protocolName	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $protocolName = 'tars';$/;"	v
provideBatchRecords	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function provideBatchRecords()$/;"	f
provideConnectorMethodsOptionsSets	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public static function provideConnectorMethodsOptionsSets()$/;"	f
provideDumperOptionsValues	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public static function provideDumperOptionsValues()$/;"	f
provideLevelColors	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function provideLevelColors()$/;"	f
provideLevelColors	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function provideLevelColors()$/;"	f
provideLevelsAndMessages	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function provideLevelsAndMessages()$/;"	f
providerTestConnectionErrors	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function providerTestConnectionErrors()$/;"	f
providesDetectAndCleanUtf8	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function providesDetectAndCleanUtf8()$/;"	f
providesHandleJsonErrorFailure	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function providesHandleJsonErrorFailure()$/;"	f
providing	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^ * Base Handler class providing the Handler structure$/;"	c
providing	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php	/^ * Base Handler class providing the Handler structure$/;"	c
psrLogger	src/vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        $psrLogger = $this->getMock('Psr\\Log\\NullLogger');$/;"	v
publish	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfMockMessagePublisher.php	/^    public function publish(Message $message)$/;"	f
publisher	src/vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^        $this->publisher = $publisher;$/;"	v
publisher	src/vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^    protected $publisher;$/;"	v
pushHandler	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function pushHandler(HandlerInterface $handler)$/;"	f
pushProcessor	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function pushProcessor($callback)$/;"	f
pushProcessor	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^    public function pushProcessor($callback);$/;"	f
pushProcessor	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function pushProcessor($callback)$/;"	f
pushProcessor	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function pushProcessor($callback)$/;"	f
putBool	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putBool($paramName, $tag, $bool, $iVersion)$/;"	f
putBool	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putBool($paramName, $tag, $bool, $iVersion)$/;"	f
putBool	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putBool($paramName, $tag, $bool, $iVersion)$/;"	f
putBool	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putBool($paramName, $tag, $bool, $iVersion)$/;"	f
putChar	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putChar($paramName, $tag, $char, $iVersion)$/;"	f
putChar	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putChar($paramName, $tag, $char, $iVersion)$/;"	f
putChar	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putChar($paramName, $tag, $char, $iVersion)$/;"	f
putChar	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putChar($paramName, $tag, $char, $iVersion)$/;"	f
putDouble	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putDouble($paramName, $tag, $double, $iVersion)$/;"	f
putDouble	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putDouble($paramName, $tag, $double, $iVersion)$/;"	f
putDouble	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putDouble($paramName, $tag, $double, $iVersion)$/;"	f
putDouble	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putDouble($paramName, $tag, $double, $iVersion)$/;"	f
putFloat	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putFloat($paramName, $tag, $float, $iVersion)$/;"	f
putFloat	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putFloat($paramName, $tag, $float, $iVersion)$/;"	f
putFloat	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putFloat($paramName, $tag, $float, $iVersion)$/;"	f
putFloat	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putFloat($paramName, $tag, $float, $iVersion)$/;"	f
putInt32	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putInt32($paramName, $tag, $int, $iVersion)$/;"	f
putInt32	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putInt32($paramName, $tag, $int, $iVersion)$/;"	f
putInt32	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putInt32($paramName, $tag, $int, $iVersion)$/;"	f
putInt32	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putInt32($paramName, $tag, $int, $iVersion)$/;"	f
putInt64	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putInt64($paramName, $tag, $bigint, $iVersion)$/;"	f
putInt64	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putInt64($paramName, $tag, $bigint, $iVersion)$/;"	f
putInt64	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putInt64($paramName, $tag, $bigint, $iVersion)$/;"	f
putInt64	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putInt64($paramName, $tag, $bigint, $iVersion)$/;"	f
putMap	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putMap($paramName, $tag, $map, $iVersion)$/;"	f
putMap	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putMap($paramName, $tag, $map, $iVersion)$/;"	f
putMap	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putMap($paramName, $tag, $map, $iVersion)$/;"	f
putMap	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putMap($paramName, $tag, $map, $iVersion)$/;"	f
putShort	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putShort($paramName, $tag, $short, $iVersion)$/;"	f
putShort	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putShort($paramName, $tag, $short, $iVersion)$/;"	f
putShort	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putShort($paramName, $tag, $short, $iVersion)$/;"	f
putShort	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putShort($paramName, $tag, $short, $iVersion)$/;"	f
putString	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putString($paramName, $tag, $string, $iVersion)$/;"	f
putString	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putString($paramName, $tag, $string, $iVersion)$/;"	f
putString	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putString($paramName, $tag, $string, $iVersion)$/;"	f
putString	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putString($paramName, $tag, $string, $iVersion)$/;"	f
putStruct	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putStruct($paramName, $tag, $obj, $iVersion)$/;"	f
putStruct	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putStruct($paramName, $tag, $obj, $iVersion)$/;"	f
putStruct	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putStruct($paramName, $tag, $obj, $iVersion)$/;"	f
putStruct	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putStruct($paramName, $tag, $obj, $iVersion)$/;"	f
putUInt16	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putUInt16($paramName, $tag, $uint16, $iVersion)$/;"	f
putUInt16	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putUInt16($paramName, $tag, $uint16, $iVersion)$/;"	f
putUInt16	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putUInt16($paramName, $tag, $uint16, $iVersion)$/;"	f
putUInt16	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putUInt16($paramName, $tag, $uint16, $iVersion)$/;"	f
putUInt8	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putUInt8($paramName, $tag, $uint8, $iVersion)$/;"	f
putUInt8	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putUInt8($paramName, $tag, $uint8, $iVersion)$/;"	f
putUInt8	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putUInt8($paramName, $tag, $uint8, $iVersion)$/;"	f
putUInt8	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putUInt8($paramName, $tag, $uint8, $iVersion)$/;"	f
putUint32	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putUint32($paramName, $tag, $uint, $iVersion)$/;"	f
putUint32	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putUint32($paramName, $tag, $uint, $iVersion)$/;"	f
putUint32	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putUint32($paramName, $tag, $uint, $iVersion)$/;"	f
putUint32	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putUint32($paramName, $tag, $uint, $iVersion)$/;"	f
putVector	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^    public static function putVector($paramName, $tag, $vec, $iVersion)$/;"	f
putVector	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^    public static function putVector($paramName, $tag, $vec, $iVersion)$/;"	f
putVector	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^    public static function putVector($paramName, $tag, $vec, $iVersion)$/;"	f
putVector	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^    public static function putVector($paramName, $tag, $vec, $iVersion)$/;"	f
qos	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public $qos;$/;"	v
quardupleTab	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $quardupleTab = "\\t\\t\\t\\t";$/;"	v
query	src/vendor/catfan/medoo/src/Medoo.php	/^			$query = str_replace($key, $replace, $query);$/;"	v
query	src/vendor/catfan/medoo/src/Medoo.php	/^		$query = $this->buildRaw($raw, $map);$/;"	v
query	src/vendor/catfan/medoo/src/Medoo.php	/^		$query = $this->exec($this->selectContext($table, $map, $join, $column, $where, strtoupper($type)), $map);$/;"	v
query	src/vendor/catfan/medoo/src/Medoo.php	/^		$query = $this->exec($this->selectContext($table, $map, $join, $columns, $where) . ' LIMIT 1', $map);$/;"	v
query	src/vendor/catfan/medoo/src/Medoo.php	/^		$query = $this->exec($this->selectContext($table, $map, $join, $columns, $where), $map);$/;"	v
query	src/vendor/catfan/medoo/src/Medoo.php	/^		$query = $this->exec('SELECT EXISTS(' . $this->selectContext($table, $map, $join, $column, $where, 1) . ')', $map);$/;"	v
query	src/vendor/catfan/medoo/src/Medoo.php	/^		$query = preg_replace($/;"	v
query	src/vendor/catfan/medoo/src/Medoo.php	/^		$query = preg_replace_callback($/;"	v
query	src/vendor/catfan/medoo/src/Medoo.php	/^	public function query($query, $map = [])$/;"	f
query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $query = $this->_query;$/;"	v
query	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function query($query, $numRows = null)$/;"	f
queryUnprepared	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^	private function queryUnprepared($query)$/;"	f
queueSize	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->queueSize = $queueSize;$/;"	v
queueSize	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->queueSize = 20000;$/;"	v
queueSize	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->queueSize = $queueSize;$/;"	v
queueSize	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->queueSize = 20000;$/;"	v
quote	src/vendor/catfan/medoo/src/Medoo.php	/^	public function quote($string)$/;"	f
quote	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function quote($arg)$/;"	f
rand	src/vendor/catfan/medoo/src/Medoo.php	/^	public function rand($table, $join = null, $columns = null, $where = null)$/;"	f
ravenClient	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $this->ravenClient = $ravenClient;$/;"	v
ravenClient	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected $ravenClient;$/;"	v
ravenClient	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $ravenClient = $this->getRavenClient();$/;"	v
raw	src/vendor/catfan/medoo/src/Medoo.php	/^			elseif (!is_int($key) && $raw = $this->buildRaw($value, $map))$/;"	v
raw	src/vendor/catfan/medoo/src/Medoo.php	/^		$raw = $this->raw($query, $map);$/;"	v
raw	src/vendor/catfan/medoo/src/Medoo.php	/^		$raw = new Raw();$/;"	v
raw	src/vendor/catfan/medoo/src/Medoo.php	/^	public static function raw($string, $map = [])$/;"	f
rawQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function rawQuery($query, $bindParams = null)$/;"	f
rawQueryOne	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function rawQueryOne($query, $bindParams = null)$/;"	f
rawQueryValue	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function rawQueryValue($query, $bindParams = null)$/;"	f
raw_map	src/vendor/catfan/medoo/src/Medoo.php	/^		$raw_map = $raw->map;$/;"	v
read	src/vendor/phptars/tars-client/src/Communicator.php	/^        $read = array($sock);$/;"	v
read	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $read = array($sock);$/;"	v
realUsage	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^        $this->realUsage = (bool) $realUsage;$/;"	v
realUsage	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^    protected $realUsage;$/;"	v
receivedMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^                $receivedMessage = $value;$/;"	v
receivedMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $receivedMessage = null;$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^        $record = parent::format($record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        $record = parent::format($record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^        $record = parent::format($record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^            $record = '[...]';$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^        $record = $this->normalize($record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php	/^                $record = call_user_func($processor, $record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php	/^        $record = $this->processRecord($record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^            $record = $this->processRecord($record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^                $record = call_user_func($processor, $record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^            $record = array($/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^                $record = call_user_func($processor, $record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^                $record = call_user_func($processor, $record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $record = end($this->buffer) ?: null;$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^                $record = call_user_func($processor, $record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            $record = $this->processRecord($record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $record = array_reduce($records, function ($highest, $record) {$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^                    $record = call_user_func($processor, $record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $record = $this->excludeFields($record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^            $record = array('message' => $record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Handler/WhatFailureGroupHandler.php	/^                $record = call_user_func($processor, $record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^                $record = call_user_func($processor, $record);$/;"	v
record	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^        $record = array($/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^        $record = array($/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^        $record = $this->getRecord();$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^        $record = $this->getRecord(Logger::ERROR);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^        $record = $this->getRecord(Logger::WARNING);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $record = array($/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $record = $this->getRecord();$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^        $record = $this->getRecord();$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $record = array($/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $record = array($/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $record = array('context' => array('exception' => $e));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $record = new \\stdClass;$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^        $record = array($/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $record = $this->getRecord(Logger::WARNING, 'test', array('data' => new \\stdClass, 'foo' => 34));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/CouchDBHandlerTest.php	/^        $record = $this->getRecord(Logger::WARNING, 'test', array('data' => new \\stdClass, 'foo' => 34));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^        $record = $this->getRecord(Logger::CRITICAL);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^        $record = $this->getRecord(Logger::ERROR);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^        $record = $this->getRecord(Logger::WARNING, 'test', array('data' => new \\stdClass, 'foo' => 34));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^        $record = $this->getRecord();$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $record = $this->getRecord(Logger::DEBUG);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^        $record = array($/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^        $record = $this->getRecord(Logger::DEBUG, "A test debug message");$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^        $record = $this->getRecord(Logger::WARNING, "A test warning message");$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $record = $this->getRecord(Logger::DEBUG, "A test debug message");$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $record = $this->getRecord(Logger::WARNING, "A test warning message");$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^        $record = $this->getRecord();$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^        $record = $this->getRecord();$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^        $record = $this->getRecord(Logger::WARNING, 'test', array('data' => new \\stdClass, 'foo' => 34));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $record = $this->getRecord(Logger::ERROR, 'log message');$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $record = $this->getRecord(Logger::ERROR, 'log message', array('a' => 'b'));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^            $record = $this->getRecord(Logger::ERROR, $e->getMessage(), array('exception' => $e));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::DEBUG, 'A test debug message');$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::INFO, 'test');$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::INFO, 'test', array('checksum' => $checksum, 'release' => $release, 'event_id' => $eventId));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::INFO, 'test', array('fingerprint' => $fingerprint));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::INFO, 'test', array('release' => $localRelease));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::INFO, 'test', array('tags' => $tags));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::WARNING, 'A test warning message');$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $record = $this->getRecord(Logger::WARNING, 'test', array('data' => new \\stdClass, 'foo' => 34));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = $this->getRecord($/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = $this->getRecord();$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = $this->getRecord(Logger::CRITICAL, 'This is a critical message.', array('exception' => new \\Exception()));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord($channel);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord();$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, $username);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, null, false);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, null, false, null, false, false, array(), $formatter);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, null, true, null);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, null, true, null, false, true);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, null, true, null, true);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, null, true, null, true, true);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^        $record = $this->getRecord();$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^        $record  = $this->getRecord(Logger::WARNING, 'test', array('foo' => 'bar'));$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^        $record  = $this->getRecord(Logger::WARNING, 'test', array());$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^        $record = $this->getRecord($level, 'test'.$method);$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^        $record = $this->getRecord();$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Processor/GitProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Processor/MercurialProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Processor/ProcessIdProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	src/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record2	src/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^        $record2 = $this->getRecord(Logger::CRITICAL);$/;"	v
record3	src/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^        $record3 = $this->getRecord(Logger::CRITICAL);$/;"	v
recordWithContext	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $recordWithContext = $this->getRecord(Logger::INFO, 'test', array('user' => $user));$/;"	v
recordWithNoContext	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $recordWithNoContext = $this->getRecord(Logger::INFO, 'test with default user context');$/;"	v
records	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected static $records = array();$/;"	v
records	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^            $records = $processed;$/;"	v
records	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $records = array_filter($records, function ($record) use ($level) {$/;"	v
records	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $records = array_filter($records, function ($record) use ($level) {$/;"	v
records	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^        $this->records = array();$/;"	v
records	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    protected $records = array();$/;"	v
records	src/vendor/monolog/monolog/src/Monolog/Handler/WhatFailureGroupHandler.php	/^            $records = $processed;$/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^        $records = array($/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^        $records = array($/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $records = $expected = array($/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $records = array($/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $records = $test->getRecords();$/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $records = $test->getRecords();$/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $records = $test->getRecords();$/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^            $records = $test->getRecords();$/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^        $records = $test->getRecords();$/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^        $records = $this->getMultipleRecords();$/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $records = array($/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^        $records = array($/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^        $records = array($record);$/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $records = $this->getMultipleRecords();$/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $records = array($/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $records = array($/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^        $records = $handler->getRecords();$/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^            $records = $test->getRecords();$/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $records = $test->getRecords();$/;"	v
records	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^        $records = $handler->getRecords();$/;"	v
recordsByLevel	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^        $this->recordsByLevel = array();$/;"	v
recordsByLevel	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    protected $recordsByLevel = array();$/;"	v
redis	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^ *   $redis = new RedisHandler(new Predis\\Client("tcp:\/\/localhost:6379"), "logs", "prod");$/;"	v
redis	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redis = $this->getMock('Predis\\Client');$/;"	v
redis	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redis = $this->getMock('Predis\\Client', array('rpush'));$/;"	v
redis	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redis = $this->getMock('Predis\\Client', array('transaction'));$/;"	v
redis	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redis = $this->getMock('Redis');$/;"	v
redis	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redis = $this->getMock('Redis', array('multi', 'rpush', 'ltrim', 'exec'));$/;"	v
redis	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redis = $this->getMock('Redis', array('rpush'));$/;"	v
redis	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^        $redis = new \\Redis();$/;"	v
redisClient	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^        $this->redisClient = $redis;$/;"	v
redisClient	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    private $redisClient;$/;"	v
redisKey	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^            $redisKey = $this->redisKey;$/;"	v
redisKey	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^        $this->redisKey = $key;$/;"	v
redisKey	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    private $redisKey;$/;"	v
redisStoreCachePrefix	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^            $this->redisStoreCachePrefix = $config['cachePrefix'];$/;"	v
redisStoreCachePrefix	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    protected $redisStoreCachePrefix = 'redis_store_cache_';$/;"	v
redisTransaction	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redisTransaction = $this->getMock('Predis\\Client', array('rpush', 'ltrim'));$/;"	v
refValues	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function refValues(array &$arr)$/;"	f
reflDepth	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $reflDepth = new\\ReflectionProperty($formatter, 'maxNestingLevel');$/;"	v
reflMethod	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $reflMethod = new \\ReflectionMethod($formatter, 'handleJsonError');$/;"	v
reflMethod	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $reflMethod = new \\ReflectionMethod($formatter, 'toJson');$/;"	v
reflMethod	src/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^        $reflMethod = new \\ReflectionMethod('Monolog\\Handler\\BrowserConsoleHandler', 'generateScript');$/;"	v
reflTrace	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $reflTrace = new \\ReflectionProperty($formatter, 'exceptionTraceAsString');$/;"	v
reflectionProperty	src/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^        $reflectionProperty = new \\ReflectionProperty('\\Monolog\\Handler\\SocketHandler', 'connectionString');$/;"	v
reflectionProperty	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $reflectionProperty = new \\ReflectionProperty('\\Monolog\\Handler\\SocketHandler', 'connectionString');$/;"	v
reflectionProperty	src/vendor/monolog/monolog/tests/Monolog/Handler/InsightOpsHandlerTest.php	/^        $reflectionProperty = new \\ReflectionProperty('\\Monolog\\Handler\\SocketHandler', 'connectionString');$/;"	v
reflectionProperty	src/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $reflectionProperty = new \\ReflectionProperty('\\Monolog\\Handler\\SocketHandler', 'connectionString');$/;"	v
reflectionProperty	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $reflectionProperty = new \\ReflectionProperty('\\Monolog\\Handler\\SocketHandler', 'connectionString');$/;"	v
reflectionProperty	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^        $reflectionProperty = new \\ReflectionProperty('\\Monolog\\Handler\\SocketHandler', 'connectionString');$/;"	v
reflectionProperty	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^            $reflectionProperty = new \\ReflectionProperty(get_class($object), $property);$/;"	v
refreshEndpointInterval	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->refreshEndpointInterval = $config['tars']['application']['client']['refresh-endpoint-interval'];$/;"	v
refreshEndpointInterval	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->refreshEndpointInterval = $refreshEndpointInterval;$/;"	v
refreshEndpointInterval	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $refreshEndpointInterval = 60;$/;"	v
refreshEndpointInterval	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->refreshEndpointInterval = $config['tars']['application']['client']['refreshEndpointInterval'];$/;"	v
refreshEndpointInterval	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->refreshEndpointInterval = $refreshEndpointInterval;$/;"	v
refreshEndpointInterval	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $refreshEndpointInterval = '60';$/;"	v
refreshInterval	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^    public function __construct($locator, $socketMode, $refreshInterval = 60000)$/;"	v
refs	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $refs = array();$/;"	v
regexp	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                    $regexp = "\/^[0-9\\.]*$\/";$/;"	v
regexp	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                    $regexp = "\/^[0-9]*$\/";$/;"	v
regexp	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                    $regexp = "\/^[0-9a-zA-Z -:]*$\/";$/;"	v
regexp	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                    $regexp = $type;$/;"	v
regexp	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                    $regexp = '\/^(yes|no|0|1|true|false)$\/i';$/;"	v
regexp	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                    $regexp = null;$/;"	v
region	src/vendor/monolog/monolog/src/Monolog/Handler/InsightOpsHandler.php	/^    public function __construct($token, $region = 'us', $useSSL = true, $level = Logger::DEBUG, $bubble = true)$/;"	v
register	src/vendor/composer/ClassLoader.php	/^    public function register($prepend = false)$/;"	f
register	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public static function register(LoggerInterface $logger, $errorLevelMap = array(), $exceptionLevel = null, $fatalLevel = null)$/;"	f
registerErrorHandler	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function registerErrorHandler(array $levelMap = array(), $callPrevious = true, $errorTypes = -1, $handleOnlyReportedErrors = true)$/;"	f
registerExceptionHandler	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function registerExceptionHandler($level = null, $callPrevious = true)$/;"	f
registerFatalHandler	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function registerFatalHandler($level = null, $reservedMemorySize = 20)$/;"	f
registerShutdownFunction	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected function registerShutdownFunction()$/;"	f
registerSignalHandler	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^    public function registerSignalHandler($signo, $level = LogLevel::CRITICAL, $callPrevious = true, $restartSyscalls = true, $async = true)$/;"	f
relation	src/vendor/catfan/medoo/src/Medoo.php	/^							$relation = 'ON ' . implode($joins, ' AND ');$/;"	v
relation	src/vendor/catfan/medoo/src/Medoo.php	/^							$relation = 'USING ("' . implode($relation, '", "') . '")';$/;"	v
relation	src/vendor/catfan/medoo/src/Medoo.php	/^						$relation = 'USING ("' . $relation . '")';$/;"	v
relationType	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $relationType = strtolower ($opts[0]);$/;"	v
relationType	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $relationType = strtolower ($this->relations[$name][0]);$/;"	v
relationship	src/vendor/catfan/medoo/src/Medoo.php	/^				$relationship = $relation_match[ 1 ];$/;"	v
relationship_list	src/model/mysql/content/ArticleBasic.php	/^        $relationship_list = $articleRelationship->getRelationShipInAbId($ab_ids);$/;"	v
release	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $this->release = $value;$/;"	v
release	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected $release;$/;"	v
release	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $release = '05a671c66aefea124cc08b76ea6d30bb';$/;"	v
release	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $release = 'v42.42.42';$/;"	v
reload	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function reload()$/;"	f
removeLogger	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function removeLogger($logger)$/;"	f
removedLoggerProvider	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function removedLoggerProvider()$/;"	f
replace	src/vendor/catfan/medoo/src/Medoo.php	/^				$replace = $this->quote($value[ 0 ]);$/;"	v
replace	src/vendor/catfan/medoo/src/Medoo.php	/^				$replace = $value[ 0 ];$/;"	v
replace	src/vendor/catfan/medoo/src/Medoo.php	/^				$replace = 'NULL';$/;"	v
replace	src/vendor/catfan/medoo/src/Medoo.php	/^				$replace = '{LOB_DATA}';$/;"	v
replace	src/vendor/catfan/medoo/src/Medoo.php	/^	public function replace($table, $columns, $where = null)$/;"	f
replace	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function replace($tableName, $insertData)$/;"	f
replaceNewlines	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected function replaceNewlines($str)$/;"	f
replacePlaceHolders	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function replacePlaceHolders($str, $vals)$/;"	f
replacements	src/vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php	/^        $replacements = array();$/;"	v
reportInterval	src/vendor/phptars/tars-client/src/Communicator.php	/^            $reportInterval = empty($config->getReportInterval()) ? 60000 : $config->getReportInterval();$/;"	v
reportInterval	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->reportInterval = $config['tars']['application']['client']['report-interval'];$/;"	v
reportInterval	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->reportInterval = $reportInterval;$/;"	v
reportInterval	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $reportInterval = 60000;$/;"	v
reportInterval	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $reportInterval = 60000$/;"	v
reportInterval	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->reportInterval = $config['tars']['application']['client']['reportInterval'];$/;"	v
reportInterval	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->reportInterval = $reportInterval;$/;"	v
reportInterval	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $reportInterval = '60';$/;"	v
reportInterval	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $reportInterval = $data['client']['report-interval'];$/;"	v
reportMicMsg	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^    public function reportMicMsg($msg, $bFromClient)$/;"	f
reportMicMsg	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    public function reportMicMsg($msg, $bFromClient = true)$/;"	f
reportPropMsg	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^    public function reportPropMsg($statmsg)$/;"	f
reportPropMsg	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^    public function reportPropMsg($statmsg)$/;"	f
reportSampleMsg	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^    public function reportSampleMsg($msg)$/;"	f
reportedExceptionArguments	src/vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    public $reportedExceptionArguments = null;$/;"	v
req	src/vendor/phptars/tars-server/src/core/Server.php	/^        $req = new Request();$/;"	v
reqBuf	src/vendor/phptars/tars-server/src/core/Request.php	/^    public $reqBuf;$/;"	v
request	src/vendor/phptars/tars-server/src/core/Server.php	/^        $request = new Request();$/;"	v
requestBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^            $requestBuf = $requestPacket->encode();$/;"	v
requestBuf	src/vendor/phptars/tars-client/src/RequestPacket.php	/^            $requestBuf = \\TUPAPI::encode($this->_iVersion, $this->_iRequestId,$/;"	v
requestBuf	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^            $requestBuf = $requestPacket->encode();$/;"	v
requestBuf	src/vendor/phptars/tars-monitor/src/client/RequestPacket.php	/^            $requestBuf = \\TUPAPI::encode($this->_iVersion, $this->_iRequestId,$/;"	v
requestBuf	src/vendor/phptars/tars-monitor/src/client/RequestPacketMonitor.php	/^            $requestBuf = \\TUPAPI::encode($this->_iVersion, $this->_iRequestId,$/;"	v
requestBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $requestBuf = $requestPacket->encode();$/;"	v
requestBuf	src/vendor/phptars/tars-registry/src/client/RequestPacketRegistry.php	/^            $requestBuf = \\TUPAPI::encode($this->_iVersion, $this->_iRequestId,$/;"	v
requestPacket	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $requestPacket = new RequestPacket();$/;"	v
requestPacket	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $requestPacket = new RequestPacket();$/;"	v
requestPacket	src/vendor/phptars/tars-log/src/LogServant.php	/^        $requestPacket = new RequestPacket();$/;"	v
requestPacket	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^            $requestPacket = new RequestPacketMonitor();$/;"	v
requestPacket	src/vendor/phptars/tars-monitor/src/StatFServant.php	/^            $requestPacket = new RequestPacketMonitor();$/;"	v
requestPacket	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $requestPacket = new RequestPacketRegistry();$/;"	v
requestPacket	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$requestPacket = new RequestPacket();$/;"	v
requireFlag	src/vendor/phptars/tars2php/src/tars2php.php	/^            $requireFlag = 'false';$/;"	v
requireFlag	src/vendor/phptars/tars2php/src/tars2php.php	/^            $requireFlag = 'true';$/;"	v
requireType	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $requireType = $word;$/;"	v
required	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                $required = true;$/;"	v
required	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $required = false;$/;"	v
res	src/libs/Mysql.php	/^        $res = $this->db->insert($this->dbTable,$data);$/;"	v
res	src/model/mysql/content/ArticleRelationship.php	/^        $res = $this->saveAllMvs($save);$/;"	v
res	src/service/article/Article.php	/^            $res = $articleRelationshipModel->saveRelation($data['relation'],$ab_id);$/;"	v
res	src/service/article/Article.php	/^            $res = $articleRelationshipModel->updateRelation($data['relation'],$ab_id);$/;"	v
res	src/service/article/Article.php	/^            $res = $articleResourceModel->saveResource($data['resource'],$ab_id);$/;"	v
res	src/service/article/Article.php	/^            $res = $articleResourceModel->updateResource($data['resource'],$ab_id);$/;"	v
res	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $res = $this->ArrayBuilder()->get($tableName, $limit, "{$column} AS retval");$/;"	v
res	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $res = $this->_dynamicBindResults($stmt);$/;"	v
res	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $res = $this->get($tableName, 1, $columns);$/;"	v
res	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $res = $this->rawQuery($query, $bindParams);$/;"	v
res	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $res = $this->withTotalCount()->get ($table, Array ($offset, $this->pageLimit), $fields);$/;"	v
res	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $res = $this->db->ArrayBuilder()->getValue ($this->dbTable, "count(*)");$/;"	v
res	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $res = $this->db->paginate ($this->dbTable, $page, $fields);$/;"	v
res	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $res = $this->getResource();$/;"	v
res	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $res = $this->getResource();$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $res = $formatter->format(array($/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $res = $formatter->format(array($/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $res = $reflMethod->invoke($formatter, $record);$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $res = $reflMethod->invoke($formatter, array($foo, $bar), true);$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $res = $reflMethod->invoke($formatter, array($resource), true);$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $res = $reflMethod->invoke($formatter, array('message' => "\\xA4\\xA6\\xA8\\xB4\\xB8\\xBC\\xBD\\xBE"));$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        if (PHP_VERSION_ID < 50500 && $res === '{"message":null}') {$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^        $this->res = fopen('php:\/\/memory', 'a');$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^    private $res;$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $this->res = fopen('php:\/\/memory', 'a');$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    private $res;$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $this->res = fopen('php:\/\/memory', 'a');$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^    private $res;$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $this->res = fopen('php:\/\/memory', 'a');$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    private $res;$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^        $this->res = fopen('php:\/\/memory', 'a');$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    private $res;$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $res = $this->res;$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $this->res = fopen('php:\/\/memory', 'a');$/;"	v
res	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    private $res;$/;"	v
reservedMemory	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->reservedMemory = null;$/;"	v
reservedMemory	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->reservedMemory = str_repeat(' ', 1024 * $reservedMemorySize);$/;"	v
reservedMemory	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $reservedMemory;$/;"	v
reservedMemorySize	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function registerFatalHandler($level = null, $reservedMemorySize = 20)$/;"	v
reset	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function reset()$/;"	f
reset	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function reset()$/;"	f
reset	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    public function reset()$/;"	f
reset	src/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function reset()$/;"	f
reset	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function reset()$/;"	f
reset	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    public function reset()$/;"	f
reset	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function reset()$/;"	f
reset	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    public function reset()$/;"	f
reset	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    public function reset()$/;"	f
reset	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function reset()$/;"	f
reset	src/vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^    public function reset()$/;"	f
reset	src/vendor/monolog/monolog/src/Monolog/ResettableInterface.php	/^    public function reset();$/;"	f
resetStatic	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    public static function resetStatic()$/;"	f
resetStatic	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    public static function resetStatic()$/;"	f
resetStatic	src/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    public static function resetStatic()$/;"	f
resource	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^            $resource = $this->fsockopen();$/;"	v
resource	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^            $resource = $this->pfsockopen();$/;"	v
resource	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^            $this->resource = null;$/;"	v
resource	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->resource = $resource;$/;"	v
resource	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $resource;$/;"	v
resource	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^            $resource = fopen('php:\/\/memory', 'rw+');$/;"	v
resource	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $resource = fopen(__FILE__, 'r');$/;"	v
resource	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $this->resource = $resource;$/;"	v
resource	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public $resource;$/;"	v
resource	src/vendor/monolog/monolog/tests/Monolog/Handler/InsightOpsHandlerTest.php	/^        $this->resource = fopen('php:\/\/memory', 'a');$/;"	v
resource	src/vendor/monolog/monolog/tests/Monolog/Handler/InsightOpsHandlerTest.php	/^    private $resource;$/;"	v
resource	src/vendor/phptars/tars-server/src/core/Response.php	/^    public $resource;$/;"	v
resource_list	src/model/mysql/content/ArticleBasic.php	/^        $resource_list = $articleResource->getResourceInAbId($ab_ids);$/;"	v
resp	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $resp = $client->request("\/{$index}\/{$type}\/{$documentId}", Request::GET);$/;"	v
resp	src/vendor/phptars/tars-server/src/core/Server.php	/^        $resp = new Response();$/;"	v
respBuf	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^\/\/        $respBuf = $decodeRet['sBuffer'];$/;"	v
response	src/vendor/phptars/tars-server/src/core/Server.php	/^        $response = new Response();$/;"	v
responseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^                        $responseBuf = $this->socketTcp($ip, $port,$/;"	v
responseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^                        $responseBuf = $this->socketUdp($ip, $port, $requestBuf, $timeout);$/;"	v
responseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^                        $responseBuf = $this->swooleCoroutineTcp($ip, $port,$/;"	v
responseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^                        $responseBuf = $this->swooleCoroutineUdp($ip, $port, $requestBuf, $timeout);$/;"	v
responseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^                        $responseBuf = $this->swooleTcp($ip, $port,$/;"	v
responseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^                        $responseBuf = $this->swooleUdp($ip, $port, $requestBuf, $timeout);$/;"	v
responseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^                    $responseBuf = $data;$/;"	v
responseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^                $responseBuf = $data;$/;"	v
responseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^            $responseBuf = $out;$/;"	v
responseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^            $responseBuf = '';$/;"	v
responseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^        $responseBuf = $client->recv();$/;"	v
responseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^        $responseBuf = '';$/;"	v
responseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^        $responseBuf = null;$/;"	v
responseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                        $responseBuf = $this->socketTcp($sIp, $iPort,$/;"	v
responseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                        $responseBuf = $this->socketUdp($sIp, $iPort, $requestBuf, $timeout);$/;"	v
responseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                        $responseBuf = $this->swooleCoroutineTcp($sIp, $iPort,$/;"	v
responseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                        $responseBuf = $this->swooleCoroutineUdp($sIp, $iPort, $requestBuf, $timeout);$/;"	v
responseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                        $responseBuf = $this->swooleTcp($sIp, $iPort,$/;"	v
responseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                        $responseBuf = $this->swooleUdp($sIp, $iPort, $requestBuf, $timeout);$/;"	v
responseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                    $responseBuf = $data;$/;"	v
responseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                $responseBuf = $data;$/;"	v
responseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $responseBuf = $out;$/;"	v
responseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $responseBuf = '';$/;"	v
responseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $responseBuf = $client->recv();$/;"	v
responseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $responseBuf = '';$/;"	v
responseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $responseBuf = null;$/;"	v
responsePacket	src/vendor/phptars/tars-client/src/Communicator.php	/^            $responsePacket = new ResponsePacket();$/;"	v
responsePacket	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $responsePacket = new ResponsePacketRegistry();$/;"	v
rest	src/vendor/phptars/tars2php/src/tars2php.php	/^        $rest = $tokens[1];$/;"	v
restart	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function restart()$/;"	f
restartSyscalls	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^                    $restartSyscalls = isset($this->restartSyscalls[$signo]) ? $this->restartSyscalls[$signo] : true;$/;"	v
restartSyscallsProvider	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    public function restartSyscallsProvider()$/;"	f
result	src/conf/ENVConf.php	/^        $result = $table->get('tars:php:tarsConf');$/;"	v
result	src/vendor/catfan/medoo/src/Medoo.php	/^				$result = $actions($this);$/;"	v
result	src/vendor/catfan/medoo/src/Medoo.php	/^				$result = $data[ $column_key ];$/;"	v
result	src/vendor/catfan/medoo/src/Medoo.php	/^			$result = $query->fetchColumn();$/;"	v
result	src/vendor/catfan/medoo/src/Medoo.php	/^			return $result === '1' || $result === true;$/;"	v
result	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^		$result = $this->queryUnprepared($sqlSyntax);$/;"	v
result	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^		$result = $this->queryUnprepared($this->_query);$/;"	v
result	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $result = array();$/;"	v
result	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $result = new stdClass ();$/;"	v
result	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $result = $this->mysqli()->commit();$/;"	v
result	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $result = $this->mysqli()->rollback();$/;"	v
result	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $result = call_user_func_array (array ($obj, $method), $arg);$/;"	v
result	src/vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^        $result = explode(' ', trim(`hg id -nb`));$/;"	v
result	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $result = $formatter->format($record);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getBool($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getBool($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getChar($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getChar($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getDouble($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getDouble($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getFloat($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getFloat($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getInt32($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getInt32($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getInt64($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getInt64($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getMap($name, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getMap($tag, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getShort($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getShort($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getString($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getString($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getStruct($name, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getStruct($tag, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getUint16($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getUint16($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getUint32($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getUint32($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getUint8($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getUint8($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getVector($name, $vec, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-client/src/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getVector($tag, $vec, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $result = TUPAPIWrapper::getString('result', 2, $sBuffer, $this->_iVersion);$/;"	v
result	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $result = TUPAPIWrapper::getString('result', 4, $sBuffer, $this->_iVersion);$/;"	v
result	src/vendor/phptars/tars-config/tests/demo.php	/^$result = $conigServant->loadConfig('PHPTest', 'helloTars', 'hhh.txt', $configtext);$/;"	v
result	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $result = Utils::getLocatorInfo($locator);$/;"	v
result	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $result = Utils::getLocatorInfo($locator);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getBool($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getBool($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getChar($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getChar($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getDouble($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getDouble($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getFloat($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getFloat($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getInt32($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getInt32($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getInt64($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getInt64($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getMap($name, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getMap($tag, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getShort($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getShort($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getString($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getString($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getStruct($name, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getStruct($tag, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getUint16($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getUint16($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getUint32($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getUint32($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getUint8($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getUint8($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getVector($name, $vec, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $result = \\TUPAPI::getVector($tag, $vec, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getBool($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getBool($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getChar($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getChar($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getDouble($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getDouble($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getFloat($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getFloat($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getInt32($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getInt32($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getInt64($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getInt64($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getMap($name, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getMap($tag, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getShort($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getShort($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getString($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getString($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getStruct($name, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getStruct($tag, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getUint16($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getUint16($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getUint32($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getUint32($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getUint8($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getUint8($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getVector($name, $vec, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $result = \\TUPAPI::getVector($tag, $vec, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^                $result = RouteTable::getRouteInfo($id);$/;"	v
result	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^        $result = Utils::getLocatorInfo($locator);$/;"	v
result	src/vendor/phptars/tars-registry/src/RouteTable.php	/^        $result = self::getInstance()->get($moduleName);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getBool($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getBool($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getChar($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getChar($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getDouble($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getDouble($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getFloat($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getFloat($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getInt32($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getInt32($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getInt64($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getInt64($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getMap($name, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getMap($tag, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getShort($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getShort($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getString($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getString($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getStruct($name, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getStruct($tag, $obj, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getUint16($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getUint16($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getUint32($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getUint32($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getUint8($name, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getUint8($tag, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getVector($name, $vec, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $result = \\TUPAPI::getVector($tag, $vec, $sBuffer, false, $iVersion);$/;"	v
result	src/vendor/phptars/tars-registry/tests/demo.php	/^$result = $inst->findObjectById("QDPHP.TARSServer.obj");$/;"	v
result	src/vendor/phptars/tars-registry/tests/demo.php	/^$result = $wrapper->findObjectById('PHPTest.PHPServer.obj');$/;"	v
result	src/vendor/phptars/tars-registry/tests/demo.php	/^$result = \\Tars\\registry\\RouteTable::getRouteInfo('PHPTest.PHPServer.obj');$/;"	v
result	src/vendor/phptars/tars-server/src/core/Event.php	/^            $result = $this->protocol->route($request, $response, $this->tarsConfig);$/;"	v
result	src/vendor/phptars/tars-server/src/core/Server.php	/^            $result = Utils::parseNodeInfo($this->tarsConfig['tars']['application']['server']['node']);$/;"	v
result	src/vendor/phptars/tars-server/src/core/Server.php	/^        $result = Utils::parseNodeInfo($this->tarsConfig['tars']['application']['server']['node']);$/;"	v
result	src/vendor/phptars/tars2php/src/tars2php.php	/^        $result = $this->paramParser($params);$/;"	v
results	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $results = array();$/;"	v
results	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $results = $this->db->ArrayBuilder()->get ($this->dbTable, $limit, $fields);$/;"	v
results	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $results = $this->db->ArrayBuilder()->getOne ($this->dbTable, $fields);$/;"	v
ret	src/vendor/phptars/tars-client/src/Communicator.php	/^        $ret = \\socket_select($read, $write, $except, $second, $usecond);$/;"	v
ret	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $ret = TUPAPIWrapper::getStruct('d', 3, $d, $sBuffer, $this->_iVersion);$/;"	v
ret	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $ret = TUPAPIWrapper::getStruct('d', 4, $d, $sBuffer, $this->_iVersion);$/;"	v
ret	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $ret = TUPAPIWrapper::getStruct('ocs', 3, $ocs, $sBuffer, $this->_iVersion);$/;"	v
ret	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $ret = TUPAPIWrapper::getStruct('outtags', 2, $outtags, $sBuffer, $this->_iVersion);$/;"	v
ret	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^        $ret = [];$/;"	v
ret	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^        $ret = [];$/;"	v
ret	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $ret = \\socket_select($read, $write, $except, $second, $usecond);$/;"	v
ret	src/vendor/phptars/tars-server/src/cmd/Start.php	/^        $ret = $this->getProcess($name);$/;"	v
ret	src/vendor/phptars/tars-server/src/cmd/Stop.php	/^        $ret = $this->getProcess($name);$/;"	v
ret	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$ret = TUPAPIWrapper::getStruct("d",3,$d,$sBuffer,$this->_iVersion);$/;"	v
ret	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$ret = TUPAPIWrapper::getStruct("d",4,$d,$sBuffer,$this->_iVersion);$/;"	v
ret	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$ret = TUPAPIWrapper::getStruct("ocs",3,$ocs,$sBuffer,$this->_iVersion);$/;"	v
ret	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$ret = TUPAPIWrapper::getStruct("outtags",2,$outtags,$sBuffer,$this->_iVersion);$/;"	v
retriableErrorCodes	src/vendor/monolog/monolog/src/Monolog/Handler/Curl/Util.php	/^    private static $retriableErrorCodes = array($/;"	v
retries	src/vendor/monolog/monolog/src/Monolog/Handler/Curl/Util.php	/^    public static function execute($ch, $retries = 5, $closeAfterDone = true)$/;"	v
retry	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->retry = $retry;$/;"	v
retry	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $retry;$/;"	v
return	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $return = $paramInfo['return'];$/;"	v
returnBuf	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                    $returnBuf = $this->packBuffer($return['type'], $returnVal, $return['tag'], '', $iVersion);$/;"	v
returnInfo	src/vendor/phptars/tars2php/src/tars2php.php	/^            $returnInfo = [$/;"	v
returnInfo	src/vendor/phptars/tars2php/src/tars2php.php	/^        $returnInfo = $this->returnParser($returnType);$/;"	v
returnInfo	src/vendor/phptars/tars2php/src/tars2php.php	/^        $returnInfo = [$/;"	v
returnParam	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                    $returnParam = [$/;"	v
returnParam	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $returnParam = [];$/;"	v
returnParser	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function returnParser($returnType)$/;"	f
returnStr	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $returnStr = '[notify file num:1][located in {ServicePath}\/bin\/conf]';$/;"	v
returnStr	src/vendor/phptars/tars-server/src/core/Server.php	/^                        $returnStr = "[1]:==================================================\\n[proxy config]:\\n";$/;"	v
returnStr	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $returnStr = '';$/;"	v
returnSymbol	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $returnSymbol = "\\n";$/;"	v
returnType	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->returnType = 'array';$/;"	v
returnType	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->returnType = 'json';$/;"	v
returnType	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->returnType = 'object';$/;"	v
returnType	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public $returnType = 'array';$/;"	v
returnType	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $this->returnType = 'Array';$/;"	v
returnType	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $this->returnType = 'Json';$/;"	v
returnType	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $this->returnType = 'Object';$/;"	v
returnType	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public $returnType = 'Object';$/;"	v
returnType	src/vendor/phptars/tars2php/src/tars2php.php	/^        $returnType = implode('', array_slice($pices, 0, count($pices) - 1));$/;"	v
returnUnpack	src/vendor/phptars/tars2php/src/tars2php.php	/^        $returnUnpack = Utils::getUnpackMethods($returnInfo['type']);$/;"	v
returnVal	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $returnVal = new SimpleStruct();$/;"	v
returnVal	src/vendor/phptars/tars-server/src/core/Event.php	/^                    $returnVal = $impl->$sFuncName(...$args);$/;"	v
returnVal	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$returnVal = new SimpleStruct();$/;"	v
returnValue	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $returnValue = 0,$/;"	v
returnValue	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^    public $returnValue;$/;"	v
right	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $right = trim(substr($next, $pos, strlen($next) - $pos), ',');$/;"	v
right	src/vendor/phptars/tars-server/tests/test.php	/^             $right = trim(substr($next, $pos, strlen($next) - $pos), ',');$/;"	v
rmDir	src/vendor/phptars/tars-deploy/src/Deploy.php	/^    public static function rmDir($path)$/;"	f
rollback	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function rollback()$/;"	f
rollbarNotifier	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^        $this->rollbarNotifier = $rollbarNotifier;$/;"	v
rollbarNotifier	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    protected $rollbarNotifier;$/;"	v
rollbarNotifier	src/vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^        $this->rollbarNotifier = $this->getMockBuilder('RollbarNotifier')$/;"	v
rollbarNotifier	src/vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    private $rollbarNotifier;$/;"	v
room	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            $room = rawurlencode($this->room);$/;"	v
room	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $this->room = $room;$/;"	v
room	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private $room;$/;"	v
room	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    private function createHandler($token = 'myToken', $room = 'room1', $name = 'Monolog', $notify = false, $host = 'api.hipchat.com', $version = 'v1')$/;"	v
rotate	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected function rotate()$/;"	f
rotationTests	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function rotationTests()$/;"	f
rotationWhenSimilarFilesExistTests	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function rotationWhenSimilarFilesExistTests()$/;"	f
route	src/vendor/phptars/tars-server/src/core/Event.php	/^        $route = $this->protocol->route($request, $response);$/;"	v
route	src/vendor/phptars/tars-server/src/protocol/HTTPProtocol.php	/^    public function route(\\Tars\\core\\Request $request, \\Tars\\core\\Response $response, $tarsConfig = [])  \/\/默认为$/;"	f
route	src/vendor/phptars/tars-server/src/protocol/JSONProtocol.php	/^    public function route(\\Tars\\core\\Request $request, \\Tars\\core\\Response $response, $tarsConfig = [])  \/\/默认为$/;"	f
route	src/vendor/phptars/tars-server/src/protocol/Protocol.php	/^    public function route(Request $request, Response $response, $tarsConfig = []);$/;"	f
route	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^    public function route(Request $request, Response $response, $tarsConfig = [])$/;"	f
routeInfo	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->routeInfo = $routeInfo;$/;"	v
routeInfo	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $routeInfo;$/;"	v
routeInfo	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->routeInfo = $routeInfo;$/;"	v
routeInfo	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $routeInfo;$/;"	v
routeInfo	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^                $routeInfo = $result['routeInfo'];$/;"	v
routeInfo	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^            $routeInfo = [];$/;"	v
routeInfo	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^        $routeInfo = $result['routeInfo'];$/;"	v
routeInfo	src/vendor/phptars/tars-registry/src/RouteTable.php	/^        $routeInfo = \\unserialize($routeInfoStr);$/;"	v
routeInfoStr	src/vendor/phptars/tars-registry/src/RouteTable.php	/^        $routeInfoStr = $result['routeInfo'];$/;"	v
routeInfoStr	src/vendor/phptars/tars-registry/src/RouteTable.php	/^        $routeInfoStr = \\serialize($routeInfo);$/;"	v
routingKey	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^        $routingKey = $this->getRoutingKey($record);$/;"	v
routingKey	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^        $routingKey = sprintf($/;"	v
row	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $row = array();$/;"	v
rs	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^        $this->rs = new SimpleStruct();$/;"	v
rs	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^    public $rs;$/;"	v
rs	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/LotofTags.php	/^        $this->rs = new SimpleStruct();$/;"	v
rs	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/LotofTags.php	/^    public $rs;$/;"	v
rs	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^		$this->rs = new SimpleStruct();$/;"	v
rs	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^	public $rs; $/;"	v
rs	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/LotofTags.php	/^		$this->rs = new SimpleStruct();$/;"	v
rs	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $rs; $/;"	v
rs	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^		$this->rs = new SimpleStruct();$/;"	v
rs	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^	public $rs; $/;"	v
rs	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/LotofTags.php	/^		$this->rs = new SimpleStruct();$/;"	v
rs	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $rs; $/;"	v
rspBuf	src/vendor/phptars/tars-server/src/core/Event.php	/^                $rspBuf = $this->protocol->packRsp($paramInfo, $unpackResult, $args, $returnVal);$/;"	v
rspBuf	src/vendor/phptars/tars-server/src/core/Event.php	/^            $rspBuf = $this->protocol->packErrRsp($unpackResult, $e->getCode(), $e->getMessage());$/;"	v
rspBuf	src/vendor/phptars/tars-server/src/core/Response.php	/^    public $rspBuf;$/;"	v
rspBuf	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $rspBuf = \\TUPAPI::encodeRspPacket($iVersion, $cPacketType,$/;"	v
rspBuf	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $rspBuf = \\TUPAPI::encode($iVersion, $iRequestId, $servantName, $funcName, $cPacketType,$/;"	v
rspBuf	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $rspBuf = \\TUPAPI::encodeRspPacket($iVersion, $cPacketType,$/;"	v
rspBuf	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $rspBuf = \\TUPAPI::encode($iVersion, $iRequestId, $servantName, $funcName, $cPacketType,$/;"	v
rspBuf	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $rspBuf = \\TUPAPI::encodeRspPacket($iVersion, $cPacketType,$/;"	v
run	src/vendor/phptars/tars-deploy/src/Deploy.php	/^    public static function run()$/;"	f
run	src/vendor/phptars/tars-server/src/cmd/Command.php	/^    public function run()$/;"	f
runnable	src/vendor/phptars/tars-server/src/core/Server.php	/^                $runnable = $this->timers[$workerId];$/;"	v
sBuffer	src/vendor/phptars/tars-client/src/Communicator.php	/^            $sBuffer = $responsePacket->decode();$/;"	v
sBuffer	src/vendor/phptars/tars-client/src/ResponsePacket.php	/^        $sBuffer = $decodeRet['sBuffer'];$/;"	v
sBuffer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $sBuffer = $this->_communicator->invoke($requestPacket, $this->_iTimeout);$/;"	v
sBuffer	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $sBuffer = $this->_communicator->invoke($requestPacket, $this->_iTimeout);$/;"	v
sBuffer	src/vendor/phptars/tars-log/src/LogServant.php	/^        $sBuffer = $this->_communicator->invoke($requestPacket, $this->_iTimeout);$/;"	v
sBuffer	src/vendor/phptars/tars-monitor/src/client/ResponsePacket.php	/^        $sBuffer = $decodeRet['sBuffer'];$/;"	v
sBuffer	src/vendor/phptars/tars-monitor/src/client/ResponsePacketMonitor.php	/^        $sBuffer = $decodeRet['sBuffer'];$/;"	v
sBuffer	src/vendor/phptars/tars-registry/src/QueryFServant.php	/^            $sBuffer = $this->_communicator->invoke($requestPacket, $this->_iTimeout);$/;"	v
sBuffer	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $sBuffer = $responsePacket->decode();$/;"	v
sBuffer	src/vendor/phptars/tars-registry/src/client/ResponsePacketRegistry.php	/^        $sBuffer = $decodeRet['sBuffer'];$/;"	v
sBuffer	src/vendor/phptars/tars-server/src/core/Server.php	/^        $sBuffer = $unpackResult['sBuffer'];$/;"	v
sBuffer	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $sBuffer = $unpackResult['sBuffer'];$/;"	v
sBuffer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$sBuffer = $this->_communicator->invoke($requestPacket,$this->_iTimeout);$/;"	v
sConcatStr	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^    public $sConcatStr = '_';$/;"	v
sContainer	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $sContainer = '',$/;"	v
sContainer	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgHead.php	/^    public $sContainer;$/;"	v
sFilename	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^    public $sFilename;$/;"	v
sFormat	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^    public $sFormat;$/;"	v
sFuncName	src/vendor/phptars/tars-server/src/core/Event.php	/^                $sFuncName = $result['sFuncName'];$/;"	v
sFuncName	src/vendor/phptars/tars-server/src/core/Server.php	/^        $sFuncName = $unpackResult['sFuncName'];$/;"	v
sFuncName	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $sFuncName = $unpackResult['sFuncName'];$/;"	v
sFuncName	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^\/\/        $sFuncName = $decodeRet['sFuncName'];$/;"	v
sHost	src/vendor/phptars/tars-server/tests/testConf.php	/^                $sHost = trim($part, " h\\t\\r");$/;"	v
sHost	src/vendor/phptars/tars-server/tests/testConf.php	/^        $sHost = '';$/;"	v
sHost	src/vendor/phptars/tars-utils/src/Utils.php	/^                $sHost = trim($part, " h\\t\\r");$/;"	v
sHost	src/vendor/phptars/tars-utils/src/Utils.php	/^        $sHost = '';$/;"	v
sIp	src/vendor/phptars/tars-client/src/Communicator.php	/^    public function invoke(RequestPacket $requestPacket, $timeout, $sIp = '', $iPort = 0)$/;"	v
sIp	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^            $sIp = $this->_routeInfo[$index]['sIp'];$/;"	v
sIp	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^            $sIp = $this->_routeInfo[$index]['sIp'];$/;"	v
sLogType	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^    public $sLogType = '';$/;"	v
sProtocol	src/vendor/phptars/tars-server/tests/testConf.php	/^                $sProtocol = 'tcp';$/;"	v
sProtocol	src/vendor/phptars/tars-server/tests/testConf.php	/^                $sProtocol = 'udp';$/;"	v
sProtocol	src/vendor/phptars/tars-server/tests/testConf.php	/^        $sProtocol = '';$/;"	v
sProtocol	src/vendor/phptars/tars-utils/src/Utils.php	/^                $sProtocol = 'tcp';$/;"	v
sProtocol	src/vendor/phptars/tars-utils/src/Utils.php	/^                $sProtocol = 'udp';$/;"	v
sProtocol	src/vendor/phptars/tars-utils/src/Utils.php	/^        $sProtocol = '';$/;"	v
sSepar	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^    public $sSepar = '|';$/;"	v
sServantName	src/vendor/phptars/tars-server/src/core/Server.php	/^        $sServantName = $unpackResult['sServantName'];$/;"	v
sServantName	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $sServantName = $unpackResult['sServantName'];$/;"	v
sServantName	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^\/\/        $sServantName = $decodeRet['sServantName'];$/;"	v
sampleRate	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->sampleRate = $config['tars']['application']['client']['sample-rate'];$/;"	v
sampleRate	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->sampleRate = $sampleRate;$/;"	v
sampleRate	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $sampleRate = 0;$/;"	v
sampleRate	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->sampleRate = $config['tars']['application']['client']['sampleRate'];$/;"	v
sampleRate	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->sampleRate = $sampleRate;$/;"	v
sampleRate	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $sampleRate = 0;$/;"	v
save	src/model/mysql/content/ArticleAttr.php	/^        $save = [$/;"	v
save	src/model/mysql/content/ArticleBasic.php	/^        $save = [];$/;"	v
save	src/model/mysql/content/ArticleDetails.php	/^        $save = [$/;"	v
save	src/model/mysql/content/ArticleDetails.php	/^        $save = [];$/;"	v
save	src/model/mysql/content/ArticleRelationship.php	/^        $save = [];$/;"	v
save	src/model/mysql/content/ArticleResource.php	/^        $save = [];$/;"	v
save	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public function save ($data = null) {$/;"	f
saveAllMvs	src/libs/Mysql.php	/^    public function saveAllMvs($data) $/;"	f
saveAttr	src/model/mysql/content/ArticleAttr.php	/^    public function saveAttr($data)$/;"	f
saveBasic	src/model/mysql/content/ArticleBasic.php	/^    public function saveBasic($data) $/;"	f
saveDetail	src/model/mysql/content/ArticleDetails.php	/^    public function saveDetail($data)$/;"	f
saveMvs	src/libs/Mysql.php	/^    public function saveMvs($data)$/;"	f
saveRelation	src/model/mysql/content/ArticleRelationship.php	/^    public function saveRelation($data,$ab_id)$/;"	f
saveResource	src/model/mysql/content/ArticleResource.php	/^    public function saveResource($data,$ab_id)$/;"	f
savefile	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $savefile = $basePath . $servicesInfo['saveTarsConfigFileDir'] . $filename;$/;"	v
savefile	src/vendor/phptars/tars-server/src/core/Server.php	/^                        $savefile = $filename;$/;"	v
sayHelloWorld	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function sayHelloWorld($name, &$outGreetings)$/;"	f
sayHelloWorld	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function sayHelloWorld($name,&$outGreetings) {$/;"	f
sayHelloWorld	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function sayHelloWorld($name,&$outGreetings);$/;"	f
scheme	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $this->scheme = $urlInfo['scheme'];$/;"	v
scheme	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private $scheme;$/;"	v
script	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^                $script = array_merge($script,$/;"	v
script	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $script = array();$/;"	v
search	src/model/mysql/content/ArticleBasic.php	/^    public function search($param)$/;"	f
search	src/vendor/composer/ClassLoader.php	/^                $search = $subPath . '\\\\';$/;"	v
second	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $second = $first->withName('second');$/;"	v
second	src/vendor/phptars/tars-client/src/Communicator.php	/^        $second = floor($timeout);$/;"	v
second	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $second = floor($timeout);$/;"	v
seconds	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $seconds = floor($this->timeout);$/;"	v
secretKey	src/vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^        $this->secretKey = $secretKey;$/;"	v
secretKey	src/vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^    private $secretKey;$/;"	v
secure	src/vendor/phptars/tars-server/src/core/Response.php	/^        $secure = false,$/;"	v
select	src/vendor/catfan/medoo/src/Medoo.php	/^	public function select($table, $join, $columns = null, $where = null)$/;"	f
selectCollection	src/vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^        public function selectCollection()$/;"	f
selectContext	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function selectContext($table, &$map, $join, &$columns = null, $where = null, $column_fn = null)$/;"	f
self	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $self = $this;$/;"	v
send	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    public static function send()$/;"	f
send	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected function send()$/;"	f
send	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    protected function send($data, $endpoint)$/;"	f
send	src/vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^    abstract protected function send($content, array $records);$/;"	f
send	src/vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^    protected function send($content, array $records)$/;"	f
send	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected function send($content, array $records)$/;"	f
send	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    protected function send($content, array $records)$/;"	f
send	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    protected function send($chunk)$/;"	f
send	src/vendor/phptars/tars-server/src/core/Response.php	/^    public function send($data)$/;"	f
sendHeader	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected function sendHeader($header, $content)$/;"	f
sendHeader	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function sendHeader($header, $content)$/;"	f
sendHeader	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    protected function sendHeader($header, $content)$/;"	f
sendHeader	src/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    protected function sendHeader($header, $content)$/;"	f
sendHeaders	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected static $sendHeaders = true;$/;"	v
sendHeaders	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected static $sendHeaders = true;$/;"	v
sendStat	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^    public function sendStat()$/;"	f
sendto	src/vendor/phptars/tars-server/src/core/Response.php	/^    public function sendto($ip, $port, $data, $ipv6 = false)$/;"	f
sent	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $sent = 0;$/;"	v
servType	src/vendor/phptars/tars-server/src/core/Request.php	/^    public $servType;$/;"	v
servType	src/vendor/phptars/tars-server/src/core/Response.php	/^    public $servType;$/;"	v
servType	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->servType = $tarsServerConf['servType'];$/;"	v
servType	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $servType = 'tcp';$/;"	v
servant	src/vendor/phptars/tars-client/tests/testServant.php	/^$servant = new \\PHPTest\\PHPServer\\obj\\TestTafServiceServant($config);$/;"	v
servant	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $servant = $servantParser->parse();$/;"	v
servantName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->servantName = $servantName;$/;"	v
servantName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $servantName;$/;"	v
servantName	src/vendor/phptars/tars-config/src/ConfigServant.php	/^                                $servantName = "tars.tarsconfig.ConfigObj")$/;"	v
servantName	src/vendor/phptars/tars-log/src/LogServant.php	/^                                $servantName = "tars.tarslog.LogObj")$/;"	v
servantName	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    public function __construct(CommunicatorConfig $config, $servantName = "tars.tarslog.LogObj", $level = Logger::WARNING, $bubble = true)$/;"	v
servantName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->servantName = $servantName;$/;"	v
servantName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $servantName;$/;"	v
servantName	src/vendor/phptars/tars-report/src/ServerF.php	/^            $servantName = $this->_objName;$/;"	v
servantName	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^            $servantName = $this->_objName;$/;"	v
servantName	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $servantName = $this->_objName;$/;"	v
servantName	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $servantName = $unpackResult['sServantName'];$/;"	v
servantName	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $servantName = $unpackResult['sServantName'];$/;"	v
servantName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->servantName = $config['appName'].'.'.$config['serverName'].'.'.$config['objName'];$/;"	v
servantName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->servantName = $servantName;$/;"	v
servantName	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $servantName;$/;"	v
servantParser	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $servantParser = new ServantParser($fp, $line, $this->namespaceName, $this->moduleName,$/;"	v
server	src/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^        $server = array($/;"	v
server	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^        $this->server = $server;$/;"	v
server	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^        $this->server = isset($moduleData[1]) ? $moduleData[1] : $this->server;$/;"	v
server	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    protected $server = 'Undefined';$/;"	v
server	src/vendor/phptars/tars-server/src/cmd/Start.php	/^        $server = new Server($tarsConfig, $table);$/;"	v
server	src/vendor/phptars/tars-server/src/core/Request.php	/^    public $server = array();$/;"	v
server	src/vendor/phptars/tars-server/src/core/Response.php	/^    public $server;$/;"	v
server	src/vendor/phptars/tars-server/src/core/Server.php	/^                $server = $this->tarsConfig['tars']['application']['server']['server'];$/;"	v
server	src/vendor/phptars/tars-server/src/core/Server.php	/^        $server = $this->serverName;$/;"	v
serverData	src/vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^            $this->serverData = $serverData;$/;"	v
serverData	src/vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^            $this->serverData = &$_SERVER;$/;"	v
serverData	src/vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    protected $serverData;$/;"	v
serverF	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $serverF = new ServerFSync($host, $port, $objName);$/;"	v
serverF	src/vendor/phptars/tars-server/src/core/Server.php	/^        $serverF = new ServerFSync($host, $port, $objName);$/;"	v
serverInfo	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $serverInfo = new ServerInfo();$/;"	v
serverInfo	src/vendor/phptars/tars-server/src/core/Server.php	/^        $serverInfo = new ServerInfo();$/;"	v
serverName	src/vendor/phptars/tars-deploy/src/Deploy.php	/^        $serverName = $jceProto['serverName'];$/;"	v
serverName	src/vendor/phptars/tars-deploy/src/Deploy.php	/^        $serverName = self::getServerName($tarsPHPRoot);$/;"	v
serverName	src/vendor/phptars/tars-deploy/src/Deploy.php	/^    public static $serverName = '';$/;"	v
serverName	src/vendor/phptars/tars-report/src/ServerInfo.php	/^    public $serverName;$/;"	v
serverName	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $serverName = $data['serverName'];$/;"	v
serverName	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->serverName = $tarsServerConf['server'];$/;"	v
serverName	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $serverName = '';$/;"	v
serverName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->serverName = $config['serverName'];$/;"	v
serverName	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $serverName;$/;"	v
servername	src/vendor/phptars/tars-config/src/classes/ConfigInfo.php	/^    public $servername;$/;"	v
servername	src/vendor/phptars/tars-config/src/classes/GetConfigListInfo.php	/^    public $servername;$/;"	v
servername	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^    public $servername;$/;"	v
servicesInfo	src/vendor/phptars/tars-server/src/cmd/Start.php	/^        $servicesInfo = require $basePath . 'src\/services.php';$/;"	v
servicesInfo	src/vendor/phptars/tars-server/src/core/Server.php	/^            $servicesInfo = $this->servicesInfo;$/;"	v
servicesInfo	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->servicesInfo = $tarsServerConf['servicesInfo'];$/;"	v
servicesInfo	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $servicesInfo;$/;"	v
set	src/vendor/composer/ClassLoader.php	/^    public function set($prefix, $paths)$/;"	f
set	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    public function set($key, $value)$/;"	f
set	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^    public function set($key, $value)$/;"	f
set	src/vendor/phptars/tars-monitor/src/contract/StoreCacheInterface.php	/^    public function set($key, $value);$/;"	f
setAcceptedLevels	src/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function setAcceptedLevels($minLevelOrList = Logger::DEBUG, $maxLevel = Logger::EMERGENCY)$/;"	f
setApcuPrefix	src/vendor/composer/ClassLoader.php	/^    public function setApcuPrefix($apcuPrefix)$/;"	f
setApp	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    public function setApp($app)$/;"	f
setArea	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $setArea = '',$/;"	v
setArea	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgHead.php	/^    public $setArea;$/;"	v
setAsyncInvokeTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setAsyncInvokeTimeout($asyncInvokeTimeout)$/;"	f
setAsyncInvokeTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setAsyncInvokeTimeout($asyncInvokeTimeout)$/;"	f
setBasePath	src/vendor/phptars/tars-server/src/core/Event.php	/^    public function setBasePath($basePath)$/;"	f
setBatchFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    public function setBatchFormatter(FormatterInterface $formatter)$/;"	f
setBubble	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function setBubble($bubble)$/;"	f
setCharsetName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setCharsetName($charsetName)$/;"	f
setCharsetName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setCharsetName($charsetName)$/;"	f
setChunkSize	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function setChunkSize($bytes)$/;"	f
setClassMapAuthoritative	src/vendor/composer/ClassLoader.php	/^    public function setClassMapAuthoritative($classMapAuthoritative)$/;"	f
setConnectTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setConnectTimeout($connectTimeout)$/;"	f
setConnectTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setConnectTimeout($connectTimeout)$/;"	f
setConnectionTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function setConnectionTimeout($seconds)$/;"	f
setContentType	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function setContentType($contentType)$/;"	f
setDB	src/libs/Mysql.php	/^    public function setDB($dbName):\\dbObject$/;"	f
setDataPath	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setDataPath($dataPath)$/;"	f
setDataPath	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setDataPath($dataPath)$/;"	f
setDateFormat	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    public function setDateFormat($dateFormat)$/;"	f
setDivision	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^            $this->setDivision = null;$/;"	v
setDivision	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->setDivision = $config['tars']['application']['setdivision'];$/;"	v
setDivision	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->setDivision = $setDivision;$/;"	v
setDivision	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $setDivision = null;$/;"	v
setDivision	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^            $this->setDivision = null;$/;"	v
setDivision	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->setDivision = $config['tars']['application']['setDivision'];$/;"	v
setDivision	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->setDivision = $setDivision;$/;"	v
setDivision	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $setDivision = null;$/;"	v
setEmergencyLevel	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    public function setEmergencyLevel($value)$/;"	f
setEnableSet	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setEnableSet($enableSet)$/;"	f
setEnableSet	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setEnableSet($enableSet)$/;"	f
setEnableTimer	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setEnableTimer($enableTimer)$/;"	f
setEncoding	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function setEncoding($encoding)$/;"	f
setExceptionHandler	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function setExceptionHandler($callback)$/;"	f
setFilenameFormat	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    public function setFilenameFormat($filenameFormat, $dateFormat)$/;"	f
setFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function setFormatter(FormatterInterface $formatter)$/;"	f
setFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    public function setFormatter(FormatterInterface $formatter)$/;"	f
setFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    public function setFormatter(FormatterInterface $formatter)$/;"	f
setFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    public function setFormatter(FormatterInterface $formatter)$/;"	f
setFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^    public function setFormatter(FormatterInterface $formatter);$/;"	f
setFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function setFormatter(FormatterInterface $formatter)$/;"	f
setFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    public function setFormatter(FormatterInterface $formatter)$/;"	f
setFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    public function setFormatter(FormatterInterface $formatter)$/;"	f
setFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    public function setFormatter(FormatterInterface $formatter)$/;"	f
setGlobal	src/vendor/phptars/tars-server/src/core/Request.php	/^    public function setGlobal()$/;"	f
setHandlers	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function setHandlers(array $handlers)$/;"	f
setHighPriorityLevel	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    public function setHighPriorityLevel($value)$/;"	f
setID	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $setID = '',$/;"	v
setID	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgHead.php	/^    public $setID;$/;"	v
setIVersion	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setIVersion($iVersion)$/;"	f
setIVersion	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setIVersion($iVersion)$/;"	f
setId	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public $setId;$/;"	v
setKeepAliveTime	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setKeepAliveTime($keepAliveTime)$/;"	f
setKeepAliveTime	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setKeepAliveTime($keepAliveTime)$/;"	f
setLevel	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function setLevel($level)$/;"	f
setLocalip	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setLocalip($localip)$/;"	f
setLocalip	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setLocalip($localip)$/;"	f
setLocator	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setLocator($locator)$/;"	f
setLocator	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setLocator($locator)$/;"	f
setLockMethod	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^	public function setLockMethod($method)$/;"	f
setLogLevel	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setLogLevel($logLevel)$/;"	f
setLogLevel	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setLogLevel($logLevel)$/;"	f
setLogPath	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setLogPath($logPath)$/;"	f
setLogPath	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setLogPath($logPath)$/;"	f
setLogger	src/vendor/psr/log/Psr/Log/LoggerAwareInterface.php	/^    public function setLogger(LoggerInterface $logger);$/;"	f
setLogger	src/vendor/psr/log/Psr/Log/LoggerAwareTrait.php	/^    public function setLogger(LoggerInterface $logger)$/;"	f
setMaxSampleCount	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setMaxSampleCount($maxSampleCount)$/;"	f
setMaxSampleCount	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setMaxSampleCount($maxSampleCount)$/;"	f
setMockHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    private function setMockHandler(array $methods = array())$/;"	f
setModuleName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setModuleName($moduleName)$/;"	f
setModuleName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setModuleName($moduleName)$/;"	f
setName	src/vendor/phptars/tars-monitor/src/PropertyFWrapper.php	/^        $setName = '',$/;"	v
setName	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgHead.php	/^    public $setName;$/;"	v
setNewRelicAppName	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function setNewRelicAppName($appName)$/;"	f
setNewRelicParameter	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function setNewRelicParameter($key, $value)$/;"	f
setNewRelicTransactionName	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function setNewRelicTransactionName($transactionName)$/;"	f
setPersistent	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function setPersistent($persistent)$/;"	f
setPrefix	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function setPrefix($prefix = '')$/;"	f
setProperty	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setProperty($property)$/;"	f
setProperty	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setProperty($property)$/;"	f
setProtocol	src/vendor/phptars/tars-server/src/core/Event.php	/^    public function setProtocol(Protocol $protocol)$/;"	f
setPsr4	src/vendor/composer/ClassLoader.php	/^    public function setPsr4($prefix, $paths)$/;"	f
setQueryOption	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function setQueryOption($options)$/;"	f
setQueueSize	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setQueueSize($queueSize)$/;"	f
setQueueSize	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setQueueSize($queueSize)$/;"	f
setRefreshEndpointInterval	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setRefreshEndpointInterval($refreshEndpointInterval)$/;"	f
setRefreshEndpointInterval	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setRefreshEndpointInterval($refreshEndpointInterval)$/;"	f
setRelease	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    public function setRelease($value)$/;"	f
setReportInterval	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setReportInterval($reportInterval)$/;"	f
setReportInterval	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setReportInterval($reportInterval)$/;"	f
setRouteInfo	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setRouteInfo($routeInfo)$/;"	f
setRouteInfo	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setRouteInfo($routeInfo)$/;"	f
setRouteInfo	src/vendor/phptars/tars-registry/src/RouteTable.php	/^    public static function setRouteInfo($moduleName, $routeInfo)$/;"	f
setSampleRate	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setSampleRate($sampleRate)$/;"	f
setSampleRate	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setSampleRate($sampleRate)$/;"	f
setServantName	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setServantName($servantName)$/;"	f
setServantName	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setServantName($servantName)$/;"	f
setServer	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    public function setServer($server)$/;"	f
setSetDivision	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setSetDivision($setDivision)$/;"	f
setSetDivision	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setSetDivision($setDivision)$/;"	f
setSignalHandler	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    private function setSignalHandler($signo, $handler = SIG_DFL) {$/;"	f
setSocket	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    public function setSocket($socket)$/;"	f
setSocketMode	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setSocketMode($socketMode)$/;"	f
setSocketMode	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setSocketMode($socketMode)$/;"	f
setSocketTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function setSocketTimeout()$/;"	f
setStat	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setStat($stat)$/;"	f
setStat	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setStat($stat)$/;"	f
setStreamChunkSize	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function setStreamChunkSize()$/;"	f
setSyncInvokeTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    public function setSyncInvokeTimeout($syncInvokeTimeout)$/;"	f
setSyncInvokeTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    public function setSyncInvokeTimeout($syncInvokeTimeout)$/;"	f
setTag	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    public function setTag($tag)$/;"	f
setTags	src/vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function setTags(array $tags = array())$/;"	f
setTarsConfig	src/vendor/phptars/tars-server/src/core/Event.php	/^    public function setTarsConfig($tarsConfig)$/;"	f
setTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function setTimeout($seconds)$/;"	f
setTimezone	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public static function setTimezone(\\DateTimeZone $tz)$/;"	f
setTimezoneProvider	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function setTimezoneProvider()$/;"	f
setTrace	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function setTrace($enabled, $stripPrefix = null)$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    protected function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    protected function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^    protected function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    protected function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    protected function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    protected function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^    public function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    protected function setUp()$/;"	f
setUp	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    protected function setUp()$/;"	f
setUseIncludePath	src/vendor/composer/ClassLoader.php	/^    public function setUseIncludePath($useIncludePath)$/;"	f
setWritingTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function setWritingTimeout($seconds)$/;"	f
setdivision	src/vendor/phptars/tars-config/src/classes/ConfigInfo.php	/^    public $setdivision;$/;"	v
setdivision	src/vendor/phptars/tars-config/src/classes/GetConfigListInfo.php	/^    public $setdivision = '';$/;"	v
setdivision	src/vendor/phptars/tars-log/src/classes/LogInfo.php	/^    public $setdivision;$/;"	v
setting	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->setting = $tarsServerConf['setting'];$/;"	v
setting	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $setting;$/;"	v
settings	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^			$settings = array_merge($settings, $importSettings);$/;"	v
settings	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^		$settings 			= Array("linesToIgnore" => 0);$/;"	v
settings	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^		$settings = Array("fieldChar" => ';', "lineChar" => PHP_EOL, "linesToIgnore" => 1);$/;"	v
setup	src/vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^    protected function setup()$/;"	f
setupRollbarNotifierMock	src/vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    private function setupRollbarNotifierMock()$/;"	f
shortBuffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $shortBuffer = \\TUPAPI::putShort($paramName, $short, $iVersion);$/;"	v
shortBuffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $shortBuffer = \\TUPAPI::putShort($tag, $short, $iVersion);$/;"	v
shortBuffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $shortBuffer = \\TUPAPI::putShort($paramName, $short, $iVersion);$/;"	v
shortBuffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $shortBuffer = \\TUPAPI::putShort($tag, $short, $iVersion);$/;"	v
shortBuffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $shortBuffer = \\TUPAPI::putShort($paramName, $short, $iVersion);$/;"	v
shortBuffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $shortBuffer = \\TUPAPI::putShort($tag, $short, $iVersion);$/;"	v
shouldReset	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function processAllWith (&$data, $shouldReset = true) {$/;"	v
shouldStoreResult	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $shouldStoreResult = true;$/;"	v
shouldStoreResult	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $shouldStoreResult = false;$/;"	v
shutdownCheckHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $this->shutdownCheckHandler = $test;$/;"	v
shutdownCheckHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    private $shutdownCheckHandler;$/;"	v
siginfo	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^    public function handleSignal($signo, array $siginfo = null)$/;"	v
siginfo	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^        $siginfo = array('signo' => $signo, 'errno' => 0, 'code' => 0);$/;"	v
siginfo	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^        pcntl_signal(SIGURG, function ($signo, array $siginfo = null) use (&$previousCalled) {$/;"	v
signal	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^        $signal = isset($signals[$signo]) ? $signals[$signo] : $signo;$/;"	v
signalHandlers	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^        $this->signalHandlers = array();$/;"	v
signalHandlers	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    private $signalHandlers;$/;"	v
signalLevelMap	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^    private $signalLevelMap = array();$/;"	v
signalRestartSyscalls	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^    private $signalRestartSyscalls = array();$/;"	v
signals	src/vendor/monolog/monolog/src/Monolog/SignalHandler.php	/^        static $signals = array();$/;"	v
signo	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^            foreach ($this->signalHandlers as $signo => $handler) {$/;"	v
signo	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^        $signo = 2;  \/\/ SIGINT.$/;"	v
singleDimension	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $singleDimension = array(1, 'Hello', 'Jordi');$/;"	v
size	src/vendor/phptars/tars-monitor/src/cache/SwooleTableStoreCache.php	/^        $size = isset($config['size']) ? $config['size'] : 40960;$/;"	v
skipClassesPartials	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^        $this->skipClassesPartials = array_merge(array('Monolog\\\\'), $skipClassesPartials);$/;"	v
skipClassesPartials	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    private $skipClassesPartials;$/;"	v
skipClassesPartials	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    public function __construct($level = Logger::DEBUG, array $skipClassesPartials = array(), $skipStackFramesCount = 0)$/;"	v
skipFunctions	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    private $skipFunctions = array($/;"	v
skipStackFramesCount	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^        $this->skipStackFramesCount = $skipStackFramesCount;$/;"	v
skipStackFramesCount	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    private $skipStackFramesCount;$/;"	v
slackRecord	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $this->slackRecord = new SlackRecord($/;"	v
slackRecord	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    private $slackRecord;$/;"	v
slackRecord	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $this->slackRecord = new SlackRecord($/;"	v
slackRecord	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    private $slackRecord;$/;"	v
slackRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $slackRecord = new SlackRecord($/;"	v
slackRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $slackRecord = new SlackRecord();$/;"	v
slackRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $slackRecord = new SlackRecord(null, null, false, 'ghost');$/;"	v
slackRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $slackRecord = new SlackRecord(null, null, true, null, false, true);$/;"	v
slackRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $slackRecord = new SlackRecord(null, null, true, null, false, true, array('context.info.library', 'extra.tags.1'));$/;"	v
slackRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^        $slackRecord = $handler->getSlackRecord();$/;"	v
slackRecord2	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $slackRecord2 = new SlackRecord(null, null, false, 'http:\/\/github.com\/Seldaek\/monolog');$/;"	v
slackTeam	src/vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^        $this->slackTeam = $slackTeam;$/;"	v
slackTeam	src/vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^    private $slackTeam;$/;"	v
slackbotUrl	src/vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^        $slackbotUrl = sprintf($/;"	v
slaveIp	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^    public $slaveIp;$/;"	v
slaveIp	src/vendor/phptars/tars-monitor/src/classes/StatSampleMsg.php	/^    public $slaveIp;$/;"	v
slaveName	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^    public $slaveName;$/;"	v
slaveName	src/vendor/phptars/tars-monitor/src/classes/StatSampleMsg.php	/^    public $slaveName;$/;"	v
slavePort	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^    public $slavePort;$/;"	v
slaveSetArea	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $slaveSetArea = '',$/;"	v
slaveSetArea	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^    public $slaveSetArea;$/;"	v
slaveSetID	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $slaveSetID = ''$/;"	v
slaveSetID	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^    public $slaveSetID;$/;"	v
slaveSetName	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $slaveSetName = '',$/;"	v
slaveSetName	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^    public $slaveSetName;$/;"	v
sock	src/vendor/phptars/tars-client/src/Communicator.php	/^        $sock = \\socket_create(AF_INET, SOCK_DGRAM, SOL_UDP);$/;"	v
sock	src/vendor/phptars/tars-client/src/Communicator.php	/^        $sock = \\socket_create(AF_INET, SOCK_STREAM, SOL_TCP);$/;"	v
sock	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^        $sock = \\socket_create(AF_INET, SOCK_STREAM, SOL_TCP);$/;"	v
sock	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $sock = \\socket_create(AF_INET, SOCK_DGRAM, SOL_UDP);$/;"	v
sock	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $sock = \\socket_create(AF_INET, SOCK_STREAM, SOL_TCP);$/;"	v
socket	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^            $this->socket = null;$/;"	v
socket	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^        $this->socket = socket_create(AF_INET, SOCK_DGRAM, SOL_UDP);$/;"	v
socket	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    protected $socket;$/;"	v
socket	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^        $this->socket = $socket;$/;"	v
socket	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^        $this->socket = new UdpSocket($host, $port ?: 514);$/;"	v
socket	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    protected $socket;$/;"	v
socket	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $socket = $this->getMock('\\Monolog\\Handler\\SyslogUdp\\UdpSocket', array('write'), array('lol', 'lol'));$/;"	v
socket	src/vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^        $socket = $this->getMock('\\Monolog\\Handler\\SyslogUdp\\UdpSocket', array('send'), array('lol', 'lol'));$/;"	v
socket	src/vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^        $socket = new UdpSocket('127.0.0.1', 514);$/;"	v
socketInfo	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^            $socketInfo = $this->streamGetMetadata();$/;"	v
socketMode	src/conf/ENVConf.php	/^    public static $socketMode = 3;$/;"	v
socketMode	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->socketMode = $socketMode;$/;"	v
socketMode	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $socketMode = 1; \/\/1 socket ,2 swoole sync ,3 swoole coroutine$/;"	v
socketMode	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->socketMode = $socketMode;$/;"	v
socketMode	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $socketMode; \/\/1 socket ,2 swoole sync ,3 swoole coroutine$/;"	v
socketMode	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $socketMode = 2;$/;"	v
socketTcp	src/vendor/phptars/tars-client/src/Communicator.php	/^    private function socketTcp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	f
socketTcp	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    private function socketTcp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	f
socketTcp	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    private function socketTcp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	f
socketUdp	src/vendor/phptars/tars-client/src/Communicator.php	/^    private function socketUdp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	f
socketUdp	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    private function socketUdp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	f
someObject	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $someObject = new \\stdClass();$/;"	v
sort	src/servant/Article/Server/Obj/classes/ListParam.php	/^		$this->sort = new \\TARS_Map(\\TARS::STRING,\\TARS::STRING);$/;"	v
sort	src/servant/Article/Server/Obj/classes/ListParam.php	/^	public $sort; $/;"	v
sounds	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $sounds = array($/;"	v
source	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        $this->source = $source;$/;"	v
source	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^    private $source;$/;"	v
sourceEmail	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        $this->sourceEmail = $sourceEmail;$/;"	v
sourceEmail	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^    private $sourceEmail;$/;"	v
specification	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^ * for the full interface specification.$/;"	i
splitMessageIntoLines	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    private function splitMessageIntoLines($message)$/;"	f
sql	src/model/mysql/content/ArticleBasic.php	/^        $sql = "SELECT ".$this->dbTable.".*,article_attr.view,article_attr.upvote,article_attr.comment_count,article_attr.collection_count,article_details.content FROM ". $this->dbTable ." LEFT JOIN article_attr ON ".$this->dbTable.".ab_id = article_attr.ab_id LEFT JOIN article_details ON ".$this->dbTable.".ab_id = article_details.ab_id ".$where;$/;"	v
sqlData	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $sqlData = $this->prepareData ();$/;"	v
sqlData	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $sqlData = Array();$/;"	v
sqlSyntax	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^		$sqlSyntax = sprintf('LOAD DATA %s INFILE \\'%s\\' INTO TABLE %s', $/;"	v
sqlSyntax	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^		$sqlSyntax = sprintf('LOAD XML INFILE \\'%s\\' INTO TABLE %s', $/;"	v
sql_count	src/model/mysql/content/ArticleBasic.php	/^        $sql_count = "SELECT count(*) FROM ". $this->dbTable ." ".$where;$/;"	v
srcZipPre	src/vendor/phptars/tars-deploy/src/Deploy.php	/^        $srcZipPre = dirname($tmpDir).DIRECTORY_SEPARATOR.'src'.DIRECTORY_SEPARATOR.self::$serverName;$/;"	v
ss	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^        $this->ss = new \\TARS_Vector(new SimpleStruct());$/;"	v
ss	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^    public $ss;$/;"	v
ss	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/LotofTags.php	/^        $this->ss = new \\TARS_Vector(new SimpleStruct());$/;"	v
ss	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/LotofTags.php	/^    public $ss;$/;"	v
ss	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^		$this->ss = new \\TARS_Vector(new SimpleStruct());$/;"	v
ss	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^	public $ss; $/;"	v
ss	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/LotofTags.php	/^		$this->ss = new \\TARS_Vector(new SimpleStruct());$/;"	v
ss	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $ss; $/;"	v
ss	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^		$this->ss = new \\TARS_Vector(new SimpleStruct());$/;"	v
ss	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^	public $ss; $/;"	v
ss	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/LotofTags.php	/^		$this->ss = new \\TARS_Vector(new SimpleStruct());$/;"	v
ss	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $ss; $/;"	v
stack	src/vendor/catfan/medoo/src/Medoo.php	/^					$stack = [];$/;"	v
stack	src/vendor/catfan/medoo/src/Medoo.php	/^		$stack = [];$/;"	v
start	src/model/mysql/content/ArticleBasic.php	/^            $start = ($page - 1) * $count;$/;"	v
start	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function start()$/;"	f
startTime	src/vendor/phptars/tars-client/src/Communicator.php	/^        $startTime = $this->militime();$/;"	v
startTransaction	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function startTransaction()$/;"	f
stat	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->stat = $config['tars']['application']['client']['stat'];$/;"	v
stat	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->stat = $stat;$/;"	v
stat	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $stat = 'tars.tarsstat.StatObj';$/;"	v
stat	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $stat = $table->get($key);$/;"	v
stat	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->stat = $config['tars']['application']['client']['stat'];$/;"	v
stat	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->stat = $stat;$/;"	v
stat	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $stat = 'tars.tarsstat.StatObj';$/;"	v
statArr	src/vendor/phptars/tars-server/src/core/Server.php	/^                                $statArr = explode(' ', trim($statInfo));$/;"	v
statFWrapper	src/vendor/phptars/tars-server/src/core/Server.php	/^                                $statFWrapper = new StatFWrapper($locator, $socketMode, $statServantName, $serverName,$/;"	v
statServantName	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $statServantName = $data['client']['stat'];$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                                $state = 'init';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                            $state = 'init';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                            $this->state = 'init';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $state = 'identifier';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $state = 'init';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $this->state = 'end';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $this->state = 'init';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $state = 'end';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $state = 'identifier';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $state = 'indentifier';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $state = 'init';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $this->state = 'end';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $this->state = 'identifier';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $this->state = 'init';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $this->state = 'lineEnd';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^            $state = 'init';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^            $this->state = 'end';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^            $this->state = 'init';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^        $state = 'init';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->state = 'init';$/;"	v
state	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $state;$/;"	v
statement	src/vendor/catfan/medoo/src/Medoo.php	/^			$this->statement = $statement;$/;"	v
statement	src/vendor/catfan/medoo/src/Medoo.php	/^		$statement = $this->pdo->prepare($query);$/;"	v
statement	src/vendor/catfan/medoo/src/Medoo.php	/^	protected $statement;$/;"	v
statfWrapper	src/vendor/phptars/tars-monitor/tests/propertyFDemo.php	/^$statfWrapper = new \\Tars\\monitor\\PropertyFWrapper('tars.tarsregistry.QueryObj@tcp -h 172.16.0.161 -p 17890', 1);$/;"	v
statfWrapper	src/vendor/phptars/tars-monitor/tests/propertyFDemo.php	/^$statfWrapper = new \\Tars\\monitor\\PropertyFWrapper('tars.tarsregistry.QueryObj@tcp -h 172.16.0.161 -p 17890', 2, 'ted');$/;"	v
statfWrapper	src/vendor/phptars/tars-monitor/tests/statFDemo.php	/^$statfWrapper = new \\Tars\\monitor\\StatFWrapper('tars.tarsregistry.QueryObj@tcp -h 172.16.0.161 -p 17890', 1);$/;"	v
statfWrapper	src/vendor/phptars/tars-monitor/tests/statFDemo.php	/^$statfWrapper = new \\Tars\\monitor\\StatFWrapper('tars.tarsregistry.QueryObj@tcp -h 172.16.0.161 -p 17890', 2);$/;"	v
statmsg_map	src/vendor/phptars/tars-monitor/src/PropertyFServant.php	/^            $statmsg_map = new \\TARS_Map(new StatPropMsgHead(), new StatPropMsgBody(), 1);$/;"	v
status	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $status = $stmt->execute();$/;"	v
status	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^            $status = mkdir($dir, 0777, true);$/;"	v
status	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $status = self::SWOOLE_STAT_SUCCESS,$/;"	v
status	src/vendor/phptars/tars-server/src/core/Response.php	/^    public function status($http_status_code)$/;"	f
status	src/vendor/phptars/tars-server/tests/testConf.php	/^                        $status = 0;$/;"	v
status	src/vendor/phptars/tars-server/tests/testConf.php	/^                        $status = 1;$/;"	v
status	src/vendor/phptars/tars-server/tests/testConf.php	/^                        $status = 2;$/;"	v
status	src/vendor/phptars/tars-server/tests/testConf.php	/^                        $status = 3;$/;"	v
status	src/vendor/phptars/tars-server/tests/testConf.php	/^        $status = 0; \/\/标识在application内$/;"	v
status	src/vendor/phptars/tars-utils/src/Utils.php	/^                        $status = 0;$/;"	v
status	src/vendor/phptars/tars-utils/src/Utils.php	/^                        $status = 1;$/;"	v
status	src/vendor/phptars/tars-utils/src/Utils.php	/^                        $status = 2;$/;"	v
status	src/vendor/phptars/tars-utils/src/Utils.php	/^                        $status = 3;$/;"	v
status	src/vendor/phptars/tars-utils/src/Utils.php	/^        $status = 0; \/\/标识在application内$/;"	v
statuses	src/vendor/phptars/tars-report/src/ServerF.php	/^            $statuses = [];$/;"	v
statuses	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^            $statuses = [];$/;"	v
statuses	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $statuses = [];$/;"	v
statuses	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $statuses = [];$/;"	v
statuses	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $statuses = [];$/;"	v
stmt	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $stmt = $this->mysqli()->query('SELECT FOUND_ROWS()');$/;"	v
stmt	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $stmt = $this->_buildQuery($numRows);$/;"	v
stmt	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $stmt = $this->_buildQuery($numRows, $tableData);$/;"	v
stmt	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $stmt = $this->_buildQuery(null, $insertData);$/;"	v
stmt	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $stmt = $this->_prepareQuery();$/;"	v
stmt	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $stmt = $this->mysqli()->prepare($this->_query);$/;"	v
stmt	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $stmt = $this->mysqli()->query($query);$/;"	v
stop	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function stop()$/;"	f
stopBuffering	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->stopBuffering = $stopBuffering;$/;"	v
stopBuffering	src/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $stopBuffering;$/;"	v
store	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * This function store update column's name and column name of the$/;"	f
store	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $store = file($this->deduplicationStore, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);$/;"	v
storeCache	src/vendor/phptars/tars-server/src/cmd/Start.php	/^        $storeCache = new $monitorStoreClassName($monitorStoreConfig);$/;"	v
str	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $str = substr($str, $pos + 1);$/;"	v
str	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $str = '[object] ('.Utils::getClass($e).'(code: '.$e->getCode().'): '.$e->getMessage().' at '.$e->getFile().':'.$e->getLine().$previousText.')';$/;"	v
str	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^    public $str;$/;"	v
str	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/LotofTags.php	/^    public $str;$/;"	v
str	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/classes/OutStruct.php	/^    public $str;$/;"	v
str	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $str = \\TUPAPI::putString(0, $returnStr, 1);$/;"	v
str	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^	public $str; $/;"	v
str	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $str; $/;"	v
str	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/classes/OutStruct.php	/^	public $str; $/;"	v
str	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/ComplicatedStruct.php	/^	public $str; $/;"	v
str	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/LotofTags.php	/^	public $str; $/;"	v
str	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/classes/OutStruct.php	/^	public $str; $/;"	v
str1	src/vendor/phptars/tars-server/tests/test.php	/^$str1 = '\\Taf\\TJCE_Vector(\\Taf\\TJCE::STRING)';$/;"	v
str2	src/vendor/phptars/tars-server/tests/test.php	/^$str2 = '\\Taf\\TJCE_Map(\\Taf\\TJCE::STRING,\\Taf\\TJCE::STRING)';$/;"	v
str3	src/vendor/phptars/tars-server/tests/test.php	/^$str3 = '\\Taf\\TJCE_Vector(SimpleStruct)';$/;"	v
str4	src/vendor/phptars/tars-server/tests/test.php	/^$str4 = '\\Taf\\TJCE_Map(\\Taf\\TJCE::STRING,SimpleStruct)';$/;"	v
str5	src/vendor/phptars/tars-server/tests/test.php	/^$str5 = '\\Taf\\TJCE_Vector(\\Taf\\TJCE_Map(\\Taf\\TJCE::STRING,SimpleStruct))';$/;"	v
str6	src/vendor/phptars/tars-server/tests/test.php	/^$str6 = '\\Taf\\TJCE_Map(\\Taf\\TJCE::STRING,\\Taf\\TJCE_Vector(SimpleStruct))';$/;"	v
str7	src/vendor/phptars/tars-server/tests/test.php	/^$str7 = '\\Taf\\TJCE_Vector(\\Taf\\TJCE_Map(\\Taf\\TJCE::STRING,\\Taf\\TJCE_Vector(SimpleStruct)))';$/;"	v
str8	src/vendor/phptars/tars-server/tests/test.php	/^$str8 = '\\Taf\\TJCE_Map(\\Taf\\TJCE::STRING,\\Taf\\TJCE_Vector(\\Taf\\TJCE_Map(\\Taf\\TJCE::STRING,SimpleStruct)))';$/;"	v
stream	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^                $this->stream = null;$/;"	v
stream	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^            $this->stream = $stream;$/;"	v
stream	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^            $this->stream = fopen($this->url, 'a');$/;"	v
stream	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $this->stream = null;$/;"	v
stream	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    protected $stream;$/;"	v
streamGetMetadata	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function streamGetMetadata()$/;"	f
streamHandler	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^            $streamHandler = new StreamHandler($path);$/;"	v
streamHandler	src/vendor/phptars/tars-log/tests/demo.php	/^$streamHandler = new StreamHandler(__DIR__ . '\/test.log');$/;"	v
streamProp	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $streamProp = new \\ReflectionProperty('Monolog\\Handler\\StreamHandler', 'stream');$/;"	v
streamSetChunkSize	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function streamSetChunkSize()$/;"	f
streamSetTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function streamSetTimeout()$/;"	f
streamWrite	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    protected function streamWrite($stream, array $record)$/;"	f
stringify	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function stringify($value)$/;"	f
stringify	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    public function stringify($fields)$/;"	f
stringify	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    protected function stringify($fields)$/;"	f
stripPrefix	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function setTrace($enabled, $stripPrefix = null)$/;"	v
structBodyParseLine	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function structBodyParseLine()$/;"	f
structBuffer	src/vendor/phptars/tars-report/src/ServerF.php	/^            $structBuffer = \\TUPAPI::putStruct('serverInfo', $serverInfo);$/;"	v
structBuffer	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^            $structBuffer = \\TUPAPI::putStruct('serverInfo', $serverInfo);$/;"	v
structBuffer	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $structBuffer = \\TUPAPI::putStruct('serverInfo', $serverInfo);$/;"	v
structClassStr	src/vendor/phptars/tars2php/src/tars2php.php	/^                $structClassStr = $structParser->parse();$/;"	v
structClassStr	src/vendor/phptars/tars2php/src/tars2php.php	/^        $structClassStr = $this->getStructClassHeader('\\\\classes').$/;"	v
structFlag	src/vendor/phptars/tars2php/src/tars2php.php	/^            $structFlag = strpos($line, 'struct');$/;"	v
structInst	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $structInst = new $className();$/;"	v
structInst	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $structInst = new $proto();$/;"	v
structInst	src/vendor/phptars/tars-server/tests/test.php	/^             $structInst = new $className();$/;"	v
structInst	src/vendor/phptars/tars-server/tests/test.php	/^         $structInst = new $proto();$/;"	v
structName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->structName = $structName;$/;"	v
structName	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $structName;$/;"	v
structParser	src/vendor/phptars/tars2php/src/tars2php.php	/^                $structParser = new StructParser($fp, $line, $this->uniqueName, $this->moduleName, $name, $this->preStructs,$/;"	v
structParser	src/vendor/phptars/tars2php/src/tars2php.php	/^                $structParser = new StructParser($fp, $line, $uniqueName, $moduleName, $name, $preStructs,$/;"	v
subParts	src/vendor/phptars/tars-server/tests/testConf.php	/^        $subParts = explode('-', $parts[1]);$/;"	v
subParts	src/vendor/phptars/tars-server/tests/testConf.php	/^        $subParts = explode(':', $parts[1]);$/;"	v
subParts	src/vendor/phptars/tars-utils/src/Utils.php	/^        $subParts = explode('-', $parts[1]);$/;"	v
subParts	src/vendor/phptars/tars-utils/src/Utils.php	/^        $subParts = explode(':', $parts[1]);$/;"	v
subPath	src/vendor/composer/ClassLoader.php	/^                $subPath = substr($subPath, 0, $lastPos);$/;"	v
subPath	src/vendor/composer/ClassLoader.php	/^            $subPath = $class;$/;"	v
subQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $subQuery = $value->getSubQuery();$/;"	v
subQuery	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public static function subQuery($subQueryAlias = "")$/;"	f
sub_table	src/vendor/catfan/medoo/src/Medoo.php	/^			foreach($join as $sub_table => $relation)$/;"	v
subject	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        $subject = sprintf($/;"	v
subject	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^            $subject = $subjectFormatter->format($this->getHighestRecord($records));$/;"	v
subject	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $subject = $this->subject;$/;"	v
subject	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $this->subject = $subject;$/;"	v
subject	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $subject;$/;"	v
subject	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $subject = 'dear victim';$/;"	v
subject	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^            $subject = count($records) > 0 ? 'Emergency' : 'Normal';$/;"	v
subjectFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^            $subjectFormatter = new LineFormatter($this->subject);$/;"	v
subjectFormatter	src/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^            $subjectFormatter = $this->getSubjectFormatter($message->getSubject());$/;"	v
successCount	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^                $successCount = 1;$/;"	v
successCount	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^            $successCount = $timeoutCount = $execCount = 0;$/;"	v
sum	src/vendor/catfan/medoo/src/Medoo.php	/^	public function sum($table, $join, $column = null, $where = null)$/;"	f
sw	src/vendor/phptars/tars-server/src/core/Server.php	/^        $sw = new $swooleServerName($this->host, $this->port, SWOOLE_PROCESS, SWOOLE_SOCK_TCP);$/;"	v
sw	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->sw = $sw;$/;"	v
sw	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $sw;$/;"	v
swooleCoroutineTcp	src/vendor/phptars/tars-client/src/Communicator.php	/^    private function swooleCoroutineTcp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	f
swooleCoroutineTcp	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    private function swooleCoroutineTcp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	f
swooleCoroutineTcp	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    private function swooleCoroutineTcp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	f
swooleCoroutineUdp	src/vendor/phptars/tars-client/src/Communicator.php	/^    private function swooleCoroutineUdp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	f
swooleCoroutineUdp	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    private function swooleCoroutineUdp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	f
swooleServerName	src/vendor/phptars/tars-server/src/core/Server.php	/^        $swooleServerName = ($this->servType == 'http') ? '\\swoole_http_server' : '\\swoole_server';$/;"	v
swooleTcp	src/vendor/phptars/tars-client/src/Communicator.php	/^    private function swooleTcp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	f
swooleTcp	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    private function swooleTcp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	f
swooleTcp	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    private function swooleTcp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	f
swooleUdp	src/vendor/phptars/tars-client/src/Communicator.php	/^    private function swooleUdp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	f
swooleUdp	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    private function swooleUdp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	f
synFuncBody	src/vendor/phptars/tars2php/src/tars2php.php	/^        $synFuncBody = $funcBodyArr['syn'];$/;"	v
syncInvokeTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->syncInvokeTimeout = $config['tars']['application']['client']['sync-invoke-timeout'];$/;"	v
syncInvokeTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^        $this->syncInvokeTimeout = $syncInvokeTimeout;$/;"	v
syncInvokeTimeout	src/vendor/phptars/tars-client/src/CommunicatorConfig.php	/^    protected $syncInvokeTimeout = 3000;$/;"	v
syncInvokeTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->syncInvokeTimeout = $config['tars']['application']['client']['syncInvokeTimeout'];$/;"	v
syncInvokeTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^        $this->syncInvokeTimeout = $syncInvokeTimeout;$/;"	v
syncInvokeTimeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorConfig.php	/^    protected $syncInvokeTimeout = 3000;$/;"	v
syslog	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^ *   $syslog = new SyslogHandler('myfacility', 'local6');$/;"	v
systemName	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        $this->systemName = $systemName ?: gethostname();$/;"	v
systemName	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    protected $systemName;$/;"	v
systemName	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^        $this->systemName = $systemName ?: gethostname();$/;"	v
systemName	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    protected $systemName;$/;"	v
systemName	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    public function __construct($applicationName, $systemName = null, $extraPrefix = null, $contextPrefix = 'ctxt_', $version = self::V0)$/;"	v
tabSymbol	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $tabSymbol = "\\t";$/;"	v
table	src/conf/ENVConf.php	/^        $table = $_SERVER->table;$/;"	v
table	src/vendor/catfan/medoo/src/Medoo.php	/^			$table = $this->tableQuote($table);$/;"	v
table	src/vendor/catfan/medoo/src/Medoo.php	/^			$table = $this->tableQuote($table_match[ 'table' ]);$/;"	v
table	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^			$table = self::$prefix . $table;$/;"	v
table	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^		$table = self::$prefix . $importTable;$/;"	v
table	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $table = self::$prefix . $tableName;$/;"	v
table	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                $table = $obj->dbTable;$/;"	v
table	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public static function table ($tableName) {$/;"	f
table	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^        $this->table = $table;$/;"	v
table	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected $table;$/;"	v
table	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $table = $this->_cache;$/;"	v
table	src/vendor/phptars/tars-server/src/cmd/Start.php	/^        $table = Conf::getInstance();$/;"	v
table	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->table = $table;$/;"	v
table	src/vendor/phptars/tars-server/src/core/Server.php	/^    public function __construct($conf, $table = null)$/;"	v
tableData	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected function _buildQuery($numRows = null, $tableData = null)$/;"	v
tableExists	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function tableExists($tables)$/;"	f
tableName	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^        $tableName = preg_replace ("\/[^-a-z0-9_]+\/i",'', $tableName);$/;"	v
tableQuote	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function tableQuote($table)$/;"	f
table_join	src/vendor/catfan/medoo/src/Medoo.php	/^			$table_join = [];$/;"	v
table_name	src/vendor/catfan/medoo/src/Medoo.php	/^					$table_name = $this->tableQuote($match[ 'table' ]) . ' ';$/;"	v
table_query	src/vendor/catfan/medoo/src/Medoo.php	/^			$table_query = $table . ' AS ' . $this->tableQuote($table_match[ 'alias' ]);$/;"	v
table_query	src/vendor/catfan/medoo/src/Medoo.php	/^			$table_query = $table;$/;"	v
tables	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $tables = !is_array($tables) ? Array($tables) : $tables;$/;"	v
tafAdapters	src/vendor/phptars/tars-server/tests/testConf.php	/^        $tafAdapters = [];$/;"	v
tafClient	src/vendor/phptars/tars-server/tests/testConf.php	/^        $tafClient = [];$/;"	v
tafServer	src/vendor/phptars/tars-server/tests/testConf.php	/^        $tafServer = [];$/;"	v
tag	src/vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^        $tag = $record['channel'];$/;"	v
tag	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^            $tag = is_array($tag) ? $tag : array($tag);$/;"	v
tag	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^            $this->tag = array_unique(array_merge($this->tag, $tag));$/;"	v
tag	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $tag = !empty($tag) ? $tag : array();$/;"	v
tag	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $this->tag = is_array($tag) ? $tag : array($tag);$/;"	v
tag	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    protected $tag = array();$/;"	v
tag	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $tag = 'tag';$/;"	v
tag	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $tag = $word;$/;"	v
tags	src/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        $tags = array($/;"	v
tags	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^                    $tags = $context[$key];$/;"	v
tags	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $tags = $this->getRecordTags($record);$/;"	v
tags	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $tags = null;$/;"	v
tags	src/vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^        $this->tags = $tags;$/;"	v
tags	src/vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^        $this->tags = array_merge($this->tags, $tags);$/;"	v
tags	src/vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    private $tags;$/;"	v
tags	src/vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function __construct(array $tags = array())$/;"	v
tags	src/vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function addTags(array $tags = array())$/;"	v
tags	src/vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function setTags(array $tags = array())$/;"	v
tags	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $tags = array(1, 2, 'foo');$/;"	v
tags	src/vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php	/^        $tags = array(1, 2, 3);$/;"	v
tagsContextKeys	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^            $tagsContextKeys = $this->getHandlerDefaultOption('debugTagsKeysInContext');$/;"	v
takes	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * This function takes the input, determines what type it is,$/;"	f
tarsAdapters	src/vendor/phptars/tars-utils/src/Utils.php	/^        $tarsAdapters = [];$/;"	v
tarsClient	src/vendor/phptars/tars-utils/src/Utils.php	/^        $tarsClient = [];$/;"	v
tarsClientConf	src/vendor/phptars/tars-server/src/core/Server.php	/^        $tarsClientConf = $conf['tars']['application']['client'];$/;"	v
tarsConf	src/conf/ENVConf.php	/^        $tarsConf = unserialize($result['tarsConfig']);$/;"	v
tarsConf	src/vendor/phptars/tars-utils/src/Conf.php	/^        $tarsConf = unserialize($data['tarsConfig']);$/;"	v
tarsConf	src/vendor/phptars/tars-utils/src/Utils.php	/^        $tarsConf = [$/;"	v
tarsConfig	src/vendor/phptars/tars-server/src/cmd/CommandBase.php	/^        $tarsConfig = Utils::parseFile($configPath);$/;"	v
tarsConfig	src/vendor/phptars/tars-server/src/cmd/CommandBase.php	/^        $this->tarsConfig = $tarsConfig;$/;"	v
tarsConfig	src/vendor/phptars/tars-server/src/cmd/CommandBase.php	/^    public $tarsConfig;$/;"	v
tarsConfig	src/vendor/phptars/tars-server/src/cmd/Start.php	/^        $tarsConfig = $this->tarsConfig;$/;"	v
tarsConfig	src/vendor/phptars/tars-server/src/cmd/Stop.php	/^        $tarsConfig = $this->tarsConfig;$/;"	v
tarsConfig	src/vendor/phptars/tars-server/src/core/Event.php	/^        $this->tarsConfig = $tarsConfig;$/;"	v
tarsConfig	src/vendor/phptars/tars-server/src/core/Event.php	/^    protected $tarsConfig;$/;"	v
tarsConfig	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->tarsConfig = $conf;$/;"	v
tarsConfig	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $tarsConfig;$/;"	v
tarsConfig	src/vendor/phptars/tars-server/src/protocol/HTTPProtocol.php	/^    public function route(\\Tars\\core\\Request $request, \\Tars\\core\\Response $response, $tarsConfig = [])  \/\/默认为$/;"	v
tarsConfig	src/vendor/phptars/tars-server/src/protocol/JSONProtocol.php	/^    public function route(\\Tars\\core\\Request $request, \\Tars\\core\\Response $response, $tarsConfig = [])  \/\/默认为$/;"	v
tarsConfig	src/vendor/phptars/tars-server/src/protocol/Protocol.php	/^    public function route(Request $request, Response $response, $tarsConfig = []);$/;"	v
tarsConfig	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^    public function route(Request $request, Response $response, $tarsConfig = [])$/;"	v
tarsHandler	src/vendor/phptars/tars-log/tests/demo.php	/^$tarsHandler = new TarsHandler($config);$/;"	v
tarsPHPRoot	src/vendor/phptars/tars-deploy/src/Deploy.php	/^        $tarsPHPRoot = dirname(dirname(dirname(dirname(dirname(dirname(__FILE__))))));$/;"	v
tarsRequestBuf	src/vendor/phptars/tars-report/src/ServerF.php	/^            $tarsRequestBuf = \\TUPAPI::encode($iVersion, $iRequestId, $servantName,$/;"	v
tarsRequestBuf	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^            $tarsRequestBuf = \\TUPAPI::encode($iVersion, $iRequestId, $servantName,$/;"	v
tarsRequestBuf	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $tarsRequestBuf = \\TUPAPI::encode($iVersion, $iRequestId, $servantName,$/;"	v
tarsResponseBuf	src/vendor/phptars/tars-client/src/Communicator.php	/^        $tarsResponseBuf = $client->recv();$/;"	v
tarsResponseBuf	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $tarsResponseBuf = $client->recv();$/;"	v
tarsResponseBuf	src/vendor/phptars/tars-report/src/ServerFSync.php	/^                        $tarsResponseBuf = $data;$/;"	v
tarsResponseBuf	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $tarsResponseBuf = null;$/;"	v
tarsServer	src/vendor/phptars/tars-utils/src/Utils.php	/^        $tarsServer = [];$/;"	v
tarsServerConf	src/vendor/phptars/tars-server/src/core/Server.php	/^        $tarsServerConf = $conf['tars']['application']['server'];$/;"	v
tarsTimeout	src/vendor/phptars/tars-report/src/ServerF.php	/^            $tarsTimeout = 2000;$/;"	v
tarsTimeout	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^            $tarsTimeout = 2000;$/;"	v
tarsTimeout	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $tarsTimeout = 2000;$/;"	v
tarsVersion	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $tarsVersion = '',$/;"	v
tarsVersion	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgHead.php	/^    public $tarsVersion;$/;"	v
td	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^            $td = '<pre>'.htmlspecialchars($td, ENT_NOQUOTES, 'UTF-8').'<\/pre>';$/;"	v
td	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    protected function addRow($th, $td = ' ', $escapeTd = true)$/;"	v
tearDown	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function tearDown()$/;"	f
tearDown	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function tearDown()$/;"	f
tearDown	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function tearDown()$/;"	f
tearDown	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    protected function tearDown()$/;"	f
tearDownAfterClass	src/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^    public static function tearDownAfterClass()$/;"	f
temp	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $temp = sys_get_temp_dir() . DIRECTORY_SEPARATOR . 'monolog_locked_log';$/;"	v
test	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $test = new TestHandler();$/;"	v
test	src/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^        $test = new TestHandler();$/;"	v
test	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $test    = new TestHandler();$/;"	v
test	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $test = new TestHandler();$/;"	v
test	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $test = new TestHandler();$/;"	v
test	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^        $test = new TestHandler();$/;"	v
test	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $test = new TestHandler();$/;"	v
test	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function test($handler, $record)$/;"	f
testAcceptedLevelApi	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testAcceptedLevelApi()$/;"	f
testAddsChannel	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsChannel()$/;"	f
testAddsCustomUsername	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsCustomUsername()$/;"	f
testAddsFallbackAndTextToAttachment	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsFallbackAndTextToAttachment()$/;"	f
testAddsIcon	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsIcon()$/;"	f
testAddsLongAttachmentWithContextAndExtra	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsLongAttachmentWithContextAndExtra()$/;"	f
testAddsLongAttachmentWithoutContextAndExtra	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsLongAttachmentWithoutContextAndExtra()$/;"	f
testAddsOneAttachment	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsOneAttachment()$/;"	f
testAddsShortAttachmentWithContextAndExtra	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsShortAttachmentWithContextAndExtra()$/;"	f
testAddsShortAttachmentWithoutContextAndExtra	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsShortAttachmentWithoutContextAndExtra()$/;"	f
testAddsTimestampToAttachment	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsTimestampToAttachment()$/;"	f
testAllowOnlyFixedDefinedDateFormats	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function testAllowOnlyFixedDefinedDateFormats($dateFormat, $valid)$/;"	f
testAttachmentsNotPresentIfNoAttachment	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAttachmentsNotPresentIfNoAttachment()$/;"	f
testAutolabel	src/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    public function testAutolabel()$/;"	f
testAvoidInfiniteLoopWhenNoDataIsWrittenForAWritingTimeoutSeconds	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testAvoidInfiniteLoopWhenNoDataIsWrittenForAWritingTimeoutSeconds()$/;"	f
testBadConnectionTimeout	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testBadConnectionTimeout()$/;"	f
testBadExceptionHandlerType	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testBadExceptionHandlerType()$/;"	f
testBadTimeout	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testBadTimeout()$/;"	f
testBasic	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function testBasic($a, $b, $c, &$d, &$e, &$f)$/;"	f
testBasic	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testBasic($a,$b,$c,&$d,&$e,&$f) {$/;"	f
testBasic	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testBasic($a,$b,$c,&$d,&$e,&$f);$/;"	f
testBatchFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testBatchFormat()$/;"	f
testBatchFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testBatchFormat()$/;"	f
testBatchFormatThrowException	src/vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^    public function testBatchFormatThrowException()$/;"	f
testBatchFormatThrowException	src/vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^    public function testBatchFormatThrowException()$/;"	f
testBubblingWhenTheHandlerReturnsFalse	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testBubblingWhenTheHandlerReturnsFalse()$/;"	f
testCanNormalizeReferences	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testCanNormalizeReferences()$/;"	f
testChannel	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testChannel()$/;"	f
testChannelLevelActivationStrategy	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testChannelLevelActivationStrategy()$/;"	f
testChannelLevelActivationStrategyWithPsrLevels	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testChannelLevelActivationStrategyWithPsrLevels()$/;"	f
testClearClears	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testClearClears()$/;"	f
testClose	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testClose()$/;"	f
testClose	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testClose()$/;"	f
testCloseDoesNotClosePersistentSocket	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testCloseDoesNotClosePersistentSocket()$/;"	f
testCloseKeepsExternalHandlersOpen	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testCloseKeepsExternalHandlersOpen()$/;"	f
testComplicatedMap	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function testComplicatedMap($mcs, &$omcs)$/;"	f
testComplicatedMap	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testComplicatedMap($mcs,&$omcs) {$/;"	f
testComplicatedMap	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testComplicatedMap($mcs,&$omcs);$/;"	f
testComplicatedStruct	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function testComplicatedStruct(ComplicatedStruct $cs, $vcs, ComplicatedStruct &$ocs, &$ovcs)$/;"	f
testComplicatedStruct	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testComplicatedStruct(ComplicatedStruct $cs,$vcs,ComplicatedStruct &$ocs,&$ovcs) {$/;"	f
testComplicatedStruct	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testComplicatedStruct(ComplicatedStruct $cs,$vcs,ComplicatedStruct &$ocs,&$ovcs);$/;"	f
testConcurrentHandlers	src/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    public function testConcurrentHandlers()$/;"	f
testConcurrentHandlers	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    public function testConcurrentHandlers()$/;"	f
testConcurrentHandlers	src/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    public function testConcurrentHandlers()$/;"	f
testConnectionErrors	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function testConnectionErrors($ignore, $expectedError)$/;"	f
testConnectionStringisConstructedCorrectly	src/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^    public function testConnectionStringisConstructedCorrectly()$/;"	f
testConstruct	src/vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^    public function testConstruct()$/;"	f
testConstruct	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testConstruct()$/;"	f
testConstruct	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^    public function testConstruct()$/;"	f
testConstruct	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testConstruct($traceDepth, $traceAsString, $expectedTraceDepth, $expectedTraceAsString)$/;"	f
testConstruct	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^    public function testConstruct()$/;"	f
testConstruct	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^    public function testConstruct()$/;"	f
testConstruct	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    public function testConstruct()$/;"	f
testConstruct	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testConstruct()$/;"	f
testConstruct	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^    public function testConstruct()$/;"	f
testConstructAndGetSet	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^    public function testConstructAndGetSet()$/;"	f
testConstructInvalidFacility	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^    public function testConstructInvalidFacility()$/;"	f
testConstructorFull	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^    public function testConstructorFull()$/;"	f
testConstructorFull	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackbotHandlerTest.php	/^    public function testConstructorFull()$/;"	f
testConstructorHeaderInjection	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testConstructorHeaderInjection()$/;"	f
testConstructorMinimal	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^    public function testConstructorMinimal()$/;"	f
testConstructorMinimal	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackbotHandlerTest.php	/^    public function testConstructorMinimal()$/;"	f
testConstructorOnlyTakesHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^    public function testConstructorOnlyTakesHandler()$/;"	f
testConstructorOnlyTakesHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function testConstructorOnlyTakesHandler()$/;"	f
testConstructorSetsExpectedDefaults	src/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^    public function testConstructorSetsExpectedDefaults()$/;"	f
testConstructorShouldThrowExceptionForInvalidMongo	src/vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^    public function testConstructorShouldThrowExceptionForInvalidMongo()$/;"	f
testConstructorShouldThrowExceptionForInvalidRedis	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testConstructorShouldThrowExceptionForInvalidRedis()$/;"	f
testConstructorShouldWorkWithPredis	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testConstructorShouldWorkWithPredis()$/;"	f
testConstructorShouldWorkWithRedis	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testConstructorShouldWorkWithRedis()$/;"	f
testContext	src/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    public function testContext()$/;"	f
testContextAndExtraOptionallyNotShownIfEmpty	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testContextAndExtraOptionallyNotShownIfEmpty()$/;"	f
testContextAndExtraReplacement	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testContextAndExtraReplacement()$/;"	f
testContextCanContainAnything	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testContextCanContainAnything()$/;"	f
testContextExceptionKeyCanBeExceptionOrOtherValues	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testContextExceptionKeyCanBeExceptionOrOtherValues()$/;"	f
testContextHasException	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testContextHasException()$/;"	f
testContextReplacement	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testContextReplacement()$/;"	f
testConvertPSR3ToMonologLevel	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testConvertPSR3ToMonologLevel()$/;"	f
testConvertsInvalidEncodingAsLatin9	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testConvertsInvalidEncodingAsLatin9()$/;"	f
testCreateWithTooLongName	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testCreateWithTooLongName()$/;"	f
testCreateWithTooLongNameV2	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testCreateWithTooLongNameV2()$/;"	f
testCustomHandleException	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testCustomHandleException()$/;"	f
testDebug	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^    public function testDebug()$/;"	f
testDebug	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    public function testDebug()$/;"	f
testDebug	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testDebug()$/;"	f
testDebug	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testDebug()$/;"	f
testDebugContextInMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testDebugContextInMessage()$/;"	f
testDebugTags	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testDebugTags($tagsContextKeys = null)$/;"	f
testDefFormatExtras	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testDefFormatExtras()$/;"	f
testDefFormatWithArrayContext	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testDefFormatWithArrayContext()$/;"	f
testDefFormatWithException	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testDefFormatWithException()$/;"	f
testDefFormatWithException	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testDefFormatWithException()$/;"	f
testDefFormatWithObject	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testDefFormatWithObject()$/;"	f
testDefFormatWithPreviousException	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testDefFormatWithPreviousException()$/;"	f
testDefFormatWithPreviousException	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testDefFormatWithPreviousException()$/;"	f
testDefFormatWithString	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testDefFormatWithString()$/;"	f
testDefFormatWithThrowable	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testDefFormatWithThrowable()$/;"	f
testDefaultFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^    public function testDefaultFormat()$/;"	f
testDefaultFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^    public function testDefaultFormat()$/;"	f
testDefaultFormatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testDefaultFormatter()$/;"	f
testDefaultFormatter	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testDefaultFormatter()$/;"	f
testDefaultFormatterV1	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testDefaultFormatterV1()$/;"	f
testDefaultHandleException	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testDefaultHandleException()$/;"	f
testDetectAndCleanUtf8	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testDetectAndCleanUtf8($in, $expect)$/;"	f
testDisallowFilenameFormatsWithoutDate	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function testDisallowFilenameFormatsWithoutDate($filenameFormat, $valid)$/;"	f
testDoubleCloseDoesNotError	src/vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^    public function testDoubleCloseDoesNotError()$/;"	f
testDumperOptions	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testDumperOptions($option, $dumperProperty, $value)$/;"	f
testEmpty	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function testEmpty($a, &$b1, &$in2, OutStruct &$d, &$v3, &$v4)$/;"	f
testEmpty	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testEmpty($a,&$b1,&$in2,OutStruct &$d,&$v3,&$v4) {$/;"	f
testEmpty	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testEmpty($a,&$b1,&$in2,OutStruct &$d,&$v3,&$v4);$/;"	f
testError	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testError($classesPartialsTraceIgnore = null)$/;"	f
testErrorLevelActivationStrategy	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testErrorLevelActivationStrategy()$/;"	f
testErrorLevelActivationStrategyWithPsrLevel	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testErrorLevelActivationStrategyWithPsrLevel()$/;"	f
testEscaping	src/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    public function testEscaping()$/;"	f
testException	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testException()$/;"	f
testException	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testException()$/;"	f
testExceptionIsThrownIfCannotSetChunkSize	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testExceptionIsThrownIfCannotSetChunkSize()$/;"	f
testExceptionIsThrownIfCannotSetTimeout	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testExceptionIsThrownIfCannotSetTimeout()$/;"	f
testExceptionIsThrownOnFsockopenError	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testExceptionIsThrownOnFsockopenError()$/;"	f
testExceptionIsThrownOnPfsockopenError	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testExceptionIsThrownOnPfsockopenError()$/;"	f
testExceptionLogLevel	src/vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    public function testExceptionLogLevel()$/;"	f
testExceptionTraceDoesNotLeakCallUserFuncArgs	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testExceptionTraceDoesNotLeakCallUserFuncArgs()$/;"	f
testExceptionTraceWithArgs	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testExceptionTraceWithArgs()$/;"	f
testExcludeExtraAndContextFields	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testExcludeExtraAndContextFields()$/;"	f
testExtraParameters	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testExtraParameters()$/;"	f
testFailsOnNonExistantLogger	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testFailsOnNonExistantLogger()$/;"	f
testFailsOnUnspecifiedReplacement	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testFailsOnUnspecifiedReplacement()$/;"	f
testFingerprint	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testFingerprint()$/;"	f
testFlush	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testFlush()$/;"	f
testFlushPassthruIfAllRecordsUnderTrigger	src/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^    public function testFlushPassthruIfAllRecordsUnderTrigger()$/;"	f
testFlushPassthruIfEmptyLog	src/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^    public function testFlushPassthruIfEmptyLog()$/;"	f
testFlushPassthruIfLogTooOld	src/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^    public function testFlushPassthruIfLogTooOld()$/;"	f
testFlushSkipsIfLogExists	src/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^    public function testFlushSkipsIfLogExists()$/;"	f
testFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^    public function testFormat()$/;"	f
testFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^    public function testFormat()$/;"	f
testFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^    public function testFormat()$/;"	f
testFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testFormat()$/;"	f
testFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^    public function testFormat()$/;"	f
testFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testFormat()$/;"	f
testFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    public function testFormat()$/;"	f
testFormatBatch	src/vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^    public function testFormatBatch()$/;"	f
testFormatBatch	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testFormatBatch()$/;"	f
testFormatBatchNewlines	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testFormatBatchNewlines()$/;"	f
testFormatDepthArray	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testFormatDepthArray()$/;"	f
testFormatDepthArrayInfiniteNesting	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testFormatDepthArrayInfiniteNesting()$/;"	f
testFormatDepthException	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testFormatDepthException()$/;"	f
testFormatDepthObjects	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testFormatDepthObjects()$/;"	f
testFormatExceptions	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testFormatExceptions()$/;"	f
testFormatExtras	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testFormatExtras()$/;"	f
testFormatInvalidFails	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatInvalidFails()$/;"	f
testFormatShouldNotStripInlineLineBreaksWhenFlagIsSet	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testFormatShouldNotStripInlineLineBreaksWhenFlagIsSet()$/;"	f
testFormatShouldStripInlineLineBreaks	src/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testFormatShouldStripInlineLineBreaks()$/;"	f
testFormatSoapFaultException	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testFormatSoapFaultException()$/;"	f
testFormatToStringExceptionHandle	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testFormatToStringExceptionHandle()$/;"	f
testFormatWithApplicationName	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithApplicationName()$/;"	f
testFormatWithApplicationNameV1	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithApplicationNameV1()$/;"	f
testFormatWithContext	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatWithContext()$/;"	f
testFormatWithContext	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithContext()$/;"	f
testFormatWithContextContainingException	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatWithContextContainingException()$/;"	f
testFormatWithContextV1	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithContextV1()$/;"	f
testFormatWithErrorContext	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    public function testFormatWithErrorContext()$/;"	f
testFormatWithExceptionContext	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    public function testFormatWithExceptionContext()$/;"	f
testFormatWithExtra	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatWithExtra()$/;"	f
testFormatWithExtra	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithExtra()$/;"	f
testFormatWithExtraV1	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithExtraV1()$/;"	f
testFormatWithFileAndLine	src/vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^    public function testFormatWithFileAndLine()$/;"	f
testFormatWithFileAndLine	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatWithFileAndLine()$/;"	f
testFormatWithFileAndLine	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithFileAndLine()$/;"	f
testFormatWithFileAndLine	src/vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^    public function testFormatWithFileAndLine()$/;"	f
testFormatWithFileAndLineV1	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithFileAndLineV1()$/;"	f
testFormatWithLargeData	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatWithLargeData()$/;"	f
testFormatWithLatin9Data	src/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithLatin9Data()$/;"	f
testFormatWithTag	src/vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^    public function testFormatWithTag()$/;"	f
testFormatWithUnlimitedLength	src/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatWithUnlimitedLength()$/;"	f
testFormatWithoutContext	src/vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^    public function testFormatWithoutContext()$/;"	f
testFormatWithoutContext	src/vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^    public function testFormatWithoutContext()$/;"	f
testGcOldLogs	src/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^    public function testGcOldLogs()$/;"	f
testGetAttachmentColor	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testGetAttachmentColor($logLevel, $expectedColour)$/;"	f
testGetDefaultFormatterReturnsNormalizerFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^    public function testGetDefaultFormatterReturnsNormalizerFormatter()$/;"	f
testGetFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^    public function testGetFormatter()$/;"	f
testGetFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function testGetFormatter()$/;"	f
testGetFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^    public function testGetFormatter()$/;"	f
testGetFormatterInitializesDefault	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^    public function testGetFormatterInitializesDefault()$/;"	f
testGetLevelName	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testGetLevelName()$/;"	f
testGetLevelNameThrows	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testGetLevelNameThrows()$/;"	f
testGetName	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testGetName()$/;"	f
testGetSetBatchFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testGetSetBatchFormatter()$/;"	f
testGetUid	src/vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php	/^    public function testGetUid()$/;"	f
testGetsSameLogger	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testGetsSameLogger()$/;"	f
testGetters	src/vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^    public function testGetters()$/;"	f
testHandle	src/vendor/monolog/monolog/tests/Monolog/Handler/CouchDBHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	src/vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function testHandle($result)$/;"	f
testHandle	src/vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	src/vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	src/vendor/monolog/monolog/tests/Monolog/Handler/NullHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	src/vendor/monolog/monolog/tests/Monolog/Handler/SamplingHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function testHandle()$/;"	f
testHandleAmqpExt	src/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^    public function testHandleAmqpExt()$/;"	f
testHandleBatch	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^    public function testHandleBatch()$/;"	f
testHandleBatch	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^    public function testHandleBatch()$/;"	f
testHandleBatch	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function testHandleBatch($result)$/;"	f
testHandleBatch	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testHandleBatch($records, $expectedColor)$/;"	f
testHandleBatch	src/vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^    public function testHandleBatch()$/;"	f
testHandleBatch	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testHandleBatch()$/;"	f
testHandleBatch	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function testHandleBatch()$/;"	f
testHandleBatchDoNothingIfRecordsAreBelowLevel	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testHandleBatchDoNothingIfRecordsAreBelowLevel()$/;"	f
testHandleBatchNotSendsMailIfMessagesAreBelowLevel	src/vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^    public function testHandleBatchNotSendsMailIfMessagesAreBelowLevel()$/;"	f
testHandleBatchPicksProperMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testHandleBatchPicksProperMessage()$/;"	f
testHandleBatchUsesProcessors	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^    public function testHandleBatchUsesProcessors()$/;"	f
testHandleBatchUsesProcessors	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function testHandleBatchUsesProcessors()$/;"	f
testHandleBubbling	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testHandleBubbling()$/;"	f
testHandleBufferLimit	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testHandleBufferLimit()$/;"	f
testHandleBufferLimit	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleBufferLimit()$/;"	f
testHandleBufferLimitWithFlushOnOverflow	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testHandleBufferLimitWithFlushOnOverflow()$/;"	f
testHandleBuffers	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testHandleBuffers()$/;"	f
testHandleBuffers	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleBuffers()$/;"	f
testHandleError	src/vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^    public function testHandleError()$/;"	f
testHandleException	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function testHandleException()$/;"	f
testHandleIntegration	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function testHandleIntegration()$/;"	f
testHandleIsFalseWhenNotHandled	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testHandleIsFalseWhenNotHandled()$/;"	f
testHandleJsonErrorFailure	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testHandleJsonErrorFailure($code, $msg)$/;"	f
testHandleLevel	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testHandleLevel()$/;"	f
testHandleLowerLevelMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testHandleLowerLevelMessage()$/;"	f
testHandleLowerLevelRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/NullHandlerTest.php	/^    public function testHandleLowerLevelRecord()$/;"	f
testHandleNotBubbling	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testHandleNotBubbling()$/;"	f
testHandlePhpAmqpLib	src/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^    public function testHandlePhpAmqpLib()$/;"	f
testHandleProcessOnlyNeededLevels	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testHandleProcessOnlyNeededLevels()$/;"	f
testHandleResetBufferingAfterBeingTriggeredWhenStopBufferingIsDisabled	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleResetBufferingAfterBeingTriggeredWhenStopBufferingIsDisabled()$/;"	f
testHandleResetBufferingAfterReset	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleResetBufferingAfterReset()$/;"	f
testHandleRespectsBubble	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testHandleRespectsBubble()$/;"	f
testHandleSignal	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    public function testHandleSignal()$/;"	f
testHandleStopsBufferingAfterTrigger	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleStopsBufferingAfterTrigger()$/;"	f
testHandleUsesProcessors	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testHandleUsesProcessors()$/;"	f
testHandleUsesProcessors	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testHandleUsesProcessors()$/;"	f
testHandleUsesProcessors	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleUsesProcessors()$/;"	f
testHandleUsesProcessors	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^    public function testHandleUsesProcessors()$/;"	f
testHandleUsesProcessors	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function testHandleUsesProcessors()$/;"	f
testHandleWithBadCallbackThrowsException	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testHandleWithBadCallbackThrowsException()$/;"	f
testHandleWithBadCallbackThrowsException	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleWithBadCallbackThrowsException()$/;"	f
testHandleWithCallback	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testHandleWithCallback()$/;"	f
testHandleWithCallback	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleWithCallback()$/;"	f
testHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/SamplingHandlerTest.php	/^        $testHandler = new TestHandler();$/;"	v
testHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^    public function testHandler($method, $level)$/;"	f
testHandler	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $testHandler = new Handler\\TestHandler();$/;"	v
testHandlerAssertEmptyContext	src/vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^    public function testHandlerAssertEmptyContext() {$/;"	f
testHandlerAssertNonEmptyContext	src/vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^    public function testHandlerAssertNonEmptyContext() {$/;"	f
testHandlerUsesLineFormatterWhichIgnoresEmptyArrays	src/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^    public function testHandlerUsesLineFormatterWhichIgnoresEmptyArrays()$/;"	f
testHandlers	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^        $testHandlers = array(new TestHandler(), new TestHandler());$/;"	v
testHandlers	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^        $testHandlers = array(new TestHandler(Logger::ERROR), new TestHandler(Logger::WARNING));$/;"	v
testHandlers	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $testHandlers = array(new TestHandler(), new TestHandler());$/;"	v
testHandlers	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $testHandlers = array(new TestHandler(Logger::ERROR), new TestHandler(Logger::WARNING));$/;"	v
testHandlersInCtor	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testHandlersInCtor()$/;"	f
testHandlersNotCalledBeforeFirstHandling	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testHandlersNotCalledBeforeFirstHandling()$/;"	f
testHandlersNotCalledBeforeFirstHandlingWithAssocArray	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testHandlersNotCalledBeforeFirstHandlingWithAssocArray()$/;"	f
testHandlesAllLevels	src/vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^    public function testHandlesAllLevels($levelName, $level)$/;"	f
testHandlesPsrStyleLevels	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^    public function testHandlesPsrStyleLevels()$/;"	f
testHasLogger	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testHasLogger(array $loggersToAdd, array $loggersToCheck, array $expectedResult)$/;"	f
testHeaders	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    public function testHeaders($agent)$/;"	f
testHeaders	src/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    public function testHeaders()$/;"	f
testHeadersOverflow	src/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    public function testHeadersOverflow()$/;"	f
testIgnoresInvalidTypes	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testIgnoresInvalidTypes()$/;"	f
testIgnoresRecursiveObjectReferences	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testIgnoresRecursiveObjectReferences()$/;"	f
testImplements	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testImplements()$/;"	f
testInitWithCustomConnector	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testInitWithCustomConnector()$/;"	f
testInitWithDefaultConnector	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testInitWithDefaultConnector()$/;"	f
testInjectedGelfMessageFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^    public function testInjectedGelfMessageFormatter()$/;"	f
testInjectedGelfMessageFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    public function testInjectedGelfMessageFormatter()$/;"	f
testInterface	src/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^    public function testInterface()$/;"	f
testInvalidData	src/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testInvalidData()$/;"	f
testInvalidHostname	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testInvalidHostname()$/;"	f
testIsHandling	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^    public function testIsHandling()$/;"	f
testIsHandling	src/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testIsHandling()$/;"	f
testIsHandling	src/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^    public function testIsHandling()$/;"	f
testIsHandling	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function testIsHandling($result)$/;"	f
testIsHandling	src/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function testIsHandling()$/;"	f
testIsHandling	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testIsHandling()$/;"	f
testIsHandlingAlways	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testIsHandlingAlways()$/;"	f
testLevelEqual	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function testLevelEqual()$/;"	f
testLevelHigher	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function testLevelHigher()$/;"	f
testLevelTooLow	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function testLevelTooLow()$/;"	f
testLofofTags	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function testLofofTags(LotofTags $tags, LotofTags &$outtags)$/;"	f
testLofofTags	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testLofofTags(LotofTags $tags,LotofTags &$outtags) {$/;"	f
testLofofTags	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testLofofTags(LotofTags $tags,LotofTags &$outtags);$/;"	f
testLog	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testLog()$/;"	f
testLogMethods	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testLogMethods($method, $expectedLevel)$/;"	f
testLogNotHandled	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testLogNotHandled()$/;"	f
testLogger	src/vendor/monolog/monolog/src/Monolog/Registry.php	/^ * function testLogger()$/;"	f
testLogsAtAllLevels	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testLogsAtAllLevels($level, $message)$/;"	f
testLongMessagesAreTruncated	src/vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^    public function testLongMessagesAreTruncated()$/;"	f
testMap	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function testMap($a, SimpleStruct $b, $m1, OutStruct &$d, &$m2)$/;"	f
testMap	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testMap($a,SimpleStruct $b,$m1,OutStruct &$d,&$m2) {$/;"	f
testMap	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testMap($a,SimpleStruct $b,$m1,OutStruct &$d,&$m2);$/;"	f
testMapsLevelToColorAttachmentColor	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testMapsLevelToColorAttachmentColor()$/;"	f
testMessageCanBeCustomizedGivenLoggedData	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^    public function testMessageCanBeCustomizedGivenLoggedData()$/;"	f
testMessageCreationIsLazyWhenUsingCallback	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^    public function testMessageCreationIsLazyWhenUsingCallback()$/;"	f
testMessageHaveUniqueId	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^    public function testMessageHaveUniqueId()$/;"	f
testMessageSubjectFormatting	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testMessageSubjectFormatting()$/;"	f
testMessageSubjectFormatting	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^    public function testMessageSubjectFormatting()$/;"	f
testNoIcon	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testNoIcon()$/;"	f
testNoUsernameByDefault	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testNoUsernameByDefault()$/;"	f
testNormalizeHandleLargeArrays	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testNormalizeHandleLargeArrays()$/;"	f
testNormalizeHandleLargeArrays	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testNormalizeHandleLargeArrays()$/;"	f
testNormalizeHandleLargeArraysWithExactly1000Items	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testNormalizeHandleLargeArraysWithExactly1000Items()$/;"	f
testNormalizeHandleLargeArraysWithExactly1000Items	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testNormalizeHandleLargeArraysWithExactly1000Items()$/;"	f
testNotBubblingWhenTheHandlerReturnsTrue	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testNotBubblingWhenTheHandlerReturnsTrue()$/;"	f
testObjectCastToString	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testObjectCastToString()$/;"	f
testOptionCallsConnectorMethod	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionCallsConnectorMethod($option, $method, $value, $isArgument = true)$/;"	f
testOptionClassesPartialsTraceIgnore	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionClassesPartialsTraceIgnore()$/;"	f
testOptionDebugTagsKeysInContext	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionDebugTagsKeysInContext()$/;"	f
testOptionDetectDumpTraceAndSource	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionDetectDumpTraceAndSource()$/;"	f
testOptionEnabled	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionEnabled()$/;"	f
testOptionUseOwnErrorsAndExceptionsHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionUseOwnErrorsAndExceptionsHandler()$/;"	f
testOptions	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function testOptions()$/;"	f
testOverrideActivationStrategy	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testOverrideActivationStrategy()$/;"	f
testPassthruOnClose	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testPassthruOnClose()$/;"	f
testPopProcessor	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function testPopProcessor()$/;"	f
testPredisHandle	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testPredisHandle()$/;"	f
testPredisHandleCapped	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testPredisHandleCapped()$/;"	f
testProcessRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testProcessRecord()$/;"	f
testProcessor	src/vendor/monolog/monolog/tests/Monolog/Processor/GitProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	src/vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	src/vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	src/vendor/monolog/monolog/tests/Monolog/Processor/MercurialProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	src/vendor/monolog/monolog/tests/Monolog/Processor/ProcessIdProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	src/vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	src/vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	src/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessorAddsOnlyRequestedExtraFields	src/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testProcessorAddsOnlyRequestedExtraFields()$/;"	f
testProcessorConfiguringOfExtraFields	src/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testProcessorConfiguringOfExtraFields()$/;"	f
testProcessorDoNothingIfNoRequestUri	src/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testProcessorDoNothingIfNoRequestUri()$/;"	f
testProcessorDoesNotAddUniqueIdIfNotPresent	src/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testProcessorDoesNotAddUniqueIdIfNotPresent()$/;"	f
testProcessorFromClass	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function testProcessorFromClass()$/;"	f
testProcessorFromFunc	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function testProcessorFromFunc()$/;"	f
testProcessorReturnNullIfNoHttpReferer	src/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testProcessorReturnNullIfNoHttpReferer()$/;"	f
testProcessorTagModification	src/vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php	/^    public function testProcessorTagModification()$/;"	f
testProcessorWithoutFormatting	src/vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php	/^    public function testProcessorWithoutFormatting()$/;"	f
testProcessorWithoutFormatting	src/vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php	/^    public function testProcessorWithoutFormatting()$/;"	f
testProcessorsAreCalledOnlyOnce	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testProcessorsAreCalledOnlyOnce()$/;"	f
testProcessorsAreExecuted	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testProcessorsAreExecuted()$/;"	f
testProcessorsInCtor	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testProcessorsInCtor()$/;"	f
testProcessorsNotCalledWhenNotHandled	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testProcessorsNotCalledWhenNotHandled()$/;"	f
testPropagatesRecordsAtEndOfRequest	src/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testPropagatesRecordsAtEndOfRequest()$/;"	f
testProperty	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testProperty() {$/;"	f
testProperty	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testProperty();$/;"	f
testPsrLevelPassthruOnClose	src/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testPsrLevelPassthruOnClose()$/;"	f
testPushPopHandler	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testPushPopHandler()$/;"	f
testPushPopProcessor	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^    public function testPushPopProcessor()$/;"	f
testPushPopProcessor	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testPushPopProcessor()$/;"	f
testPushProcessor	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function testPushProcessor()$/;"	f
testPushProcessorWithNonCallable	src/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^    public function testPushProcessorWithNonCallable()$/;"	f
testPushProcessorWithNonCallable	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testPushProcessorWithNonCallable()$/;"	f
testRecursiveFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testRecursiveFormat()$/;"	f
testRedisHandle	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testRedisHandle()$/;"	f
testRedisHandleCapped	src/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testRedisHandleCapped()$/;"	f
testRegisterAsyncSignalHandler	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    public function testRegisterAsyncSignalHandler($initialAsync, $desiredAsync, $expectedBefore, $expectedAfter)$/;"	f
testRegisterCallablePreviousSignalHandler	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    public function testRegisterCallablePreviousSignalHandler($callPrevious)$/;"	f
testRegisterDefaultPreviousSignalHandler	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    public function testRegisterDefaultPreviousSignalHandler($signo, $callPrevious, $expected)$/;"	f
testRegisterSignalHandler	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    public function testRegisterSignalHandler()$/;"	f
testRegisterSyscallRestartingSignalHandler	src/vendor/monolog/monolog/tests/Monolog/SignalHandlerTest.php	/^    public function testRegisterSyscallRestartingSignalHandler($restartSyscalls)$/;"	f
testRelease	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testRelease()$/;"	f
testRemovesLogger	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testRemovesLogger($loggerToAdd, $remove)$/;"	f
testReplacement	src/vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^    public function testReplacement($val, $expected)$/;"	f
testReplacesLogger	src/vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testReplacesLogger()$/;"	f
testReset	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testReset()$/;"	f
testReturn	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function testReturn()$/;"	f
testReturn	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testReturn() {$/;"	f
testReturn	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testReturn();$/;"	f
testReturn2	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function testReturn2()$/;"	f
testReturn2	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testReturn2() {$/;"	f
testReturn2	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testReturn2();$/;"	f
testReuseCurrentFile	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function testReuseCurrentFile()$/;"	f
testRoomSpaces	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testRoomSpaces()$/;"	f
testRotation	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function testRotation($createFile, $dateFormat, $timeCallback)$/;"	f
testRotationCreatesNewFile	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function testRotationCreatesNewFile()$/;"	f
testRotationWhenSimilarFileNamesExist	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function testRotationWhenSimilarFileNamesExist($dateFormat)$/;"	f
testSelf	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function testSelf()$/;"	f
testSelf	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testSelf() {$/;"	f
testSelf	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testSelf();$/;"	f
testSend	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testSend()$/;"	f
testSetChunkSize	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testSetChunkSize()$/;"	f
testSetConnectionString	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testSetConnectionString()$/;"	f
testSetConnectionTimeout	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testSetConnectionTimeout()$/;"	f
testSetExceptionHandler	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testSetExceptionHandler()$/;"	f
testSetFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function testSetFormatter()$/;"	f
testSetFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function testSetFormatter()$/;"	f
testSetFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^    public function testSetFormatter()$/;"	f
testSetFormatterInvalid	src/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function testSetFormatterInvalid()$/;"	f
testSetHandlers	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testSetHandlers()$/;"	f
testSetTimeout	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testSetTimeout()$/;"	f
testSetTimezone	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testSetTimezone($tz)$/;"	f
testSetWritingTimeout	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testSetWritingTimeout()$/;"	f
testSetterArrayHeaderInjection	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testSetterArrayHeaderInjection()$/;"	f
testSetterContentTypeInjection	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testSetterContentTypeInjection()$/;"	f
testSetterEncodingInjection	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testSetterEncodingInjection()$/;"	f
testSetterHeaderInjection	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testSetterHeaderInjection()$/;"	f
testShouldLogMessagesUsingErrorLogFuncion	src/vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^    public function testShouldLogMessagesUsingErrorLogFuncion()$/;"	f
testShouldNotAcceptAnInvalidTypeOnContructor	src/vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^    public function testShouldNotAcceptAnInvalidTypeOnContructor()$/;"	f
testSimpleFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testSimpleFormat()$/;"	f
testSplitWorksOnEmptyMsg	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^    public function testSplitWorksOnEmptyMsg()$/;"	f
testStringify	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testStringify($fields, $expectedResult)$/;"	f
testStruct	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function testStruct($a, SimpleStruct $b, OutStruct &$d)$/;"	f
testStruct	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testStruct($a,SimpleStruct $b,OutStruct &$d) {$/;"	f
testStruct	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testStruct($a,SimpleStruct $b,OutStruct &$d);$/;"	f
testStyling	src/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    public function testStyling()$/;"	f
testTableFormat	src/vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^    public function testTableFormat()$/;"	f
testTafServer	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function testTafServer()$/;"	f
testTafServer	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testTafServer() {$/;"	f
testTafServer	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testTafServer();$/;"	f
testTag	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testTag()$/;"	f
testTextEqualsFormatterOutput	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testTextEqualsFormatterOutput()$/;"	f
testTextEqualsMessageIfNoAttachment	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testTextEqualsMessageIfNoAttachment()$/;"	f
testTheAppNameCanBeInjectedFromtheConstructor	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testTheAppNameCanBeInjectedFromtheConstructor()$/;"	f
testTheAppNameCanBeOverriddenFromEachLog	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testTheAppNameCanBeOverriddenFromEachLog()$/;"	f
testTheAppNameIsNullByDefault	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testTheAppNameIsNullByDefault()$/;"	f
testTheTransactionNameCanBeInjectedFromTheConstructor	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testTheTransactionNameCanBeInjectedFromTheConstructor()$/;"	f
testTheTransactionNameCanBeOverriddenFromEachLog	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testTheTransactionNameCanBeOverriddenFromEachLog()$/;"	f
testTheTransactionNameIsNullByDefault	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testTheTransactionNameIsNullByDefault()$/;"	f
testThehandlerCanAddContextParamsToTheNewRelicTrace	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanAddContextParamsToTheNewRelicTrace()$/;"	f
testThehandlerCanAddExplodedContextParamsToTheNewRelicTrace	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanAddExplodedContextParamsToTheNewRelicTrace()$/;"	f
testThehandlerCanAddExplodedExtraParamsToTheNewRelicTrace	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanAddExplodedExtraParamsToTheNewRelicTrace()$/;"	f
testThehandlerCanAddExtraContextAndParamsToTheNewRelicTrace	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanAddExtraContextAndParamsToTheNewRelicTrace()$/;"	f
testThehandlerCanAddExtraParamsToTheNewRelicTrace	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanAddExtraParamsToTheNewRelicTrace()$/;"	f
testThehandlerCanHandleTheRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanHandleTheRecord()$/;"	f
testThehandlerCanHandleTheRecordsFormattedUsingTheLineFormatter	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanHandleTheRecordsFormattedUsingTheLineFormatter()$/;"	f
testThehandlerThrowsAnExceptionIfTheNRExtensionIsNotLoaded	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerThrowsAnExceptionIfTheNRExtensionIsNotLoaded()$/;"	f
testThrowsOnInvalidEncoding	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testThrowsOnInvalidEncoding()$/;"	f
testThrowsOnInvalidLevel	src/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testThrowsOnInvalidLevel()$/;"	f
testUseMicrosecondTimestamps	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testUseMicrosecondTimestamps($micro, $assert)$/;"	f
testUserContext	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testUserContext()$/;"	f
testVector	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^    public function testVector($a, $v1, $v2, &$v3, &$v4)$/;"	f
testVector	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testVector($a,$v1,$v2,&$v3,&$v4) {$/;"	f
testVector	src/vendor/phptars/tars2php/tests/server/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^	public function testVector($a,$v1,$v2,&$v3,&$v4);$/;"	f
testWarning	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php	/^    public function testWarning()$/;"	f
testWarning	src/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    public function testWarning()$/;"	f
testWarning	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testWarning()$/;"	f
testWeDoNotTruncateShortMessages	src/vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^    public function testWeDoNotTruncateShortMessages()$/;"	f
testWeSplitIntoLines	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^    public function testWeSplitIntoLines()$/;"	f
testWeValidateFacilities	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^    public function testWeValidateFacilities()$/;"	f
testWithName	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testWithName()$/;"	f
testWrite	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWrite()$/;"	f
testWrite	src/vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^    public function testWrite()$/;"	f
testWriteAfterCloseErrors	src/vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^    public function testWriteAfterCloseErrors()$/;"	f
testWriteBatchContent	src/vendor/monolog/monolog/tests/Monolog/Handler/InsightOpsHandlerTest.php	/^    public function testWriteBatchContent()$/;"	f
testWriteBatchContent	src/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^    public function testWriteBatchContent()$/;"	f
testWriteContent	src/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^    public function testWriteContent($content)$/;"	f
testWriteContent	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteContent($content)$/;"	f
testWriteContent	src/vendor/monolog/monolog/tests/Monolog/Handler/InsightOpsHandlerTest.php	/^    public function testWriteContent()$/;"	f
testWriteContent	src/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^    public function testWriteContent()$/;"	f
testWriteContent	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteContent($content)$/;"	f
testWriteContent	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function testWriteContent()$/;"	f
testWriteContentNotify	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteContentNotify($content)$/;"	f
testWriteContentUsesFormatterIfProvided	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function testWriteContentUsesFormatterIfProvided()$/;"	f
testWriteContentV1WithoutName	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteContentV1WithoutName()$/;"	f
testWriteContentV2	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteContentV2($content)$/;"	f
testWriteContentV2Notify	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteContentV2Notify($content)$/;"	f
testWriteContentV2WithoutName	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteContentV2WithoutName()$/;"	f
testWriteContentWithColors	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function testWriteContentWithColors($level, $expectedColor)$/;"	f
testWriteContentWithEmoji	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function testWriteContentWithEmoji()$/;"	f
testWriteContentWithPlainTextMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function testWriteContentWithPlainTextMessage()$/;"	f
testWriteCreatesTheStreamResource	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteCreatesTheStreamResource()$/;"	f
testWriteCustomHostHeader	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteCustomHostHeader()$/;"	f
testWriteFailsIfStreamTimesOut	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testWriteFailsIfStreamTimesOut()$/;"	f
testWriteFailsOnIfFwriteReturnsFalse	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testWriteFailsOnIfFwriteReturnsFalse()$/;"	f
testWriteFailsOnIncompleteWrite	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testWriteFailsOnIncompleteWrite()$/;"	f
testWriteHeader	src/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^    public function testWriteHeader()$/;"	f
testWriteHeader	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteHeader()$/;"	f
testWriteHeader	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteHeader()$/;"	f
testWriteHeader	src/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function testWriteHeader()$/;"	f
testWriteInvalidArgument	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteInvalidArgument($invalidArgument)$/;"	f
testWriteInvalidResource	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteInvalidResource()$/;"	f
testWriteLocking	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteLocking()$/;"	f
testWriteMissingResource	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteMissingResource()$/;"	f
testWriteNonExistingAndNotCreatableFileResource	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteNonExistingAndNotCreatableFileResource()$/;"	f
testWriteNonExistingAndNotCreatablePath	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteNonExistingAndNotCreatablePath()$/;"	f
testWriteNonExistingFileResource	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteNonExistingFileResource()$/;"	f
testWriteNonExistingPath	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteNonExistingPath()$/;"	f
testWriteNonExistingResource	src/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteNonExistingResource()$/;"	f
testWriteToMultipleUsers	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteToMultipleUsers()$/;"	f
testWriteTruncatesLongMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteTruncatesLongMessage()$/;"	f
testWriteV2	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteV2()$/;"	f
testWriteV2Notify	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteV2Notify()$/;"	f
testWriteWithComplexMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteWithComplexMessage()$/;"	f
testWriteWithComplexMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteWithComplexMessage()$/;"	f
testWriteWithComplexTitle	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteWithComplexTitle()$/;"	f
testWriteWithEmergencyPriority	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteWithEmergencyPriority()$/;"	f
testWriteWithErrorLevelsAndColors	src/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteWithErrorLevelsAndColors($level, $expectedColor)$/;"	f
testWriteWithHighPriority	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteWithHighPriority()$/;"	f
testWriteWithMemoryFile	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testWriteWithMemoryFile()$/;"	f
testWriteWithMock	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testWriteWithMock()$/;"	f
testWriteWithTooLongMessage	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteWithTooLongMessage()$/;"	f
testWrongOptionsThrowsException	src/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testWrongOptionsThrowsException()$/;"	f
tester	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $tester = new \\Acme\\Tester;$/;"	v
tester	src/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^function tester($handler, $record)$/;"	f
text	src/vendor/phptars/tars-server/tests/testConf.php	/^$text = "";$/;"	v
text	src/vendor/phptars/tars-utils/src/Utils.php	/^        $text = file_get_contents($configPath);$/;"	v
tgzFile	src/vendor/phptars/tars-deploy/src/Deploy.php	/^        $tgzFile = $tarsPHPRoot.DIRECTORY_SEPARATOR.'src'.DIRECTORY_SEPARATOR.$serverName.'_'.date('YmdHis').'.tar.gz';$/;"	v
th	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^        $th = htmlspecialchars($th, ENT_NOQUOTES, 'UTF-8');$/;"	v
that	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * A convenient function that returns TRUE if exists at least an element that$/;"	f
that	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $that = $this;$/;"	v
that	src/vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^        $that = $this;$/;"	v
that	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $that = $this;$/;"	v
throwEncodeError	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    private function throwEncodeError($code, $data)$/;"	f
throwHelper	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    private function throwHelper($arg)$/;"	f
throwable	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $throwable = new \\Error('Foo');$/;"	v
time	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $this->time = $time;$/;"	v
time	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    protected $time;$/;"	v
time	src/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $time = '2014-01-07T12:34';$/;"	v
time	src/vendor/phptars/tars-client/src/Communicator.php	/^        $time = microtime(true);$/;"	v
time	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $time = time();$/;"	v
time	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $time = microtime(true);$/;"	v
time	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $time = microtime(true);$/;"	v
timeSlice	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^        $timeSlice = $this->getTimeSlice($this->_reportInterval);$/;"	v
timedFilename	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $timedFilename = str_replace($/;"	v
timeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->timeout = (float) $seconds;$/;"	v
timeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $timeout = 0;$/;"	v
timeout	src/vendor/phptars/tars-client/src/Communicator.php	/^        $timeout = $timeout \/ 1000;$/;"	v
timeout	src/vendor/phptars/tars-client/src/Communicator.php	/^    private function socketTcp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	v
timeout	src/vendor/phptars/tars-client/src/Communicator.php	/^    private function socketUdp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	v
timeout	src/vendor/phptars/tars-client/src/Communicator.php	/^    private function swooleCoroutineTcp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	v
timeout	src/vendor/phptars/tars-client/src/Communicator.php	/^    private function swooleCoroutineUdp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	v
timeout	src/vendor/phptars/tars-client/src/Communicator.php	/^    private function swooleTcp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	v
timeout	src/vendor/phptars/tars-client/src/Communicator.php	/^    private function swooleUdp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	v
timeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    private function socketTcp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	v
timeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    private function swooleCoroutineTcp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	v
timeout	src/vendor/phptars/tars-monitor/src/client/CommunicatorMonitor.php	/^    private function swooleTcp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	v
timeout	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public $timeout;$/;"	v
timeout	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    private function socketTcp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	v
timeout	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    private function socketUdp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	v
timeout	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    private function swooleCoroutineTcp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	v
timeout	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    private function swooleCoroutineUdp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	v
timeout	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    private function swooleTcp($sIp, $iPort, $requestBuf, $timeout = 5)$/;"	v
timeout	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^    private function swooleUdp($sIp, $iPort, $requestBuf, $timeout = 2)$/;"	v
timeout	src/vendor/phptars/tars-report/src/ServerF.php	/^            $timeout = 2;$/;"	v
timeout	src/vendor/phptars/tars-report/src/ServerFAsync.php	/^            $timeout = 2;$/;"	v
timeout	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $timeout = 2;$/;"	v
timeout	src/vendor/phptars/tars-server/src/core/Server.php	/^                    $timeout = $data['timeout'];$/;"	v
timeout	src/vendor/phptars/tars-server/tests/testConf.php	/^        $timeout = trim($subParts[3], 't ') \/ 1000;$/;"	v
timeout	src/vendor/phptars/tars-utils/src/Utils.php	/^        $timeout = trim($subParts[3], 't ') \/ 1000;$/;"	v
timeoutCount	src/vendor/phptars/tars-monitor/src/StatFWrapper.php	/^                    $timeoutCount = 1;$/;"	v
timeoutCount	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgBody.php	/^    public $timeoutCount;$/;"	v
timerDir	src/vendor/phptars/tars-server/src/core/Server.php	/^                $timerDir = $this->basePath . 'src\/timer\/';$/;"	v
timers	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $timers;$/;"	v
timestamp	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $timestamp = $record['datetime']->getTimestamp();$/;"	v
timestamp	src/vendor/phptars/tars-registry/src/QueryFWrapper.php	/^                    $timestamp = $result['timestamp'];$/;"	v
timestamp	src/vendor/phptars/tars-registry/src/RouteTable.php	/^        $timestamp = $result['timestamp'];$/;"	v
timestampValidity	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $timestampValidity = $record['datetime']->getTimestamp() - $this->time;$/;"	v
timestampValidity	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $timestampValidity = time() - $this->time;$/;"	v
timestamps	src/model/mysql/content/ArticleAttr.php	/^    protected $timestamps = '';$/;"	v
timestamps	src/model/mysql/content/ArticleBasic.php	/^    protected $timestamps = '';$/;"	v
timestamps	src/model/mysql/content/ArticleDetails.php	/^    protected $timestamps = '';$/;"	v
timestamps	src/model/mysql/content/ArticleRelationship.php	/^    protected $timestamps = '';$/;"	v
timestamps	src/model/mysql/content/ArticleResource.php	/^    protected $timestamps = '';$/;"	v
timezone	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected static $timezone;$/;"	v
title	src/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^        $title = htmlspecialchars($title, ENT_NOQUOTES, 'UTF-8');$/;"	v
title	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->title = $title ?: gethostname();$/;"	v
title	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $title;$/;"	v
title	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    public function __construct($token, $users, $title = null, $level = Logger::CRITICAL, $bubble = true, $useSSL = true, $highPriorityLevel = Logger::CRITICAL, $emergencyLevel = Logger::EMERGENCY, $retry = 30, $expire = 25200)$/;"	v
titleIsset	src/model/mysql/content/ArticleBasic.php	/^    public function titleIsset($title)$/;"	f
title_basic_ids	src/service/validate/article/ValidateArticle.php	/^        $title_basic_ids = $articleBasicModel->titleIsset(trim($this->data['title']));$/;"	v
tmp	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $tmp = $this->VecMapReplace($word);$/;"	v
tmpChar	src/vendor/phptars/tars2php/src/tars2php.php	/^                $tmpChar = fgetc($this->fp);$/;"	v
tmpDir	src/vendor/phptars/tars-deploy/src/Deploy.php	/^        $tmpDir = $tarsPHPRoot.DIRECTORY_SEPARATOR.'tmp';$/;"	v
tmpId	src/vendor/phptars/tars-server/src/core/Server.php	/^                            $tmpId = [];$/;"	v
tmpProjectDir	src/vendor/phptars/tars-deploy/src/Deploy.php	/^        $tmpProjectDir = $tmpDir.DIRECTORY_SEPARATOR.$serverName;$/;"	v
to	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * A convenient SELECT * function to get one record.$/;"	f
to	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * A convenient SELECT COLUMN function to get a single column value from one row$/;"	f
to	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Helper function to add variables into bind parameters array and will return$/;"	f
to	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Helper function to add variables into bind parameters array in bulk$/;"	f
to	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Helper function to add variables into bind parameters array$/;"	f
to	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Helper function to add variables into the query statement$/;"	f
to	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Helper function to create dbObject with JSON return type$/;"	f
to	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Helper function to create dbObject with array return type$/;"	f
to	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Helper function to create dbObject with object return type.$/;"	f
to	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Helper function to execute raw SQL query and return only 1 column of results.$/;"	f
to	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Helper function to execute raw SQL query and return only 1 row of results.$/;"	f
to	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Internal function to build and execute INSERT\/REPLACE calls$/;"	f
to	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^     * Convinient function to fetch one object. Mostly will be togeather with where()$/;"	f
to	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^     * Helper function to create a virtual table class$/;"	f
to	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^     * Helper function to create dbObject with Array return type$/;"	f
to	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^     * Helper function to create dbObject with Json return type$/;"	f
to	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^     * Helper function to create dbObject with Object return type.$/;"	f
to	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^     * Transparently creating dbObject class to provide smooth API like name::get() name::orderBy()->get()$/;"	c
to	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $this->to = is_array($to) ? $to : array($to);$/;"	v
to	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $to;$/;"	v
to	src/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^ * NativeMailerHandler uses the mail() function to send the emails$/;"	f
to	src/vendor/monolog/monolog/src/Monolog/Processor/ProcessorInterface.php	/^ * An optional interface to allow labelling Monolog processors.$/;"	i
to	src/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $to = 'spammer@example.org';$/;"	v
toArray	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public function toArray () {$/;"	f
toJson	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public function toJson () {$/;"	f
toJson	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected function toJson($data, $ignoreErrors = false)$/;"	f
toMonologLevel	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public static function toMonologLevel($level)$/;"	f
token	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^        $this->token = $token;$/;"	v
token	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    protected $token;$/;"	v
token	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $this->token = $token;$/;"	v
token	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private $token;$/;"	v
token	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $this->token = $token;$/;"	v
token	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    protected $token;$/;"	v
token	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->token = $token;$/;"	v
token	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $token;$/;"	v
token	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $this->token = $token;$/;"	v
token	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    private $token;$/;"	v
token	src/vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^        $this->token = $token;$/;"	v
token	src/vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^    private $token;$/;"	v
tokens	src/vendor/phptars/tars2php/src/tars2php.php	/^                $tokens = preg_split('\/#include\/', $line);$/;"	v
tokens	src/vendor/phptars/tars2php/src/tars2php.php	/^        $tokens = preg_split('\/\\(\/', $line, 2);$/;"	v
total	src/servant/Article/Server/Obj/classes/ArticleList.php	/^	public $total; $/;"	v
totalCount	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $this->totalCount = $totalCount[0];$/;"	v
totalCount	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $totalCount = $stmt->fetch_row();$/;"	v
totalCount	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->totalCount = 0;$/;"	v
totalCount	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public $totalCount = 0;$/;"	v
totalLen	src/vendor/phptars/tars-client/src/Communicator.php	/^                    $totalLen = $list['len'];$/;"	v
totalLen	src/vendor/phptars/tars-client/src/Communicator.php	/^        $totalLen = 0;$/;"	v
totalLen	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^                    $totalLen = $list['len'];$/;"	v
totalLen	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $totalLen = 0;$/;"	v
totalLen	src/vendor/phptars/tars-report/src/ServerFSync.php	/^                        $totalLen = $list['len'];$/;"	v
totalLen	src/vendor/phptars/tars-report/src/ServerFSync.php	/^            $totalLen = 0;$/;"	v
totalPages	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->totalPages = ceil($this->totalCount \/ $this->pageLimit);$/;"	v
totalPages	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public $totalPages = 0;$/;"	v
totalPages	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public static $totalPages = 0;$/;"	v
totalRspTime	src/vendor/phptars/tars-monitor/src/classes/StatMicMsgBody.php	/^    public $totalRspTime;$/;"	v
trace	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public $trace = array();$/;"	v
trace	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^            $trace = debug_backtrace((PHP_VERSION_ID < 50306) ? 2 : DEBUG_BACKTRACE_IGNORE_ARGS);$/;"	v
trace	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^            $trace = $e->getTrace();$/;"	v
trace	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^        $trace = $e->getTrace();$/;"	v
trace	src/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^        $trace = debug_backtrace((PHP_VERSION_ID < 50306) ? 2 : DEBUG_BACKTRACE_IGNORE_ARGS);$/;"	v
trace	src/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^        $trace = $e->getTrace();$/;"	v
traceEnabled	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->traceEnabled = $enabled;$/;"	v
traceEnabled	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $traceEnabled;$/;"	v
traceStartQ	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $this->traceStartQ = microtime(true);$/;"	v
traceStartQ	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $traceStartQ;$/;"	v
traceStripPrefix	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $this->traceStripPrefix = $stripPrefix;$/;"	v
traceStripPrefix	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    protected $traceStripPrefix;$/;"	v
transactionName	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $this->transactionName = $transactionName;$/;"	v
transactionName	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $transactionName = null$/;"	v
transactionName	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected $transactionName;$/;"	v
transactionName	src/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public static $transactionName;$/;"	v
tripleTab	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $tripleTab = "\\t\\t\\t";$/;"	v
trueFalseDataProvider	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function trueFalseDataProvider()$/;"	f
truncatedString	src/vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^        $truncatedString = str_repeat("derp", 16254).'d';$/;"	v
ts	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^            $ts = \\DateTime::createFromFormat('U.u', sprintf('%.6F', microtime(true)), static::$timezone);$/;"	v
ts	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^            $ts = new \\DateTime(null, static::$timezone);$/;"	v
ttl	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^            $this->ttl = $config['ttl'];$/;"	v
ttl	src/vendor/phptars/tars-monitor/src/cache/RedisStoreCache.php	/^    protected $ttl = 600;   \/\/Remaining Time To Live, in seconds.$/;"	v
type	src/vendor/catfan/medoo/src/Medoo.php	/^					$type = gettype($value);$/;"	v
type	src/vendor/catfan/medoo/src/Medoo.php	/^				$this->type = 'mysql';$/;"	v
type	src/vendor/catfan/medoo/src/Medoo.php	/^				$this->type === 'mysql' && isset($options[ 'collation' ]) ?$/;"	v
type	src/vendor/catfan/medoo/src/Medoo.php	/^				$type = gettype($value);$/;"	v
type	src/vendor/catfan/medoo/src/Medoo.php	/^				$type === 'array' &&$/;"	v
type	src/vendor/catfan/medoo/src/Medoo.php	/^			$this->type = strtolower($options[ 'database_type' ]);$/;"	v
type	src/vendor/catfan/medoo/src/Medoo.php	/^			$type = gettype($value);$/;"	v
type	src/vendor/catfan/medoo/src/Medoo.php	/^			if (isset($where[ 'MATCH' ]) && $this->type === 'mysql')$/;"	v
type	src/vendor/catfan/medoo/src/Medoo.php	/^		$type = $this->type;$/;"	v
type	src/vendor/catfan/medoo/src/Medoo.php	/^	protected $type;$/;"	v
type	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $type = $matches[3];$/;"	v
type	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $type = 'd';$/;"	v
type	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                $type = $desc[0];$/;"	v
type	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $type = null;$/;"	v
type	src/vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^        $this->type = $type;$/;"	v
type	src/vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    protected $type;$/;"	v
type	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $type  = $this->logLevels[$record['level']];$/;"	v
type	src/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $type  = 'TABLE';$/;"	v
type	src/vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^        $type = ErrorLogHandler::OPERATING_SYSTEM;$/;"	v
type	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                    if ($type === 'map' || $type === 'vector') {$/;"	v
type	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $type = $inParam['type'];$/;"	v
type	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $type = $outParam['type'];$/;"	v
type	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                if ($type === 'map' || $type === 'vector') {$/;"	v
type	src/vendor/phptars/tars2php/src/tars2php.php	/^                            $type = $word;$/;"	v
type	src/vendor/phptars/tars2php/src/tars2php.php	/^                            $type = 'int';$/;"	v
type	src/vendor/phptars/tars2php/src/tars2php.php	/^                            $type = 'unsigned byte';$/;"	v
type	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $type = $type[1];$/;"	v
type	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $type = $word;$/;"	v
type	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $type = 'int';$/;"	v
type	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $type = 'unsigned byte';$/;"	v
type	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $type = explode('::', $word);$/;"	v
type	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $type = $word;$/;"	v
type	src/vendor/phptars/tars2php/src/tars2php.php	/^            $type = $param['type'];$/;"	v
type	src/vendor/phptars/tars2php/src/tars2php.php	/^            $type = '';$/;"	v
type	src/vendor/phptars/tars2php/src/tars2php.php	/^        $type = $returnInfo['type'];$/;"	v
type	src/vendor/phptars/tars2php/src/tars2php.php	/^        $type = '';$/;"	v
typeMap	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function typeMap($value, $type)$/;"	f
typeMap	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static $typeMap = array($/;"	v
types	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $types = Array("s" => "second", "m" => "minute", "h" => "hour", "d" => "day", "M" => "month", "Y" => "year");$/;"	v
udpConnection	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $this->udpConnection = socket_create(AF_INET, SOCK_DGRAM, 0);$/;"	v
udpConnection	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private $udpConnection;$/;"	v
uid	src/vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^        $this->uid = $this->generateUid($length);$/;"	v
uid	src/vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^        $this->uid = $this->generateUid(strlen($this->uid));$/;"	v
uid	src/vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^    private $uid;$/;"	v
uid1	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $this->assertNotSame($uid1, $uid1 = $processorUid1->getUid());$/;"	v
uid1	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $uid1 = $processorUid1->getUid();$/;"	v
uid2	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $this->assertNotSame($uid2, $uid2 = $processorUid2->getUid());$/;"	v
uid2	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $uid2 = $processorUid2->getUid();$/;"	v
uint8Buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $uint8Buffer = \\TUPAPI::putUint8($paramName, $uint8, $iVersion);$/;"	v
uint8Buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapper.php	/^                $uint8Buffer = \\TUPAPI::putUint8($tag, $uint8, $iVersion);$/;"	v
uint8Buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $uint8Buffer = \\TUPAPI::putUint8($paramName, $uint8, $iVersion);$/;"	v
uint8Buffer	src/vendor/phptars/tars-monitor/src/client/TUPAPIWrapperMonitor.php	/^                $uint8Buffer = \\TUPAPI::putUint8($tag, $uint8, $iVersion);$/;"	v
uint8Buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $uint8Buffer = \\TUPAPI::putUint8($paramName, $uint8, $iVersion);$/;"	v
uint8Buffer	src/vendor/phptars/tars-registry/src/client/TUPAPIWrapperRegistry.php	/^                $uint8Buffer = \\TUPAPI::putUint8($tag, $uint8, $iVersion);$/;"	v
uncaughtExceptionLevel	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^            $this->uncaughtExceptionLevel === null ? LogLevel::ERROR : $this->uncaughtExceptionLevel,$/;"	v
uncaughtExceptionLevel	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->uncaughtExceptionLevel = $level;$/;"	v
uncaughtExceptionLevel	src/vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $uncaughtExceptionLevel;$/;"	v
under	src/vendor/composer/ClassLoader.php	/^ * the autoloader will first look for the class under the component\/$/;"	c
undlineToHump	src/common/Common.php	/^    public static function undlineToHump($str = '')$/;"	f
unid	src/vendor/phptars/tars-monitor/src/classes/StatSampleMsg.php	/^    public $unid;$/;"	v
uniqueName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->uniqueName = $this->appName.'_'.$this->serverName.'_'.$this->objName;$/;"	v
uniqueName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->uniqueName = $uniqueName;$/;"	v
uniqueName	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $uniqueName;$/;"	v
unlock	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^	public function unlock()$/;"	f
unpackMethod	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                $unpackMethod = $unpackMethods[$type];$/;"	v
unpackMethods	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^            $unpackMethods = [$/;"	v
unpackMethods	src/vendor/phptars/tars2php/src/tars2php.php	/^            $unpackMethods = Utils::getUnpackMethods($type);$/;"	v
unpackMethods	src/vendor/phptars/tars2php/src/tars2php.php	/^        $unpackMethods = [$/;"	v
unpackReq	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^    public function unpackReq($data)$/;"	f
unpackResult	src/vendor/phptars/tars-server/src/core/Event.php	/^                $unpackResult = $result['unpackResult'];$/;"	v
unpackResult	src/vendor/phptars/tars-server/src/core/Server.php	/^        $unpackResult = \\TUPAPI::decodeReqPacket($data);$/;"	v
unpackResult	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $unpackResult = $this->unpackReq($request->reqBuf);$/;"	v
unregister	src/vendor/composer/ClassLoader.php	/^    public function unregister()$/;"	f
unsetGlobal	src/vendor/phptars/tars-server/src/core/Request.php	/^    public function unsetGlobal()$/;"	f
update	src/impl/ArticleServantImpl.php	/^	public function update($version,$param)$/;"	f
update	src/servant/Article/Server/Obj/ArticleServant.php	/^	public function update($version,$param);$/;"	f
update	src/service/article/Article.php	/^    public function update()$/;"	f
update	src/service/validate/article/ValidateArticle.php	/^    public function update()$/;"	f
update	src/vendor/catfan/medoo/src/Medoo.php	/^	public function update($table, $data, $where = null)$/;"	f
update	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function update($tableName, $tableData, $numRows = null)$/;"	f
update	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    public function update ($data = null) {$/;"	f
updateBasic	src/model/mysql/content/ArticleBasic.php	/^    public function updateBasic($ab_id,$data)$/;"	f
updateBasicRes	src/service/article/Article.php	/^        $updateBasicRes = $articleBasicModel->updateBasic($ab_id,$data);$/;"	v
updateDetail	src/model/mysql/content/ArticleDetails.php	/^    public function updateDetail($ab_id,$content)$/;"	f
updateMvs	src/libs/Mysql.php	/^    public function updateMvs($where,$param,$data)$/;"	f
updateRelation	src/model/mysql/content/ArticleRelationship.php	/^    public function updateRelation($data, $ab_id)$/;"	f
updateResource	src/model/mysql/content/ArticleResource.php	/^    public function updateResource($data, $ab_id)$/;"	f
updatedAt	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^            $this->updatedAt = date("Y-m-d H:i:s");$/;"	v
uri	src/vendor/phptars/tars-server/src/protocol/HTTPProtocol.php	/^        $uri = $request->data['server']['request_uri'];$/;"	v
url	src/vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^        $url = 'http:\/\/'.$basicAuth.$this->options['host'].':'.$this->options['port'].'\/'.$this->options['dbname'];$/;"	v
url	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $url = sprintf("https:\/\/%s\/%s\/%s\/", self::HOST, $endpoint, $this->token);$/;"	v
url	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->url = $this->getTimedFilename();$/;"	v
url	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^            $this->url = $stream;$/;"	v
url	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    protected $url;$/;"	v
urlInfo	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $urlInfo = parse_url($url);$/;"	v
usage	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function usage()$/;"	f
useAttachment	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->useAttachment = $useAttachment;$/;"	v
useAttachment	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $useAttachment;$/;"	v
useFormattedMessage	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->useFormattedMessage = (bool) $value;$/;"	v
useFormattedMessage	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $useFormattedMessage = false;$/;"	v
useFormattedMessage	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    public function useFormattedMessage($value)$/;"	f
useFormatting	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^        $this->useFormatting = (bool) $useFormatting;$/;"	v
useFormatting	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^    protected $useFormatting;$/;"	v
useFormatting	src/vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^    public function __construct($realUsage = true, $useFormatting = true)$/;"	v
useIncludePath	src/vendor/composer/ClassLoader.php	/^        $this->useIncludePath = $useIncludePath;$/;"	v
useIncludePath	src/vendor/composer/ClassLoader.php	/^    private $useIncludePath = false;$/;"	v
useLocking	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $this->useLocking = $useLocking;$/;"	v
useLocking	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    protected $useLocking;$/;"	v
useMicrosecondTimestamps	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function useMicrosecondTimestamps($micro)$/;"	f
useMicrosecondTimestampsProvider	src/vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function useMicrosecondTimestampsProvider()$/;"	f
useSSL	src/vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^    public function __construct($token, $useSSL = true, $level = Logger::DEBUG, $bubble = true, $host = 'data.logentries.com')$/;"	v
useSSL	src/vendor/monolog/monolog/tests/Monolog/Handler/InsightOpsHandlerTest.php	/^        $useSSL = extension_loaded('openssl');$/;"	v
useSSL	src/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $useSSL = extension_loaded('openssl');$/;"	v
useShortAttachment	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->useShortAttachment = $useShortAttachment;$/;"	v
useShortAttachment	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $useShortAttachment;$/;"	v
useStaticLoader	src/vendor/composer/autoload_real.php	/^        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());$/;"	v
useStructs	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->useStructs = [];$/;"	v
useStructs	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $useStructs = [];$/;"	v
usecond	src/vendor/phptars/tars-client/src/Communicator.php	/^        $usecond = ($timeout - $second) * 1000000;$/;"	v
usecond	src/vendor/phptars/tars-registry/src/client/CommunicatorRegistry.php	/^        $usecond = ($timeout - $second) * 1000000;$/;"	v
used	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^     * Base header creation function used by init headers & record headers$/;"	f
user	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^            $this->user = $user;$/;"	v
user	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->user = null;$/;"	v
user	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $user;$/;"	v
user	src/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    private function createHandler($token = 'myToken', $user = 'myUser', $title = 'Monolog')$/;"	v
user	src/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $user = array($/;"	v
userIcon	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->userIcon = trim($userIcon, ':');$/;"	v
userIcon	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $userIcon;$/;"	v
username	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function __construct($host = null, $username = null, $password = null, $db = null, $port = null, $charset = 'utf8', $socket = null)$/;"	v
username	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->username = $username;$/;"	v
username	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $username;$/;"	v
username	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    public function __construct($channel = null, $username = null, $useAttachment = true, $userIcon = null, $useShortAttachment = false, $includeContextAndExtra = false, array $excludeFields = array(), FormatterInterface $formatter = null)$/;"	v
username	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    public function __construct($token, $channel, $username = null, $useAttachment = true, $iconEmoji = null, $level = Logger::CRITICAL, $bubble = true, $useShortAttachment = false, $includeContextAndExtra = false, array $excludeFields = array())$/;"	v
username	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $username = 'Monolog bot';$/;"	v
users	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->users = (array) $users;$/;"	v
users	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $users;$/;"	v
v1_vec	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $v1_vec = new \\TARS_Vector(\\TARS::STRING);$/;"	v
v1_vec	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$v1_vec = new \\TARS_Vector(\\TARS::STRING);$/;"	v
v2_vec	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $v2_vec = new \\TARS_Vector(new SimpleStruct());$/;"	v
v2_vec	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$v2_vec = new \\TARS_Vector(new SimpleStruct());$/;"	v
v3	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $v3 = TUPAPIWrapper::getVector('v3', 4, new \\TARS_Vector(\\TARS::INT32), $sBuffer, $this->_iVersion);$/;"	v
v3	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $v3 = TUPAPIWrapper::getVector('v3', 5, new \\TARS_Vector(new OutStruct()), $sBuffer, $this->_iVersion);$/;"	v
v3	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$v3 = TUPAPIWrapper::getVector("v3",4,new \\TARS_Vector(\\TARS::INT32),$sBuffer,$this->_iVersion);$/;"	v
v3	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$v3 = TUPAPIWrapper::getVector("v3",5,new \\TARS_Vector(new OutStruct()),$sBuffer,$this->_iVersion);$/;"	v
v4	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $v4 = TUPAPIWrapper::getVector('v4', 5, new \\TARS_Vector(new OutStruct()), $sBuffer, $this->_iVersion);$/;"	v
v4	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $v4 = TUPAPIWrapper::getVector('v4', 6, new \\TARS_Vector(\\TARS::INT32), $sBuffer, $this->_iVersion);$/;"	v
v4	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$v4 = TUPAPIWrapper::getVector("v4",5,new \\TARS_Vector(new OutStruct()),$sBuffer,$this->_iVersion);$/;"	v
v4	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$v4 = TUPAPIWrapper::getVector("v4",6,new \\TARS_Vector(\\TARS::INT32),$sBuffer,$this->_iVersion);$/;"	v
vInfo	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgBody.php	/^        $this->vInfo = new \\TARS_Vector(new StatPropInfo());$/;"	v
vInfo	src/vendor/phptars/tars-monitor/src/classes/StatPropMsgBody.php	/^    public $vInfo;$/;"	v
val	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                    } elseif ($val != 'DBNULL' || $val == '0') {$/;"	v
val	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $val = 'NULL';$/;"	v
val	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                $val = '[object]';$/;"	v
val	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^                else if ($val != 'DBNULL' || $val == '0')$/;"	v
val	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $val = $vals[$i++];$/;"	v
val	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $val = $value[$key];$/;"	v
val	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^        $val = Array('query' => $this->_query,$/;"	v
val	src/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^            $val = is_scalar($val) || null === $val ? $val : $this->toJson($val);$/;"	v
validLine	src/vendor/phptars/tars2php/src/tars2php.php	/^                $validLine = true;$/;"	v
validLine	src/vendor/phptars/tars2php/src/tars2php.php	/^        $validLine = false;$/;"	v
validLines	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^        $validLines = [];$/;"	v
validLogs	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $validLogs = array();$/;"	v
validate	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function validate ($data) {$/;"	f
validateModel	src/service/article/Article.php	/^        $validateModel = new  ValidateArticle($this->param);$/;"	v
validateStringLength	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private function validateStringLength($str, $length)$/;"	f
validateTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function validateTimeout($value)$/;"	f
value	src/vendor/catfan/medoo/src/Medoo.php	/^								$value = $data[ 0 ];$/;"	v
value	src/vendor/catfan/medoo/src/Medoo.php	/^							$value = [ $value ];$/;"	v
value	src/vendor/catfan/medoo/src/Medoo.php	/^							$value = serialize($value);$/;"	v
value	src/vendor/catfan/medoo/src/Medoo.php	/^						$value = serialize($value);$/;"	v
value	src/vendor/catfan/medoo/src/Medoo.php	/^						elseif ($value === 'ASC' || $value === 'DESC')$/;"	v
value	src/vendor/catfan/medoo/src/Medoo.php	/^					$value = $data[ $key ];$/;"	v
value	src/vendor/catfan/medoo/src/Medoo.php	/^			$value = ($value ? '1' : '0');$/;"	v
value	src/vendor/catfan/medoo/src/Medoo.php	/^			$value = null;$/;"	v
value	src/vendor/catfan/medoo/src/Medoo.php	/^	public $value;$/;"	v
value	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $value = $tableData[$column];$/;"	v
value	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                    $value = $id;$/;"	v
value	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                $value = $data[$key];$/;"	v
value	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^                $value = null;$/;"	v
value	src/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^            $value = $instance->format($value);$/;"	v
value	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $value = $data->__toString();$/;"	v
value	src/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $value = $this->toJson($data, true);$/;"	v
value	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^                $value = static::quote('');$/;"	v
value	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^            $value = json_encode($value);$/;"	v
value	src/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $value = is_array($value)$/;"	v
value	src/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^            $value = json_encode($value);$/;"	v
value	src/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^                    && $value === $expectedMessage;$/;"	v
value	src/vendor/phptars/tars-monitor/src/classes/StatPropInfo.php	/^    public $value;$/;"	v
value	src/vendor/phptars/tars-server/src/core/Response.php	/^        $value = '',$/;"	v
value	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                        $value = $proto;$/;"	v
value	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                        $value = $unpackMethod($inParam['name'], $proto, $sBuffer, false, $iVersion);$/;"	v
value	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                        $value = $unpackMethod($inParam['name'], $sBuffer, false, $iVersion);$/;"	v
value	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                        $value = $unpackMethod($inParam['tag'], $proto, $sBuffer, false, $iVersion);$/;"	v
value	src/vendor/phptars/tars-server/src/protocol/TARSProtocol.php	/^                        $value = $unpackMethod($inParam['tag'], $sBuffer, false, $iVersion);$/;"	v
value	src/vendor/phptars/tars-server/tests/testConf.php	/^                        $value = substr($line, $pos + 1, strlen($line) - $pos);$/;"	v
value	src/vendor/phptars/tars-utils/src/Utils.php	/^                        $value = substr($line, $pos + 1, strlen($line) - $pos);$/;"	v
valueName	src/vendor/phptars/tars2php/src/tars2php.php	/^                                    $valueName = $word;$/;"	v
valueName	src/vendor/phptars/tars2php/src/tars2php.php	/^                                $valueName = $word;$/;"	v
valueName	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $valueName = $word;$/;"	v
valueName	src/vendor/phptars/tars2php/src/tars2php.php	/^                $valueName = $word;$/;"	v
valueName	src/vendor/phptars/tars2php/src/tars2php.php	/^            $valueName = $param['valueName'];$/;"	v
valueName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $valueName = $returnInfo['valueName'];$/;"	v
valueName	src/vendor/phptars/tars2php/src/tars2php.php	/^        $valueName = '';$/;"	v
values	src/vendor/catfan/medoo/src/Medoo.php	/^			$values = [];$/;"	v
var	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        foreach ($vars as $var => $val) {$/;"	v
var	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        foreach ($vars['context'] as $var => $val) {$/;"	v
var	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        foreach ($vars['extra'] as $var => $val) {$/;"	v
variables	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->variables = '';$/;"	v
variables	src/vendor/phptars/tars2php/src/tars2php.php	/^    public $variables = '';$/;"	v
vars	src/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $vars = parent::format($record);$/;"	v
vars	src/vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^    public function capture($data, $stack, $vars = null)$/;"	v
vcs_vec	src/vendor/phptars/tars-client/tests/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^            $vcs_vec = new \\TARS_Vector(new ComplicatedStruct());$/;"	v
vcs_vec	src/vendor/phptars/tars2php/tests/client/PHPTest/PHPServer/obj/TestTafServiceServant.php	/^			$vcs_vec = new \\TARS_Vector(new ComplicatedStruct());$/;"	v
vecFill	src/vendor/phptars/tars2php/src/tars2php.php	/^                $vecFill = $this->tripleTab.'$'.$valueName.'_vec = '.$this->getExtType($param['wholeType'], $valueName).';'.$this->returnSymbol.$/;"	v
vendorDir	src/vendor/composer/autoload_classmap.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
vendorDir	src/vendor/composer/autoload_files.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
vendorDir	src/vendor/composer/autoload_namespaces.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
vendorDir	src/vendor/composer/autoload_psr4.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
verb	src/vendor/phptars/tars-server/src/protocol/HTTPProtocol.php	/^        $verb = $request->data['server']['request_method'];$/;"	v
version	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^        $this->version = $version;$/;"	v
version	src/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    protected $version;$/;"	v
version	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^            $this->version = 2;$/;"	v
version	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^            $this->version = 3;$/;"	v
version	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected $version;$/;"	v
version	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            'notify' => $this->version == self::API_V1 ?$/;"	v
version	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $this->version = $version;$/;"	v
version	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private $version;$/;"	v
vf	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $vf = TUPAPIWrapper::getVector('vf', 2, new \\TARS_Vector(\\TARS::STRING), $sBuffer, $this->_iVersion);$/;"	v
vf	src/vendor/phptars/tars-config/src/ConfigServant.php	/^            $vf = TUPAPIWrapper::getVector('vf', 3, new \\TARS_Vector(\\TARS::STRING), $sBuffer, $this->_iVersion);$/;"	v
warn	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function warn($message, array $context = array())$/;"	f
warning	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function warning($message, array $context = array())$/;"	f
warning	src/vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function warning($message, array $context = array())$/;"	f
warning	src/vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function warning($message, array $context = array());$/;"	f
warning	src/vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function warning($message, array $context = array())$/;"	f
warningLoggerRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $warningLoggerRecord = $this->getRecord(Logger::WARNING);$/;"	v
was	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Get where and what function was called for query stored in MysqliDB->trace$/;"	f
webhookUrl	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $this->webhookUrl = $webhookUrl;$/;"	v
webhookUrl	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    private $webhookUrl;$/;"	v
weight	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public $weight;$/;"	v
weightType	src/vendor/phptars/tars-registry/src/EndpointF.php	/^    public $weightType;$/;"	v
where	src/model/mysql/content/ArticleAttr.php	/^        $where = 'ab_id = ?';$/;"	v
where	src/model/mysql/content/ArticleBasic.php	/^        $where = " WHERE ".implode(' AND ',$where_arr);$/;"	v
where	src/model/mysql/content/ArticleBasic.php	/^        $where = 'ab_id = ? AND del_flag = 1';$/;"	v
where	src/model/mysql/content/ArticleBasic.php	/^        $where = 'ab_id = ?';$/;"	v
where	src/model/mysql/content/ArticleBasic.php	/^        $where = 'title = ? AND del_flag = 1';$/;"	v
where	src/model/mysql/content/ArticleDetails.php	/^        $where = 'ab_id = ?';$/;"	v
where	src/model/mysql/content/ArticleRelationship.php	/^        $where = 'top_id = ? Or child_id = ?';$/;"	v
where	src/model/mysql/content/ArticleRelationship.php	/^        $where = 'top_id = ? and del_flag != 0';$/;"	v
where	src/model/mysql/content/ArticleResource.php	/^        $where = 'ab_id = ? and del_flag != 0';$/;"	v
where	src/model/mysql/content/ArticleResource.php	/^        $where = 'ab_id = ?';$/;"	v
where	src/servant/Article/Server/Obj/classes/ListParam.php	/^	public $where; $/;"	v
where	src/service/article/Article.php	/^        $where = $this->param;$/;"	v
where	src/service/article/Article.php	/^    public $where;$/;"	v
where	src/vendor/catfan/medoo/src/Medoo.php	/^					$where = $columns;$/;"	v
where	src/vendor/catfan/medoo/src/Medoo.php	/^					$where = $join;$/;"	v
where	src/vendor/catfan/medoo/src/Medoo.php	/^					$where = null;$/;"	v
where	src/vendor/catfan/medoo/src/Medoo.php	/^				$where = $columns;$/;"	v
where	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function selectContext($table, &$map, $join, &$columns = null, $where = null, $column_fn = null)$/;"	v
where	src/vendor/catfan/medoo/src/Medoo.php	/^	public function has($table, $join, $where = null)$/;"	v
where	src/vendor/catfan/medoo/src/Medoo.php	/^	public function replace($table, $columns, $where = null)$/;"	v
where	src/vendor/catfan/medoo/src/Medoo.php	/^	public function update($table, $data, $where = null)$/;"	v
where	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function where($whereProp, $whereValue = 'DBNULL', $operator = '=', $cond = 'AND')$/;"	f
whereClause	src/vendor/catfan/medoo/src/Medoo.php	/^	protected function whereClause($where, &$map)$/;"	f
whereValue	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^            $whereValue = $whereValue[$key];$/;"	v
whereValue	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function joinOrWhere($whereJoin, $whereProp, $whereValue = 'DBNULL', $operator = '=', $cond = 'AND')$/;"	v
whereValue	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function joinWhere($whereJoin, $whereProp, $whereValue = 'DBNULL', $operator = '=', $cond = 'AND')$/;"	v
whereValue	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function orWhere($whereProp, $whereValue = 'DBNULL', $operator = '=')$/;"	v
whereValue	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function where($whereProp, $whereValue = 'DBNULL', $operator = '=', $cond = 'AND')$/;"	v
where_arr	src/model/mysql/content/ArticleBasic.php	/^        $where_arr = [];$/;"	v
where_clause	src/vendor/catfan/medoo/src/Medoo.php	/^				$where_clause = ' WHERE ' . $this->dataImplode($conditions, $map, ' AND');$/;"	v
where_clause	src/vendor/catfan/medoo/src/Medoo.php	/^		$where_clause = '';$/;"	v
where_keys	src/vendor/catfan/medoo/src/Medoo.php	/^			$where_keys = array_keys($where);$/;"	v
wholeType	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $wholeType = $type;$/;"	v
wholeType	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $wholeType = $type;$/;"	v
wholeType	src/vendor/phptars/tars2php/src/tars2php.php	/^            $wholeType = $param['wholeType'];$/;"	v
wholeType	src/vendor/phptars/tars2php/src/tars2php.php	/^            $wholeType = '';$/;"	v
wholeType	src/vendor/phptars/tars2php/src/tars2php.php	/^        $wholeType = $returnInfo['wholeType'];$/;"	v
wholeType	src/vendor/phptars/tars2php/src/tars2php.php	/^        $wholeType = '';$/;"	v
wholeTypeMap	src/vendor/phptars/tars2php/src/tars2php.php	/^    public static $wholeTypeMap = array($/;"	v
width	src/vendor/phptars/tars-monitor/src/classes/StatSampleMsg.php	/^    public $width;$/;"	v
wildfire	src/vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^        $wildfire = new WildfireFormatter();$/;"	v
will	src/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^     * Unless the bubbling is interrupted (by returning true), the Logger class will keep on$/;"	c
will	src/vendor/monolog/monolog/src/Monolog/ResettableInterface.php	/^ * Handler or Processor implementing this interface will be reset when Logger::reset() is called.$/;"	i
with	src/vendor/joshcam/mysqli-database-class/dbObject.php	/^    private function with ($objectName) {$/;"	f
withName	src/vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function withName($name)$/;"	f
withServant	src/vendor/phptars/tars2php/src/tars2php.php	/^        $this->withServant = $config['withServant'];$/;"	v
withTotalCount	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^    public function withTotalCount()$/;"	f
word	src/vendor/phptars/tars2php/src/tars2php.php	/^                                $word = '';$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^                            $word = $word[1];$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^                            $word = '';$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^                            $word = explode('::', $word);$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $word = $word.' ';$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $word = $word[1];$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $word = '';$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^                        $word = explode('::', $word);$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^                    $word = '';$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^                $word = $words[1];$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^                $word = '\\\\'.$this->namespaceName.'\\\\classes\\\\'.$word;$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^                $word = 'new '.$word.'()';$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^                $word = preg_replace('\/\\b'.$key.'\\b\/', $value, $word);$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^            $word = '';$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^            $word = 'new '.$word.'()';$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^            $word = preg_replace('\/\\b'.$key.'\\b\/', $value, $word);$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^        $word = '';$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^        $word = trim($word);$/;"	v
word	src/vendor/phptars/tars2php/src/tars2php.php	/^        $word = trim($word, 'new ');$/;"	v
words	src/vendor/phptars/tars2php/src/tars2php.php	/^                $words = explode('::', $word);$/;"	v
workerNum	src/vendor/phptars/tars-server/src/core/Server.php	/^                        $workerNum = count($ret);$/;"	v
worker_num	src/vendor/phptars/tars-server/src/core/Server.php	/^        $this->worker_num = $this->setting['worker_num'];$/;"	v
worker_num	src/vendor/phptars/tars-server/src/core/Server.php	/^    protected $worker_num = 4;$/;"	v
would	src/vendor/joshcam/mysqli-database-class/MysqliDb.php	/^     * Inheriting this class would require reloading connection info.$/;"	c
wrappedResource	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^            $wrappedResource = new TestFooNorm;$/;"	v
wrapper	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^        $this->wrapper = new HandlerWrapper($this->handler);$/;"	v
wrapper	src/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    private $wrapper;$/;"	v
wrapper	src/vendor/phptars/tars-registry/tests/demo.php	/^$wrapper = new \\Tars\\registry\\QueryFWrapper('tars.tarsregistry.QueryObj@tcp -h 172.16.0.161 -p 17890', 1, 60000);$/;"	v
wrapper	src/vendor/phptars/tars-registry/tests/demo.php	/^$wrapper = new \\Tars\\registry\\QueryFWrapper('tars.tarsregistry.QueryObj@tcp -h 172.16.0.161 -p 17890', 2, 60000);$/;"	v
write	src/vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php	/^    abstract protected function write(array $record);$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    public function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^    public function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    public function write($line, $header = "")$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    protected function write(array $record)$/;"	f
write	src/vendor/phptars/tars-log/src/handler/TarsHandler.php	/^    protected function write(array $record)$/;"	f
writeCapped	src/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    protected function writeCapped(array $record)$/;"	f
writeHttp	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private function writeHttp($data)$/;"	f
writeInterfaceLine	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function writeInterfaceLine($returnType, $funcName, $params)$/;"	f
writeOutput	src/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected static function writeOutput($str)$/;"	f
writeRecord	src/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    private function writeRecord($string)$/;"	f
writeStructLine	src/vendor/phptars/tars2php/src/tars2php.php	/^    public function writeStructLine($tag, $requireType, $type, $valueName, $wholeType, $defaultValue)$/;"	f
writeToSocket	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function writeToSocket($data)$/;"	f
writeUdp	src/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private function writeUdp($data)$/;"	f
writeZendMonitorCustomEvent	src/vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    protected function writeZendMonitorCustomEvent($level, $message, $formatted)$/;"	f
writingIsTimedOut	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function writingIsTimedOut($sent)$/;"	f
writingTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->writingTimeout = (float) $seconds;$/;"	v
writingTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $writingTimeout = (int) floor($this->writingTimeout);$/;"	v
writingTimeout	src/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $writingTimeout = 10;$/;"	v
wrongOptions	src/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $wrongOptions = array_diff(array_keys($options), array_keys($this->options));$/;"	v
x	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $x = array('foo' => 'bar');$/;"	v
y	src/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $y = array('x' => &$x);$/;"	v
yearCallback	src/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $yearCallback = function($ago) {$/;"	v
yesterday	src/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $yesterday = time() - 86400;$/;"	v
zendMonitor	src/vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^        $zendMonitor = $this->getMockBuilder('Monolog\\Handler\\ZendMonitorHandler')$/;"	v
zendMonitor	src/vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^        $zendMonitor = new ZendMonitorHandler();$/;"	v
zendMonitorHandler	src/vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^    protected $zendMonitorHandler;$/;"	v
